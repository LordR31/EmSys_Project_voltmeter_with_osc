
EmSys_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  00000da6  00000e1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000da6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e4a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ea8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000121f  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d5d  00000000  00000000  0000217f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000606  00000000  00000000  00002edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  000034e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000689  00000000  00000000  000035f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003a4  00000000  00000000  00003c7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00004021  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	9a c0       	rjmp	.+308    	; 0x14a <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ea       	ldi	r30, 0xA6	; 166
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 33       	cpi	r26, 0x30	; 48
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	b1 d0       	rcall	.+354    	; 0x282 <main>
 120:	40 c6       	rjmp	.+3200   	; 0xda2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <BUTTON_Init>:
////    BUTTONs    ////
///////////////////////


void BUTTON_Init(void){
	DDRE &= ~(1 << PE4); // set button as input
 124:	8d b1       	in	r24, 0x0d	; 13
 126:	8f 7e       	andi	r24, 0xEF	; 239
 128:	8d b9       	out	0x0d, r24	; 13
	PORTE |= (1 << PE4); // pull-up resistor
 12a:	8e b1       	in	r24, 0x0e	; 14
 12c:	80 61       	ori	r24, 0x10	; 16
 12e:	8e b9       	out	0x0e, r24	; 14
	EICRB &= ~(1 << ISC41);  // enable interrput on any logical change (01)
 130:	ea e6       	ldi	r30, 0x6A	; 106
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	8d 7f       	andi	r24, 0xFD	; 253
 138:	80 83       	st	Z, r24
	EICRB |= (1 << ISC40);
 13a:	80 81       	ld	r24, Z
 13c:	81 60       	ori	r24, 0x01	; 1
 13e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT4); // interrupt mask reg
 140:	8d b3       	in	r24, 0x1d	; 29
 142:	80 61       	ori	r24, 0x10	; 16
 144:	8d bb       	out	0x1d, r24	; 29

	sei();
 146:	78 94       	sei
 148:	08 95       	ret

0000014a <__vector_5>:
} 

ISR(INT4_vect) {
 14a:	1f 92       	push	r1
 14c:	0f 92       	push	r0
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	0f 92       	push	r0
 152:	11 24       	eor	r1, r1
 154:	8f 93       	push	r24
	if(is_adc_on)
 156:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 15a:	88 23       	and	r24, r24
 15c:	19 f0       	breq	.+6      	; 0x164 <__vector_5+0x1a>
		is_adc_on = false;
 15e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
 162:	03 c0       	rjmp	.+6      	; 0x16a <__vector_5+0x20>
	else
		is_adc_on = true;
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
}
 16a:	8f 91       	pop	r24
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <LED_Init>:
////////////////////
////    LEDs    ////
////////////////////

void LED_Init(void){
	DDRC |= (1 << PC5) | (1 << PC4) | (1 << PC3); // set pins as output
 176:	87 b1       	in	r24, 0x07	; 7
 178:	88 63       	ori	r24, 0x38	; 56
 17a:	87 b9       	out	0x07, r24	; 7
	
	// startup animation
	for(int i = 0; i < 6; i++){
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	0f c0       	rjmp	.+30     	; 0x1a0 <LED_Init+0x2a>
		PORTC ^= (1 << PC5) | (1 << PC4) | (1 << PC3);
 182:	98 b1       	in	r25, 0x08	; 8
 184:	88 e3       	ldi	r24, 0x38	; 56
 186:	89 27       	eor	r24, r25
 188:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18a:	4f e3       	ldi	r20, 0x3F	; 63
 18c:	82 e4       	ldi	r24, 0x42	; 66
 18e:	9f e0       	ldi	r25, 0x0F	; 15
 190:	41 50       	subi	r20, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <LED_Init+0x1a>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LED_Init+0x24>
 19a:	00 00       	nop

void LED_Init(void){
	DDRC |= (1 << PC5) | (1 << PC4) | (1 << PC3); // set pins as output
	
	// startup animation
	for(int i = 0; i < 6; i++){
 19c:	2f 5f       	subi	r18, 0xFF	; 255
 19e:	3f 4f       	sbci	r19, 0xFF	; 255
 1a0:	26 30       	cpi	r18, 0x06	; 6
 1a2:	31 05       	cpc	r19, r1
 1a4:	74 f3       	brlt	.-36     	; 0x182 <LED_Init+0xc>
		PORTC ^= (1 << PC5) | (1 << PC4) | (1 << PC3);
		_delay_ms(5000);
	}
}
 1a6:	08 95       	ret

000001a8 <ADC_Init>:
////    ADC0    ////
////////////////////


void ADC_Init(void){
	ADMUX = 1 << REFS0; // select avcc & adc0
 1a8:	80 e4       	ldi	r24, 0x40	; 64
 1aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable adc & set prescaler to 128
 1ae:	87 e8       	ldi	r24, 0x87	; 135
 1b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 1b4:	08 95       	ret

000001b6 <LCD_GPIO_Init>:
////    LCD    ////
///////////////////


void LCD_GPIO_Init(void){
	LCD_DATA_DDR = 0xFF; // All PORTA pins as output
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	81 b9       	out	0x01, r24	; 1
	LCD_CTRL_DDR |= (1 << LCD_RS_BIT) | (1 << LCD_EN_BIT); // RS and EN as output
 1ba:	87 b1       	in	r24, 0x07	; 7
 1bc:	83 60       	ori	r24, 0x03	; 3
 1be:	87 b9       	out	0x07, r24	; 7
 1c0:	08 95       	ret

000001c2 <LCD_write_byte>:
}

void LCD_write_byte(uint8_t byte, uint8_t rs){
	// RS
	if (rs) LCD_CTRL_PORT |= (1 << LCD_RS_BIT);
 1c2:	66 23       	and	r22, r22
 1c4:	21 f0       	breq	.+8      	; 0x1ce <LCD_write_byte+0xc>
 1c6:	98 b1       	in	r25, 0x08	; 8
 1c8:	91 60       	ori	r25, 0x01	; 1
 1ca:	98 b9       	out	0x08, r25	; 8
 1cc:	03 c0       	rjmp	.+6      	; 0x1d4 <LCD_write_byte+0x12>
	else    LCD_CTRL_PORT &= ~(1 << LCD_RS_BIT);
 1ce:	98 b1       	in	r25, 0x08	; 8
 1d0:	9e 7f       	andi	r25, 0xFE	; 254
 1d2:	98 b9       	out	0x08, r25	; 8

	// Data
	LCD_DATA_PORT = byte;
 1d4:	82 b9       	out	0x02, r24	; 2

	// Pulse EN
	LCD_CTRL_PORT |= (1 << LCD_EN_BIT);
 1d6:	88 b1       	in	r24, 0x08	; 8
 1d8:	82 60       	ori	r24, 0x02	; 2
 1da:	88 b9       	out	0x08, r24	; 8
 1dc:	89 ef       	ldi	r24, 0xF9	; 249
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LCD_write_byte+0x1e>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <LCD_write_byte+0x24>
 1e6:	00 00       	nop
	_delay_ms(1);
	LCD_CTRL_PORT &= ~(1 << LCD_EN_BIT);
 1e8:	88 b1       	in	r24, 0x08	; 8
 1ea:	8d 7f       	andi	r24, 0xFD	; 253
 1ec:	88 b9       	out	0x08, r24	; 8
 1ee:	89 ef       	ldi	r24, 0xF9	; 249
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_write_byte+0x30>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_write_byte+0x36>
 1f8:	00 00       	nop
 1fa:	08 95       	ret

000001fc <LCD_send_command>:
	_delay_ms(1);
}

void LCD_send_command(uint8_t cmd){
	LCD_write_byte(cmd, 0);
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	e1 cf       	rjmp	.-62     	; 0x1c2 <LCD_write_byte>
 200:	08 95       	ret

00000202 <LCD_send_data>:
}

void LCD_send_data(uint8_t data){
	LCD_write_byte(data, 1);
 202:	61 e0       	ldi	r22, 0x01	; 1
 204:	de cf       	rjmp	.-68     	; 0x1c2 <LCD_write_byte>
 206:	08 95       	ret

00000208 <LCD_set_cursor>:
}

void LCD_set_cursor(uint8_t row, uint8_t col){
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	1f 92       	push	r1
 20e:	1f 92       	push	r1
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
	uint8_t row_offsets[] = {0x00, 0x40};
 214:	19 82       	std	Y+1, r1	; 0x01
 216:	90 e4       	ldi	r25, 0x40	; 64
 218:	9a 83       	std	Y+2, r25	; 0x02
	if (row > 1) row = 1;
 21a:	82 30       	cpi	r24, 0x02	; 2
 21c:	08 f0       	brcs	.+2      	; 0x220 <LCD_set_cursor+0x18>
 21e:	81 e0       	ldi	r24, 0x01	; 1
	LCD_send_command(0x80 | (row_offsets[row] + col));
 220:	e1 e0       	ldi	r30, 0x01	; 1
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	ec 0f       	add	r30, r28
 226:	fd 1f       	adc	r31, r29
 228:	e8 0f       	add	r30, r24
 22a:	f1 1d       	adc	r31, r1
 22c:	80 81       	ld	r24, Z
 22e:	86 0f       	add	r24, r22
 230:	80 68       	ori	r24, 0x80	; 128
 232:	e4 df       	rcall	.-56     	; 0x1fc <LCD_send_command>
}
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <LCD_Init>:

void LCD_Init(void){
	LCD_GPIO_Init();
 23e:	bb df       	rcall	.-138    	; 0x1b6 <LCD_GPIO_Init>
 240:	8f e0       	ldi	r24, 0x0F	; 15
 242:	97 e2       	ldi	r25, 0x27	; 39
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	f1 f7       	brne	.-4      	; 0x244 <LCD_Init+0x6>
 248:	00 c0       	rjmp	.+0      	; 0x24a <LCD_Init+0xc>
 24a:	00 00       	nop
	_delay_ms(40);

	LCD_send_command(0x38); // 8-bit, 2-line, 5x8 font
 24c:	88 e3       	ldi	r24, 0x38	; 56
 24e:	d6 df       	rcall	.-84     	; 0x1fc <LCD_send_command>
	LCD_send_command(0x0C); // Display ON, cursor OFF
 250:	8c e0       	ldi	r24, 0x0C	; 12
 252:	d4 df       	rcall	.-88     	; 0x1fc <LCD_send_command>
	LCD_send_command(0x06); // Entry mode
 254:	86 e0       	ldi	r24, 0x06	; 6
 256:	d2 df       	rcall	.-92     	; 0x1fc <LCD_send_command>
	LCD_send_command(0x01); // Clear display
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	d0 df       	rcall	.-96     	; 0x1fc <LCD_send_command>
 25c:	87 ea       	ldi	r24, 0xA7	; 167
 25e:	91 e6       	ldi	r25, 0x61	; 97
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <LCD_Init+0x22>
 264:	00 c0       	rjmp	.+0      	; 0x266 <LCD_Init+0x28>
 266:	00 00       	nop
 268:	08 95       	ret

0000026a <LCD_print>:
 26a:	cf 93       	push	r28
	_delay_ms(100);
}

void LCD_print(const char *str){
 26c:	df 93       	push	r29
 26e:	ec 01       	movw	r28, r24
	while (*str){
 270:	02 c0       	rjmp	.+4      	; 0x276 <LCD_print+0xc>
		LCD_send_data(*str++);
 272:	21 96       	adiw	r28, 0x01	; 1
 274:	c6 df       	rcall	.-116    	; 0x202 <LCD_send_data>
	LCD_send_command(0x01); // Clear display
	_delay_ms(100);
}

void LCD_print(const char *str){
	while (*str){
 276:	88 81       	ld	r24, Y
 278:	81 11       	cpse	r24, r1
 27a:	fb cf       	rjmp	.-10     	; 0x272 <LCD_print+0x8>
		LCD_send_data(*str++);
	}
}
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <main>:

int main(void){
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	cd b7       	in	r28, 0x3d	; 61
 288:	de b7       	in	r29, 0x3e	; 62
 28a:	68 97       	sbiw	r28, 0x18	; 24
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
 296:	d3 df       	rcall	.-90     	; 0x23e <LCD_Init>
	LCD_set_cursor(0, 1);       // Top-left corner
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	b5 df       	rcall	.-150    	; 0x208 <LCD_set_cursor>
	LCD_print("VOLTAGE SCREEN"); // Writes to LCD
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	92 e0       	ldi	r25, 0x02	; 2
	
	LED_Init();
 2a2:	e3 df       	rcall	.-58     	; 0x26a <LCD_print>
 2a4:	68 df       	rcall	.-304    	; 0x176 <LED_Init>
	BUTTON_Init();
 2a6:	3e df       	rcall	.-388    	; 0x124 <BUTTON_Init>
 2a8:	7f df       	rcall	.-258    	; 0x1a8 <ADC_Init>
	ADC_Init();
 2aa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
	
	uint16_t adc_value;
	float voltage_value;
	while (1){
		if(is_adc_on){
 2ae:	88 23       	and	r24, r24
 2b0:	09 f4       	brne	.+2      	; 0x2b4 <main+0x32>
 2b2:	d5 c0       	rjmp	.+426    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 2b4:	ea e7       	ldi	r30, 0x7A	; 122
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
			ADCSRA |= (1 << ADSC);                                             // start adc
 2b8:	80 81       	ld	r24, Z
 2ba:	80 64       	ori	r24, 0x40	; 64
 2bc:	80 83       	st	Z, r24
 2be:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
			while (ADCSRA & (1 << ADSC));                                      // wait for conversion
 2c2:	86 fd       	sbrc	r24, 6
 2c4:	fc cf       	rjmp	.-8      	; 0x2be <main+0x3c>
 2c6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
			adc_value = (ADCL | (ADCH << 8));                                  // get value
 2ca:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 2ce:	70 e0       	ldi	r23, 0x00	; 0
 2d0:	76 2f       	mov	r23, r22
 2d2:	66 27       	eor	r22, r22
 2d4:	68 2b       	or	r22, r24
 2d6:	80 e0       	ldi	r24, 0x00	; 0
			
			voltage_value = ((float)(adc_value) * MAX_VOLTS) / ADC_MAX_VALUE;  // convert value
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	60 d1       	rcall	.+704    	; 0x59c <__floatunsisf>
 2dc:	27 e3       	ldi	r18, 0x37	; 55
 2de:	39 e8       	ldi	r19, 0x89	; 137
 2e0:	41 ea       	ldi	r20, 0xA1	; 161
 2e2:	50 e4       	ldi	r21, 0x40	; 64
 2e4:	11 d2       	rcall	.+1058   	; 0x708 <__mulsf3>
 2e6:	20 e0       	ldi	r18, 0x00	; 0
 2e8:	30 ec       	ldi	r19, 0xC0	; 192
 2ea:	4f e7       	ldi	r20, 0x7F	; 127
 2ec:	54 e4       	ldi	r21, 0x44	; 68
 2ee:	c2 d0       	rcall	.+388    	; 0x474 <__divsf3>
 2f0:	6b 01       	movw	r12, r22
 2f2:	7c 01       	movw	r14, r24
			const char *voltage_value_string[10];
			uint16_t voltage_mV = (uint16_t)(voltage_value * 1000);  // Convert to millivolts
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	4a e7       	ldi	r20, 0x7A	; 122
 2fa:	54 e4       	ldi	r21, 0x44	; 68
 2fc:	05 d2       	rcall	.+1034   	; 0x708 <__mulsf3>
 2fe:	22 d1       	rcall	.+580    	; 0x544 <__fixunssfsi>
 300:	4b 01       	movw	r8, r22
 302:	5c 01       	movw	r10, r24
 304:	ab 01       	movw	r20, r22
			sprintf(voltage_value_string, "%u.%02uV  ", voltage_mV / 1000, (voltage_mV % 1000));
 306:	56 95       	lsr	r21
 308:	47 95       	ror	r20
 30a:	56 95       	lsr	r21
 30c:	47 95       	ror	r20
 30e:	56 95       	lsr	r21
 310:	47 95       	ror	r20
 312:	9a 01       	movw	r18, r20
 314:	a5 ec       	ldi	r26, 0xC5	; 197
 316:	b0 e2       	ldi	r27, 0x20	; 32
 318:	5a d2       	rcall	.+1204   	; 0x7ce <__umulhisi3>
 31a:	92 95       	swap	r25
 31c:	82 95       	swap	r24
 31e:	8f 70       	andi	r24, 0x0F	; 15
 320:	89 27       	eor	r24, r25
 322:	9f 70       	andi	r25, 0x0F	; 15
 324:	89 27       	eor	r24, r25
 326:	68 ee       	ldi	r22, 0xE8	; 232
 328:	73 e0       	ldi	r23, 0x03	; 3
 32a:	86 9f       	mul	r24, r22
 32c:	90 01       	movw	r18, r0
 32e:	87 9f       	mul	r24, r23
 330:	30 0d       	add	r19, r0
 332:	96 9f       	mul	r25, r22
 334:	30 0d       	add	r19, r0
 336:	11 24       	eor	r1, r1
 338:	82 1a       	sub	r8, r18
 33a:	93 0a       	sbc	r9, r19
 33c:	9f 92       	push	r9
 33e:	8f 92       	push	r8
 340:	9a 01       	movw	r18, r20
 342:	45 d2       	rcall	.+1162   	; 0x7ce <__umulhisi3>
 344:	92 95       	swap	r25
 346:	82 95       	swap	r24
 348:	8f 70       	andi	r24, 0x0F	; 15
 34a:	89 27       	eor	r24, r25
 34c:	9f 70       	andi	r25, 0x0F	; 15
 34e:	89 27       	eor	r24, r25
 350:	9f 93       	push	r25
 352:	8f 93       	push	r24
 354:	80 e1       	ldi	r24, 0x10	; 16
 356:	92 e0       	ldi	r25, 0x02	; 2
 358:	9f 93       	push	r25
 35a:	8f 93       	push	r24
 35c:	8e 01       	movw	r16, r28
 35e:	0f 5f       	subi	r16, 0xFF	; 255
 360:	1f 4f       	sbci	r17, 0xFF	; 255
 362:	1f 93       	push	r17
 364:	0f 93       	push	r16
			LCD_set_cursor(1, 1);
 366:	42 d2       	rcall	.+1156   	; 0x7ec <sprintf>
 368:	61 e0       	ldi	r22, 0x01	; 1
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	4d df       	rcall	.-358    	; 0x208 <LCD_set_cursor>
			LCD_print("Voltage ");
 36e:	8b e1       	ldi	r24, 0x1B	; 27
 370:	92 e0       	ldi	r25, 0x02	; 2
 372:	7b df       	rcall	.-266    	; 0x26a <LCD_print>
			LCD_print(voltage_value_string);
 374:	c8 01       	movw	r24, r16
 376:	79 df       	rcall	.-270    	; 0x26a <LCD_print>
 378:	0f b6       	in	r0, 0x3f	; 63

			if(voltage_value < 1.5)
 37a:	f8 94       	cli
 37c:	de bf       	out	0x3e, r29	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	cd bf       	out	0x3d, r28	; 61
 382:	20 e0       	ldi	r18, 0x00	; 0
 384:	30 e0       	ldi	r19, 0x00	; 0
 386:	40 ec       	ldi	r20, 0xC0	; 192
 388:	5f e3       	ldi	r21, 0x3F	; 63
 38a:	c7 01       	movw	r24, r14
 38c:	b6 01       	movw	r22, r12
 38e:	6e d0       	rcall	.+220    	; 0x46c <__cmpsf2>
 390:	88 23       	and	r24, r24
 392:	24 f4       	brge	.+8      	; 0x39c <main+0x11a>
 394:	88 b1       	in	r24, 0x08	; 8
				PORTC |= (1 << PC5);
 396:	80 62       	ori	r24, 0x20	; 32
 398:	88 b9       	out	0x08, r24	; 8
 39a:	0b c0       	rjmp	.+22     	; 0x3b2 <main+0x130>
			else if(voltage_value < 0)
 39c:	20 e0       	ldi	r18, 0x00	; 0
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	a9 01       	movw	r20, r18
 3a2:	c7 01       	movw	r24, r14
 3a4:	b6 01       	movw	r22, r12
 3a6:	62 d0       	rcall	.+196    	; 0x46c <__cmpsf2>
 3a8:	88 23       	and	r24, r24
 3aa:	1c f4       	brge	.+6      	; 0x3b2 <main+0x130>
				PORTC &= ~(1 << GREEN_LED);
 3ac:	88 b1       	in	r24, 0x08	; 8
 3ae:	8f 7d       	andi	r24, 0xDF	; 223
 3b0:	88 b9       	out	0x08, r24	; 8
			
			if(voltage_value > 1.5 && voltage_value < 3.5)
 3b2:	20 e0       	ldi	r18, 0x00	; 0
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	40 ec       	ldi	r20, 0xC0	; 192
 3b8:	5f e3       	ldi	r21, 0x3F	; 63
 3ba:	c7 01       	movw	r24, r14
 3bc:	b6 01       	movw	r22, r12
 3be:	a0 d1       	rcall	.+832    	; 0x700 <__gesf2>
 3c0:	18 16       	cp	r1, r24
 3c2:	6c f4       	brge	.+26     	; 0x3de <main+0x15c>
 3c4:	20 e0       	ldi	r18, 0x00	; 0
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	40 e6       	ldi	r20, 0x60	; 96
 3ca:	50 e4       	ldi	r21, 0x40	; 64
 3cc:	c7 01       	movw	r24, r14
 3ce:	b6 01       	movw	r22, r12
 3d0:	4d d0       	rcall	.+154    	; 0x46c <__cmpsf2>
 3d2:	88 23       	and	r24, r24
 3d4:	24 f4       	brge	.+8      	; 0x3de <main+0x15c>
 3d6:	88 b1       	in	r24, 0x08	; 8
				PORTC |= (1 << ORANGE_LED);
 3d8:	88 60       	ori	r24, 0x08	; 8
 3da:	88 b9       	out	0x08, r24	; 8
 3dc:	0c c0       	rjmp	.+24     	; 0x3f6 <main+0x174>
			else if(voltage_value < 1.5)
 3de:	20 e0       	ldi	r18, 0x00	; 0
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	40 ec       	ldi	r20, 0xC0	; 192
 3e4:	5f e3       	ldi	r21, 0x3F	; 63
 3e6:	c7 01       	movw	r24, r14
 3e8:	b6 01       	movw	r22, r12
 3ea:	40 d0       	rcall	.+128    	; 0x46c <__cmpsf2>
 3ec:	88 23       	and	r24, r24
 3ee:	1c f4       	brge	.+6      	; 0x3f6 <main+0x174>
 3f0:	88 b1       	in	r24, 0x08	; 8
				PORTC &= ~(1 << ORANGE_LED);
 3f2:	87 7f       	andi	r24, 0xF7	; 247
 3f4:	88 b9       	out	0x08, r24	; 8
			
			if(voltage_value >= 3.5)
 3f6:	20 e0       	ldi	r18, 0x00	; 0
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	40 e6       	ldi	r20, 0x60	; 96
 3fc:	50 e4       	ldi	r21, 0x40	; 64
 3fe:	c7 01       	movw	r24, r14
 400:	b6 01       	movw	r22, r12
 402:	7e d1       	rcall	.+764    	; 0x700 <__gesf2>
 404:	88 23       	and	r24, r24
 406:	24 f0       	brlt	.+8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 408:	88 b1       	in	r24, 0x08	; 8
				PORTC |= (1 << RED_LED);
 40a:	80 61       	ori	r24, 0x10	; 16
 40c:	88 b9       	out	0x08, r24	; 8
 40e:	0c c0       	rjmp	.+24     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 410:	20 e0       	ldi	r18, 0x00	; 0
			else if(voltage_value < 3.5)
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	40 e6       	ldi	r20, 0x60	; 96
 416:	50 e4       	ldi	r21, 0x40	; 64
 418:	c7 01       	movw	r24, r14
 41a:	b6 01       	movw	r22, r12
 41c:	27 d0       	rcall	.+78     	; 0x46c <__cmpsf2>
 41e:	88 23       	and	r24, r24
 420:	1c f4       	brge	.+6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 422:	88 b1       	in	r24, 0x08	; 8
 424:	8f 7e       	andi	r24, 0xEF	; 239
				PORTC &= ~(1 << RED_LED);
 426:	88 b9       	out	0x08, r24	; 8
 428:	18 8e       	std	Y+24, r1	; 0x18
 42a:	1f 8a       	std	Y+23, r1	; 0x17

			for(volatile int i = 0; i < 30000; i++);
 42c:	05 c0       	rjmp	.+10     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42e:	8f 89       	ldd	r24, Y+23	; 0x17
 430:	98 8d       	ldd	r25, Y+24	; 0x18
 432:	01 96       	adiw	r24, 0x01	; 1
 434:	98 8f       	std	Y+24, r25	; 0x18
 436:	8f 8b       	std	Y+23, r24	; 0x17
 438:	8f 89       	ldd	r24, Y+23	; 0x17
 43a:	98 8d       	ldd	r25, Y+24	; 0x18
 43c:	80 33       	cpi	r24, 0x30	; 48
 43e:	95 47       	sbci	r25, 0x75	; 117
 440:	b4 f3       	brlt	.-20     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
			for(volatile int i = 0; i < 30000; i++);
 442:	1e 8a       	std	Y+22, r1	; 0x16
 444:	1d 8a       	std	Y+21, r1	; 0x15
 446:	05 c0       	rjmp	.+10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 448:	8d 89       	ldd	r24, Y+21	; 0x15
 44a:	9e 89       	ldd	r25, Y+22	; 0x16
 44c:	01 96       	adiw	r24, 0x01	; 1
 44e:	9e 8b       	std	Y+22, r25	; 0x16
 450:	8d 8b       	std	Y+21, r24	; 0x15
 452:	8d 89       	ldd	r24, Y+21	; 0x15
 454:	9e 89       	ldd	r25, Y+22	; 0x16
 456:	80 33       	cpi	r24, 0x30	; 48
 458:	95 47       	sbci	r25, 0x75	; 117
 45a:	b4 f3       	brlt	.-20     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 45c:	03 c0       	rjmp	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
				//_delay_ms(10000);                                                  // 1000ms was instant, somehow, so i put 10000ms and it seems to work now
			}
		else
			LCD_set_cursor(1, 3);
 45e:	63 e0       	ldi	r22, 0x03	; 3
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	d2 de       	rcall	.-604    	; 0x208 <LCD_set_cursor>
 464:	84 e2       	ldi	r24, 0x24	; 36
			LCD_print("System OFF");
 466:	92 e0       	ldi	r25, 0x02	; 2
 468:	00 df       	rcall	.-512    	; 0x26a <LCD_print>
 46a:	1f cf       	rjmp	.-450    	; 0x2aa <main+0x28>

0000046c <__cmpsf2>:
 46c:	d4 d0       	rcall	.+424    	; 0x616 <__fp_cmp>
		}
 46e:	08 f4       	brcc	.+2      	; 0x472 <__cmpsf2+0x6>
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	08 95       	ret

00000474 <__divsf3>:
 474:	0c d0       	rcall	.+24     	; 0x48e <__divsf3x>
 476:	0a c1       	rjmp	.+532    	; 0x68c <__fp_round>
 478:	02 d1       	rcall	.+516    	; 0x67e <__fp_pscB>
 47a:	40 f0       	brcs	.+16     	; 0x48c <__divsf3+0x18>
 47c:	f9 d0       	rcall	.+498    	; 0x670 <__fp_pscA>
 47e:	30 f0       	brcs	.+12     	; 0x48c <__divsf3+0x18>
 480:	21 f4       	brne	.+8      	; 0x48a <__divsf3+0x16>
 482:	5f 3f       	cpi	r21, 0xFF	; 255
 484:	19 f0       	breq	.+6      	; 0x48c <__divsf3+0x18>
 486:	eb c0       	rjmp	.+470    	; 0x65e <__fp_inf>
 488:	51 11       	cpse	r21, r1
 48a:	34 c1       	rjmp	.+616    	; 0x6f4 <__fp_szero>
 48c:	ee c0       	rjmp	.+476    	; 0x66a <__fp_nan>

0000048e <__divsf3x>:
 48e:	0f d1       	rcall	.+542    	; 0x6ae <__fp_split3>
 490:	98 f3       	brcs	.-26     	; 0x478 <__divsf3+0x4>

00000492 <__divsf3_pse>:
 492:	99 23       	and	r25, r25
 494:	c9 f3       	breq	.-14     	; 0x488 <__divsf3+0x14>
 496:	55 23       	and	r21, r21
 498:	b1 f3       	breq	.-20     	; 0x486 <__divsf3+0x12>
 49a:	95 1b       	sub	r25, r21
 49c:	55 0b       	sbc	r21, r21
 49e:	bb 27       	eor	r27, r27
 4a0:	aa 27       	eor	r26, r26
 4a2:	62 17       	cp	r22, r18
 4a4:	73 07       	cpc	r23, r19
 4a6:	84 07       	cpc	r24, r20
 4a8:	38 f0       	brcs	.+14     	; 0x4b8 <__divsf3_pse+0x26>
 4aa:	9f 5f       	subi	r25, 0xFF	; 255
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255
 4ae:	22 0f       	add	r18, r18
 4b0:	33 1f       	adc	r19, r19
 4b2:	44 1f       	adc	r20, r20
 4b4:	aa 1f       	adc	r26, r26
 4b6:	a9 f3       	breq	.-22     	; 0x4a2 <__divsf3_pse+0x10>
 4b8:	33 d0       	rcall	.+102    	; 0x520 <__divsf3_pse+0x8e>
 4ba:	0e 2e       	mov	r0, r30
 4bc:	3a f0       	brmi	.+14     	; 0x4cc <__divsf3_pse+0x3a>
 4be:	e0 e8       	ldi	r30, 0x80	; 128
 4c0:	30 d0       	rcall	.+96     	; 0x522 <__divsf3_pse+0x90>
 4c2:	91 50       	subi	r25, 0x01	; 1
 4c4:	50 40       	sbci	r21, 0x00	; 0
 4c6:	e6 95       	lsr	r30
 4c8:	00 1c       	adc	r0, r0
 4ca:	ca f7       	brpl	.-14     	; 0x4be <__divsf3_pse+0x2c>
 4cc:	29 d0       	rcall	.+82     	; 0x520 <__divsf3_pse+0x8e>
 4ce:	fe 2f       	mov	r31, r30
 4d0:	27 d0       	rcall	.+78     	; 0x520 <__divsf3_pse+0x8e>
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	88 1f       	adc	r24, r24
 4d8:	bb 1f       	adc	r27, r27
 4da:	26 17       	cp	r18, r22
 4dc:	37 07       	cpc	r19, r23
 4de:	48 07       	cpc	r20, r24
 4e0:	ab 07       	cpc	r26, r27
 4e2:	b0 e8       	ldi	r27, 0x80	; 128
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__divsf3_pse+0x56>
 4e6:	bb 0b       	sbc	r27, r27
 4e8:	80 2d       	mov	r24, r0
 4ea:	bf 01       	movw	r22, r30
 4ec:	ff 27       	eor	r31, r31
 4ee:	93 58       	subi	r25, 0x83	; 131
 4f0:	5f 4f       	sbci	r21, 0xFF	; 255
 4f2:	2a f0       	brmi	.+10     	; 0x4fe <__divsf3_pse+0x6c>
 4f4:	9e 3f       	cpi	r25, 0xFE	; 254
 4f6:	51 05       	cpc	r21, r1
 4f8:	68 f0       	brcs	.+26     	; 0x514 <__divsf3_pse+0x82>
 4fa:	b1 c0       	rjmp	.+354    	; 0x65e <__fp_inf>
 4fc:	fb c0       	rjmp	.+502    	; 0x6f4 <__fp_szero>
 4fe:	5f 3f       	cpi	r21, 0xFF	; 255
 500:	ec f3       	brlt	.-6      	; 0x4fc <__divsf3_pse+0x6a>
 502:	98 3e       	cpi	r25, 0xE8	; 232
 504:	dc f3       	brlt	.-10     	; 0x4fc <__divsf3_pse+0x6a>
 506:	86 95       	lsr	r24
 508:	77 95       	ror	r23
 50a:	67 95       	ror	r22
 50c:	b7 95       	ror	r27
 50e:	f7 95       	ror	r31
 510:	9f 5f       	subi	r25, 0xFF	; 255
 512:	c9 f7       	brne	.-14     	; 0x506 <__divsf3_pse+0x74>
 514:	88 0f       	add	r24, r24
 516:	91 1d       	adc	r25, r1
 518:	96 95       	lsr	r25
 51a:	87 95       	ror	r24
 51c:	97 f9       	bld	r25, 7
 51e:	08 95       	ret
 520:	e1 e0       	ldi	r30, 0x01	; 1
 522:	66 0f       	add	r22, r22
 524:	77 1f       	adc	r23, r23
 526:	88 1f       	adc	r24, r24
 528:	bb 1f       	adc	r27, r27
 52a:	62 17       	cp	r22, r18
 52c:	73 07       	cpc	r23, r19
 52e:	84 07       	cpc	r24, r20
 530:	ba 07       	cpc	r27, r26
 532:	20 f0       	brcs	.+8      	; 0x53c <__divsf3_pse+0xaa>
 534:	62 1b       	sub	r22, r18
 536:	73 0b       	sbc	r23, r19
 538:	84 0b       	sbc	r24, r20
 53a:	ba 0b       	sbc	r27, r26
 53c:	ee 1f       	adc	r30, r30
 53e:	88 f7       	brcc	.-30     	; 0x522 <__divsf3_pse+0x90>
 540:	e0 95       	com	r30
 542:	08 95       	ret

00000544 <__fixunssfsi>:
 544:	bc d0       	rcall	.+376    	; 0x6be <__fp_splitA>
 546:	88 f0       	brcs	.+34     	; 0x56a <__fixunssfsi+0x26>
 548:	9f 57       	subi	r25, 0x7F	; 127
 54a:	90 f0       	brcs	.+36     	; 0x570 <__fixunssfsi+0x2c>
 54c:	b9 2f       	mov	r27, r25
 54e:	99 27       	eor	r25, r25
 550:	b7 51       	subi	r27, 0x17	; 23
 552:	a0 f0       	brcs	.+40     	; 0x57c <__fixunssfsi+0x38>
 554:	d1 f0       	breq	.+52     	; 0x58a <__fixunssfsi+0x46>
 556:	66 0f       	add	r22, r22
 558:	77 1f       	adc	r23, r23
 55a:	88 1f       	adc	r24, r24
 55c:	99 1f       	adc	r25, r25
 55e:	1a f0       	brmi	.+6      	; 0x566 <__fixunssfsi+0x22>
 560:	ba 95       	dec	r27
 562:	c9 f7       	brne	.-14     	; 0x556 <__fixunssfsi+0x12>
 564:	12 c0       	rjmp	.+36     	; 0x58a <__fixunssfsi+0x46>
 566:	b1 30       	cpi	r27, 0x01	; 1
 568:	81 f0       	breq	.+32     	; 0x58a <__fixunssfsi+0x46>
 56a:	c3 d0       	rcall	.+390    	; 0x6f2 <__fp_zero>
 56c:	b1 e0       	ldi	r27, 0x01	; 1
 56e:	08 95       	ret
 570:	c0 c0       	rjmp	.+384    	; 0x6f2 <__fp_zero>
 572:	67 2f       	mov	r22, r23
 574:	78 2f       	mov	r23, r24
 576:	88 27       	eor	r24, r24
 578:	b8 5f       	subi	r27, 0xF8	; 248
 57a:	39 f0       	breq	.+14     	; 0x58a <__fixunssfsi+0x46>
 57c:	b9 3f       	cpi	r27, 0xF9	; 249
 57e:	cc f3       	brlt	.-14     	; 0x572 <__fixunssfsi+0x2e>
 580:	86 95       	lsr	r24
 582:	77 95       	ror	r23
 584:	67 95       	ror	r22
 586:	b3 95       	inc	r27
 588:	d9 f7       	brne	.-10     	; 0x580 <__fixunssfsi+0x3c>
 58a:	3e f4       	brtc	.+14     	; 0x59a <__fixunssfsi+0x56>
 58c:	90 95       	com	r25
 58e:	80 95       	com	r24
 590:	70 95       	com	r23
 592:	61 95       	neg	r22
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	08 95       	ret

0000059c <__floatunsisf>:
 59c:	e8 94       	clt
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <__floatsisf+0x12>

000005a0 <__floatsisf>:
 5a0:	97 fb       	bst	r25, 7
 5a2:	3e f4       	brtc	.+14     	; 0x5b2 <__floatsisf+0x12>
 5a4:	90 95       	com	r25
 5a6:	80 95       	com	r24
 5a8:	70 95       	com	r23
 5aa:	61 95       	neg	r22
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	99 23       	and	r25, r25
 5b4:	a9 f0       	breq	.+42     	; 0x5e0 <__floatsisf+0x40>
 5b6:	f9 2f       	mov	r31, r25
 5b8:	96 e9       	ldi	r25, 0x96	; 150
 5ba:	bb 27       	eor	r27, r27
 5bc:	93 95       	inc	r25
 5be:	f6 95       	lsr	r31
 5c0:	87 95       	ror	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b7 95       	ror	r27
 5c8:	f1 11       	cpse	r31, r1
 5ca:	f8 cf       	rjmp	.-16     	; 0x5bc <__floatsisf+0x1c>
 5cc:	fa f4       	brpl	.+62     	; 0x60c <__floatsisf+0x6c>
 5ce:	bb 0f       	add	r27, r27
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__floatsisf+0x36>
 5d2:	60 ff       	sbrs	r22, 0
 5d4:	1b c0       	rjmp	.+54     	; 0x60c <__floatsisf+0x6c>
 5d6:	6f 5f       	subi	r22, 0xFF	; 255
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	16 c0       	rjmp	.+44     	; 0x60c <__floatsisf+0x6c>
 5e0:	88 23       	and	r24, r24
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <__floatsisf+0x48>
 5e4:	96 e9       	ldi	r25, 0x96	; 150
 5e6:	11 c0       	rjmp	.+34     	; 0x60a <__floatsisf+0x6a>
 5e8:	77 23       	and	r23, r23
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <__floatsisf+0x54>
 5ec:	9e e8       	ldi	r25, 0x8E	; 142
 5ee:	87 2f       	mov	r24, r23
 5f0:	76 2f       	mov	r23, r22
 5f2:	05 c0       	rjmp	.+10     	; 0x5fe <__floatsisf+0x5e>
 5f4:	66 23       	and	r22, r22
 5f6:	71 f0       	breq	.+28     	; 0x614 <__floatsisf+0x74>
 5f8:	96 e8       	ldi	r25, 0x86	; 134
 5fa:	86 2f       	mov	r24, r22
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	60 e0       	ldi	r22, 0x00	; 0
 600:	2a f0       	brmi	.+10     	; 0x60c <__floatsisf+0x6c>
 602:	9a 95       	dec	r25
 604:	66 0f       	add	r22, r22
 606:	77 1f       	adc	r23, r23
 608:	88 1f       	adc	r24, r24
 60a:	da f7       	brpl	.-10     	; 0x602 <__floatsisf+0x62>
 60c:	88 0f       	add	r24, r24
 60e:	96 95       	lsr	r25
 610:	87 95       	ror	r24
 612:	97 f9       	bld	r25, 7
 614:	08 95       	ret

00000616 <__fp_cmp>:
 616:	99 0f       	add	r25, r25
 618:	00 08       	sbc	r0, r0
 61a:	55 0f       	add	r21, r21
 61c:	aa 0b       	sbc	r26, r26
 61e:	e0 e8       	ldi	r30, 0x80	; 128
 620:	fe ef       	ldi	r31, 0xFE	; 254
 622:	16 16       	cp	r1, r22
 624:	17 06       	cpc	r1, r23
 626:	e8 07       	cpc	r30, r24
 628:	f9 07       	cpc	r31, r25
 62a:	c0 f0       	brcs	.+48     	; 0x65c <__fp_cmp+0x46>
 62c:	12 16       	cp	r1, r18
 62e:	13 06       	cpc	r1, r19
 630:	e4 07       	cpc	r30, r20
 632:	f5 07       	cpc	r31, r21
 634:	98 f0       	brcs	.+38     	; 0x65c <__fp_cmp+0x46>
 636:	62 1b       	sub	r22, r18
 638:	73 0b       	sbc	r23, r19
 63a:	84 0b       	sbc	r24, r20
 63c:	95 0b       	sbc	r25, r21
 63e:	39 f4       	brne	.+14     	; 0x64e <__fp_cmp+0x38>
 640:	0a 26       	eor	r0, r26
 642:	61 f0       	breq	.+24     	; 0x65c <__fp_cmp+0x46>
 644:	23 2b       	or	r18, r19
 646:	24 2b       	or	r18, r20
 648:	25 2b       	or	r18, r21
 64a:	21 f4       	brne	.+8      	; 0x654 <__fp_cmp+0x3e>
 64c:	08 95       	ret
 64e:	0a 26       	eor	r0, r26
 650:	09 f4       	brne	.+2      	; 0x654 <__fp_cmp+0x3e>
 652:	a1 40       	sbci	r26, 0x01	; 1
 654:	a6 95       	lsr	r26
 656:	8f ef       	ldi	r24, 0xFF	; 255
 658:	81 1d       	adc	r24, r1
 65a:	81 1d       	adc	r24, r1
 65c:	08 95       	ret

0000065e <__fp_inf>:
 65e:	97 f9       	bld	r25, 7
 660:	9f 67       	ori	r25, 0x7F	; 127
 662:	80 e8       	ldi	r24, 0x80	; 128
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	60 e0       	ldi	r22, 0x00	; 0
 668:	08 95       	ret

0000066a <__fp_nan>:
 66a:	9f ef       	ldi	r25, 0xFF	; 255
 66c:	80 ec       	ldi	r24, 0xC0	; 192
 66e:	08 95       	ret

00000670 <__fp_pscA>:
 670:	00 24       	eor	r0, r0
 672:	0a 94       	dec	r0
 674:	16 16       	cp	r1, r22
 676:	17 06       	cpc	r1, r23
 678:	18 06       	cpc	r1, r24
 67a:	09 06       	cpc	r0, r25
 67c:	08 95       	ret

0000067e <__fp_pscB>:
 67e:	00 24       	eor	r0, r0
 680:	0a 94       	dec	r0
 682:	12 16       	cp	r1, r18
 684:	13 06       	cpc	r1, r19
 686:	14 06       	cpc	r1, r20
 688:	05 06       	cpc	r0, r21
 68a:	08 95       	ret

0000068c <__fp_round>:
 68c:	09 2e       	mov	r0, r25
 68e:	03 94       	inc	r0
 690:	00 0c       	add	r0, r0
 692:	11 f4       	brne	.+4      	; 0x698 <__fp_round+0xc>
 694:	88 23       	and	r24, r24
 696:	52 f0       	brmi	.+20     	; 0x6ac <__fp_round+0x20>
 698:	bb 0f       	add	r27, r27
 69a:	40 f4       	brcc	.+16     	; 0x6ac <__fp_round+0x20>
 69c:	bf 2b       	or	r27, r31
 69e:	11 f4       	brne	.+4      	; 0x6a4 <__fp_round+0x18>
 6a0:	60 ff       	sbrs	r22, 0
 6a2:	04 c0       	rjmp	.+8      	; 0x6ac <__fp_round+0x20>
 6a4:	6f 5f       	subi	r22, 0xFF	; 255
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	8f 4f       	sbci	r24, 0xFF	; 255
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	08 95       	ret

000006ae <__fp_split3>:
 6ae:	57 fd       	sbrc	r21, 7
 6b0:	90 58       	subi	r25, 0x80	; 128
 6b2:	44 0f       	add	r20, r20
 6b4:	55 1f       	adc	r21, r21
 6b6:	59 f0       	breq	.+22     	; 0x6ce <__fp_splitA+0x10>
 6b8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ba:	71 f0       	breq	.+28     	; 0x6d8 <__fp_splitA+0x1a>
 6bc:	47 95       	ror	r20

000006be <__fp_splitA>:
 6be:	88 0f       	add	r24, r24
 6c0:	97 fb       	bst	r25, 7
 6c2:	99 1f       	adc	r25, r25
 6c4:	61 f0       	breq	.+24     	; 0x6de <__fp_splitA+0x20>
 6c6:	9f 3f       	cpi	r25, 0xFF	; 255
 6c8:	79 f0       	breq	.+30     	; 0x6e8 <__fp_splitA+0x2a>
 6ca:	87 95       	ror	r24
 6cc:	08 95       	ret
 6ce:	12 16       	cp	r1, r18
 6d0:	13 06       	cpc	r1, r19
 6d2:	14 06       	cpc	r1, r20
 6d4:	55 1f       	adc	r21, r21
 6d6:	f2 cf       	rjmp	.-28     	; 0x6bc <__fp_split3+0xe>
 6d8:	46 95       	lsr	r20
 6da:	f1 df       	rcall	.-30     	; 0x6be <__fp_splitA>
 6dc:	08 c0       	rjmp	.+16     	; 0x6ee <__fp_splitA+0x30>
 6de:	16 16       	cp	r1, r22
 6e0:	17 06       	cpc	r1, r23
 6e2:	18 06       	cpc	r1, r24
 6e4:	99 1f       	adc	r25, r25
 6e6:	f1 cf       	rjmp	.-30     	; 0x6ca <__fp_splitA+0xc>
 6e8:	86 95       	lsr	r24
 6ea:	71 05       	cpc	r23, r1
 6ec:	61 05       	cpc	r22, r1
 6ee:	08 94       	sec
 6f0:	08 95       	ret

000006f2 <__fp_zero>:
 6f2:	e8 94       	clt

000006f4 <__fp_szero>:
 6f4:	bb 27       	eor	r27, r27
 6f6:	66 27       	eor	r22, r22
 6f8:	77 27       	eor	r23, r23
 6fa:	cb 01       	movw	r24, r22
 6fc:	97 f9       	bld	r25, 7
 6fe:	08 95       	ret

00000700 <__gesf2>:
 700:	8a df       	rcall	.-236    	; 0x616 <__fp_cmp>
 702:	08 f4       	brcc	.+2      	; 0x706 <__gesf2+0x6>
 704:	8f ef       	ldi	r24, 0xFF	; 255
 706:	08 95       	ret

00000708 <__mulsf3>:
 708:	0b d0       	rcall	.+22     	; 0x720 <__mulsf3x>
 70a:	c0 cf       	rjmp	.-128    	; 0x68c <__fp_round>
 70c:	b1 df       	rcall	.-158    	; 0x670 <__fp_pscA>
 70e:	28 f0       	brcs	.+10     	; 0x71a <__mulsf3+0x12>
 710:	b6 df       	rcall	.-148    	; 0x67e <__fp_pscB>
 712:	18 f0       	brcs	.+6      	; 0x71a <__mulsf3+0x12>
 714:	95 23       	and	r25, r21
 716:	09 f0       	breq	.+2      	; 0x71a <__mulsf3+0x12>
 718:	a2 cf       	rjmp	.-188    	; 0x65e <__fp_inf>
 71a:	a7 cf       	rjmp	.-178    	; 0x66a <__fp_nan>
 71c:	11 24       	eor	r1, r1
 71e:	ea cf       	rjmp	.-44     	; 0x6f4 <__fp_szero>

00000720 <__mulsf3x>:
 720:	c6 df       	rcall	.-116    	; 0x6ae <__fp_split3>
 722:	a0 f3       	brcs	.-24     	; 0x70c <__mulsf3+0x4>

00000724 <__mulsf3_pse>:
 724:	95 9f       	mul	r25, r21
 726:	d1 f3       	breq	.-12     	; 0x71c <__mulsf3+0x14>
 728:	95 0f       	add	r25, r21
 72a:	50 e0       	ldi	r21, 0x00	; 0
 72c:	55 1f       	adc	r21, r21
 72e:	62 9f       	mul	r22, r18
 730:	f0 01       	movw	r30, r0
 732:	72 9f       	mul	r23, r18
 734:	bb 27       	eor	r27, r27
 736:	f0 0d       	add	r31, r0
 738:	b1 1d       	adc	r27, r1
 73a:	63 9f       	mul	r22, r19
 73c:	aa 27       	eor	r26, r26
 73e:	f0 0d       	add	r31, r0
 740:	b1 1d       	adc	r27, r1
 742:	aa 1f       	adc	r26, r26
 744:	64 9f       	mul	r22, r20
 746:	66 27       	eor	r22, r22
 748:	b0 0d       	add	r27, r0
 74a:	a1 1d       	adc	r26, r1
 74c:	66 1f       	adc	r22, r22
 74e:	82 9f       	mul	r24, r18
 750:	22 27       	eor	r18, r18
 752:	b0 0d       	add	r27, r0
 754:	a1 1d       	adc	r26, r1
 756:	62 1f       	adc	r22, r18
 758:	73 9f       	mul	r23, r19
 75a:	b0 0d       	add	r27, r0
 75c:	a1 1d       	adc	r26, r1
 75e:	62 1f       	adc	r22, r18
 760:	83 9f       	mul	r24, r19
 762:	a0 0d       	add	r26, r0
 764:	61 1d       	adc	r22, r1
 766:	22 1f       	adc	r18, r18
 768:	74 9f       	mul	r23, r20
 76a:	33 27       	eor	r19, r19
 76c:	a0 0d       	add	r26, r0
 76e:	61 1d       	adc	r22, r1
 770:	23 1f       	adc	r18, r19
 772:	84 9f       	mul	r24, r20
 774:	60 0d       	add	r22, r0
 776:	21 1d       	adc	r18, r1
 778:	82 2f       	mov	r24, r18
 77a:	76 2f       	mov	r23, r22
 77c:	6a 2f       	mov	r22, r26
 77e:	11 24       	eor	r1, r1
 780:	9f 57       	subi	r25, 0x7F	; 127
 782:	50 40       	sbci	r21, 0x00	; 0
 784:	8a f0       	brmi	.+34     	; 0x7a8 <__mulsf3_pse+0x84>
 786:	e1 f0       	breq	.+56     	; 0x7c0 <__mulsf3_pse+0x9c>
 788:	88 23       	and	r24, r24
 78a:	4a f0       	brmi	.+18     	; 0x79e <__mulsf3_pse+0x7a>
 78c:	ee 0f       	add	r30, r30
 78e:	ff 1f       	adc	r31, r31
 790:	bb 1f       	adc	r27, r27
 792:	66 1f       	adc	r22, r22
 794:	77 1f       	adc	r23, r23
 796:	88 1f       	adc	r24, r24
 798:	91 50       	subi	r25, 0x01	; 1
 79a:	50 40       	sbci	r21, 0x00	; 0
 79c:	a9 f7       	brne	.-22     	; 0x788 <__mulsf3_pse+0x64>
 79e:	9e 3f       	cpi	r25, 0xFE	; 254
 7a0:	51 05       	cpc	r21, r1
 7a2:	70 f0       	brcs	.+28     	; 0x7c0 <__mulsf3_pse+0x9c>
 7a4:	5c cf       	rjmp	.-328    	; 0x65e <__fp_inf>
 7a6:	a6 cf       	rjmp	.-180    	; 0x6f4 <__fp_szero>
 7a8:	5f 3f       	cpi	r21, 0xFF	; 255
 7aa:	ec f3       	brlt	.-6      	; 0x7a6 <__mulsf3_pse+0x82>
 7ac:	98 3e       	cpi	r25, 0xE8	; 232
 7ae:	dc f3       	brlt	.-10     	; 0x7a6 <__mulsf3_pse+0x82>
 7b0:	86 95       	lsr	r24
 7b2:	77 95       	ror	r23
 7b4:	67 95       	ror	r22
 7b6:	b7 95       	ror	r27
 7b8:	f7 95       	ror	r31
 7ba:	e7 95       	ror	r30
 7bc:	9f 5f       	subi	r25, 0xFF	; 255
 7be:	c1 f7       	brne	.-16     	; 0x7b0 <__mulsf3_pse+0x8c>
 7c0:	fe 2b       	or	r31, r30
 7c2:	88 0f       	add	r24, r24
 7c4:	91 1d       	adc	r25, r1
 7c6:	96 95       	lsr	r25
 7c8:	87 95       	ror	r24
 7ca:	97 f9       	bld	r25, 7
 7cc:	08 95       	ret

000007ce <__umulhisi3>:
 7ce:	a2 9f       	mul	r26, r18
 7d0:	b0 01       	movw	r22, r0
 7d2:	b3 9f       	mul	r27, r19
 7d4:	c0 01       	movw	r24, r0
 7d6:	a3 9f       	mul	r26, r19
 7d8:	70 0d       	add	r23, r0
 7da:	81 1d       	adc	r24, r1
 7dc:	11 24       	eor	r1, r1
 7de:	91 1d       	adc	r25, r1
 7e0:	b2 9f       	mul	r27, r18
 7e2:	70 0d       	add	r23, r0
 7e4:	81 1d       	adc	r24, r1
 7e6:	11 24       	eor	r1, r1
 7e8:	91 1d       	adc	r25, r1
 7ea:	08 95       	ret

000007ec <sprintf>:
 7ec:	0f 93       	push	r16
 7ee:	1f 93       	push	r17
 7f0:	cf 93       	push	r28
 7f2:	df 93       	push	r29
 7f4:	cd b7       	in	r28, 0x3d	; 61
 7f6:	de b7       	in	r29, 0x3e	; 62
 7f8:	2e 97       	sbiw	r28, 0x0e	; 14
 7fa:	0f b6       	in	r0, 0x3f	; 63
 7fc:	f8 94       	cli
 7fe:	de bf       	out	0x3e, r29	; 62
 800:	0f be       	out	0x3f, r0	; 63
 802:	cd bf       	out	0x3d, r28	; 61
 804:	0e 89       	ldd	r16, Y+22	; 0x16
 806:	1f 89       	ldd	r17, Y+23	; 0x17
 808:	86 e0       	ldi	r24, 0x06	; 6
 80a:	8c 83       	std	Y+4, r24	; 0x04
 80c:	1a 83       	std	Y+2, r17	; 0x02
 80e:	09 83       	std	Y+1, r16	; 0x01
 810:	8f ef       	ldi	r24, 0xFF	; 255
 812:	9f e7       	ldi	r25, 0x7F	; 127
 814:	9e 83       	std	Y+6, r25	; 0x06
 816:	8d 83       	std	Y+5, r24	; 0x05
 818:	ae 01       	movw	r20, r28
 81a:	46 5e       	subi	r20, 0xE6	; 230
 81c:	5f 4f       	sbci	r21, 0xFF	; 255
 81e:	68 8d       	ldd	r22, Y+24	; 0x18
 820:	79 8d       	ldd	r23, Y+25	; 0x19
 822:	ce 01       	movw	r24, r28
 824:	01 96       	adiw	r24, 0x01	; 1
 826:	10 d0       	rcall	.+32     	; 0x848 <vfprintf>
 828:	ef 81       	ldd	r30, Y+7	; 0x07
 82a:	f8 85       	ldd	r31, Y+8	; 0x08
 82c:	e0 0f       	add	r30, r16
 82e:	f1 1f       	adc	r31, r17
 830:	10 82       	st	Z, r1
 832:	2e 96       	adiw	r28, 0x0e	; 14
 834:	0f b6       	in	r0, 0x3f	; 63
 836:	f8 94       	cli
 838:	de bf       	out	0x3e, r29	; 62
 83a:	0f be       	out	0x3f, r0	; 63
 83c:	cd bf       	out	0x3d, r28	; 61
 83e:	df 91       	pop	r29
 840:	cf 91       	pop	r28
 842:	1f 91       	pop	r17
 844:	0f 91       	pop	r16
 846:	08 95       	ret

00000848 <vfprintf>:
 848:	2f 92       	push	r2
 84a:	3f 92       	push	r3
 84c:	4f 92       	push	r4
 84e:	5f 92       	push	r5
 850:	6f 92       	push	r6
 852:	7f 92       	push	r7
 854:	8f 92       	push	r8
 856:	9f 92       	push	r9
 858:	af 92       	push	r10
 85a:	bf 92       	push	r11
 85c:	cf 92       	push	r12
 85e:	df 92       	push	r13
 860:	ef 92       	push	r14
 862:	ff 92       	push	r15
 864:	0f 93       	push	r16
 866:	1f 93       	push	r17
 868:	cf 93       	push	r28
 86a:	df 93       	push	r29
 86c:	cd b7       	in	r28, 0x3d	; 61
 86e:	de b7       	in	r29, 0x3e	; 62
 870:	2b 97       	sbiw	r28, 0x0b	; 11
 872:	0f b6       	in	r0, 0x3f	; 63
 874:	f8 94       	cli
 876:	de bf       	out	0x3e, r29	; 62
 878:	0f be       	out	0x3f, r0	; 63
 87a:	cd bf       	out	0x3d, r28	; 61
 87c:	6c 01       	movw	r12, r24
 87e:	7b 01       	movw	r14, r22
 880:	8a 01       	movw	r16, r20
 882:	fc 01       	movw	r30, r24
 884:	17 82       	std	Z+7, r1	; 0x07
 886:	16 82       	std	Z+6, r1	; 0x06
 888:	83 81       	ldd	r24, Z+3	; 0x03
 88a:	81 ff       	sbrs	r24, 1
 88c:	bf c1       	rjmp	.+894    	; 0xc0c <vfprintf+0x3c4>
 88e:	ce 01       	movw	r24, r28
 890:	01 96       	adiw	r24, 0x01	; 1
 892:	3c 01       	movw	r6, r24
 894:	f6 01       	movw	r30, r12
 896:	93 81       	ldd	r25, Z+3	; 0x03
 898:	f7 01       	movw	r30, r14
 89a:	93 fd       	sbrc	r25, 3
 89c:	85 91       	lpm	r24, Z+
 89e:	93 ff       	sbrs	r25, 3
 8a0:	81 91       	ld	r24, Z+
 8a2:	7f 01       	movw	r14, r30
 8a4:	88 23       	and	r24, r24
 8a6:	09 f4       	brne	.+2      	; 0x8aa <vfprintf+0x62>
 8a8:	ad c1       	rjmp	.+858    	; 0xc04 <vfprintf+0x3bc>
 8aa:	85 32       	cpi	r24, 0x25	; 37
 8ac:	39 f4       	brne	.+14     	; 0x8bc <vfprintf+0x74>
 8ae:	93 fd       	sbrc	r25, 3
 8b0:	85 91       	lpm	r24, Z+
 8b2:	93 ff       	sbrs	r25, 3
 8b4:	81 91       	ld	r24, Z+
 8b6:	7f 01       	movw	r14, r30
 8b8:	85 32       	cpi	r24, 0x25	; 37
 8ba:	21 f4       	brne	.+8      	; 0x8c4 <vfprintf+0x7c>
 8bc:	b6 01       	movw	r22, r12
 8be:	90 e0       	ldi	r25, 0x00	; 0
 8c0:	d6 d1       	rcall	.+940    	; 0xc6e <fputc>
 8c2:	e8 cf       	rjmp	.-48     	; 0x894 <vfprintf+0x4c>
 8c4:	91 2c       	mov	r9, r1
 8c6:	21 2c       	mov	r2, r1
 8c8:	31 2c       	mov	r3, r1
 8ca:	ff e1       	ldi	r31, 0x1F	; 31
 8cc:	f3 15       	cp	r31, r3
 8ce:	d8 f0       	brcs	.+54     	; 0x906 <vfprintf+0xbe>
 8d0:	8b 32       	cpi	r24, 0x2B	; 43
 8d2:	79 f0       	breq	.+30     	; 0x8f2 <vfprintf+0xaa>
 8d4:	38 f4       	brcc	.+14     	; 0x8e4 <vfprintf+0x9c>
 8d6:	80 32       	cpi	r24, 0x20	; 32
 8d8:	79 f0       	breq	.+30     	; 0x8f8 <vfprintf+0xb0>
 8da:	83 32       	cpi	r24, 0x23	; 35
 8dc:	a1 f4       	brne	.+40     	; 0x906 <vfprintf+0xbe>
 8de:	23 2d       	mov	r18, r3
 8e0:	20 61       	ori	r18, 0x10	; 16
 8e2:	1d c0       	rjmp	.+58     	; 0x91e <vfprintf+0xd6>
 8e4:	8d 32       	cpi	r24, 0x2D	; 45
 8e6:	61 f0       	breq	.+24     	; 0x900 <vfprintf+0xb8>
 8e8:	80 33       	cpi	r24, 0x30	; 48
 8ea:	69 f4       	brne	.+26     	; 0x906 <vfprintf+0xbe>
 8ec:	23 2d       	mov	r18, r3
 8ee:	21 60       	ori	r18, 0x01	; 1
 8f0:	16 c0       	rjmp	.+44     	; 0x91e <vfprintf+0xd6>
 8f2:	83 2d       	mov	r24, r3
 8f4:	82 60       	ori	r24, 0x02	; 2
 8f6:	38 2e       	mov	r3, r24
 8f8:	e3 2d       	mov	r30, r3
 8fa:	e4 60       	ori	r30, 0x04	; 4
 8fc:	3e 2e       	mov	r3, r30
 8fe:	2a c0       	rjmp	.+84     	; 0x954 <vfprintf+0x10c>
 900:	f3 2d       	mov	r31, r3
 902:	f8 60       	ori	r31, 0x08	; 8
 904:	1d c0       	rjmp	.+58     	; 0x940 <vfprintf+0xf8>
 906:	37 fc       	sbrc	r3, 7
 908:	2d c0       	rjmp	.+90     	; 0x964 <vfprintf+0x11c>
 90a:	20 ed       	ldi	r18, 0xD0	; 208
 90c:	28 0f       	add	r18, r24
 90e:	2a 30       	cpi	r18, 0x0A	; 10
 910:	40 f0       	brcs	.+16     	; 0x922 <vfprintf+0xda>
 912:	8e 32       	cpi	r24, 0x2E	; 46
 914:	b9 f4       	brne	.+46     	; 0x944 <vfprintf+0xfc>
 916:	36 fc       	sbrc	r3, 6
 918:	75 c1       	rjmp	.+746    	; 0xc04 <vfprintf+0x3bc>
 91a:	23 2d       	mov	r18, r3
 91c:	20 64       	ori	r18, 0x40	; 64
 91e:	32 2e       	mov	r3, r18
 920:	19 c0       	rjmp	.+50     	; 0x954 <vfprintf+0x10c>
 922:	36 fe       	sbrs	r3, 6
 924:	06 c0       	rjmp	.+12     	; 0x932 <vfprintf+0xea>
 926:	8a e0       	ldi	r24, 0x0A	; 10
 928:	98 9e       	mul	r9, r24
 92a:	20 0d       	add	r18, r0
 92c:	11 24       	eor	r1, r1
 92e:	92 2e       	mov	r9, r18
 930:	11 c0       	rjmp	.+34     	; 0x954 <vfprintf+0x10c>
 932:	ea e0       	ldi	r30, 0x0A	; 10
 934:	2e 9e       	mul	r2, r30
 936:	20 0d       	add	r18, r0
 938:	11 24       	eor	r1, r1
 93a:	22 2e       	mov	r2, r18
 93c:	f3 2d       	mov	r31, r3
 93e:	f0 62       	ori	r31, 0x20	; 32
 940:	3f 2e       	mov	r3, r31
 942:	08 c0       	rjmp	.+16     	; 0x954 <vfprintf+0x10c>
 944:	8c 36       	cpi	r24, 0x6C	; 108
 946:	21 f4       	brne	.+8      	; 0x950 <vfprintf+0x108>
 948:	83 2d       	mov	r24, r3
 94a:	80 68       	ori	r24, 0x80	; 128
 94c:	38 2e       	mov	r3, r24
 94e:	02 c0       	rjmp	.+4      	; 0x954 <vfprintf+0x10c>
 950:	88 36       	cpi	r24, 0x68	; 104
 952:	41 f4       	brne	.+16     	; 0x964 <vfprintf+0x11c>
 954:	f7 01       	movw	r30, r14
 956:	93 fd       	sbrc	r25, 3
 958:	85 91       	lpm	r24, Z+
 95a:	93 ff       	sbrs	r25, 3
 95c:	81 91       	ld	r24, Z+
 95e:	7f 01       	movw	r14, r30
 960:	81 11       	cpse	r24, r1
 962:	b3 cf       	rjmp	.-154    	; 0x8ca <vfprintf+0x82>
 964:	98 2f       	mov	r25, r24
 966:	9f 7d       	andi	r25, 0xDF	; 223
 968:	95 54       	subi	r25, 0x45	; 69
 96a:	93 30       	cpi	r25, 0x03	; 3
 96c:	28 f4       	brcc	.+10     	; 0x978 <vfprintf+0x130>
 96e:	0c 5f       	subi	r16, 0xFC	; 252
 970:	1f 4f       	sbci	r17, 0xFF	; 255
 972:	9f e3       	ldi	r25, 0x3F	; 63
 974:	99 83       	std	Y+1, r25	; 0x01
 976:	0d c0       	rjmp	.+26     	; 0x992 <vfprintf+0x14a>
 978:	83 36       	cpi	r24, 0x63	; 99
 97a:	31 f0       	breq	.+12     	; 0x988 <vfprintf+0x140>
 97c:	83 37       	cpi	r24, 0x73	; 115
 97e:	71 f0       	breq	.+28     	; 0x99c <vfprintf+0x154>
 980:	83 35       	cpi	r24, 0x53	; 83
 982:	09 f0       	breq	.+2      	; 0x986 <vfprintf+0x13e>
 984:	55 c0       	rjmp	.+170    	; 0xa30 <vfprintf+0x1e8>
 986:	20 c0       	rjmp	.+64     	; 0x9c8 <vfprintf+0x180>
 988:	f8 01       	movw	r30, r16
 98a:	80 81       	ld	r24, Z
 98c:	89 83       	std	Y+1, r24	; 0x01
 98e:	0e 5f       	subi	r16, 0xFE	; 254
 990:	1f 4f       	sbci	r17, 0xFF	; 255
 992:	88 24       	eor	r8, r8
 994:	83 94       	inc	r8
 996:	91 2c       	mov	r9, r1
 998:	53 01       	movw	r10, r6
 99a:	12 c0       	rjmp	.+36     	; 0x9c0 <vfprintf+0x178>
 99c:	28 01       	movw	r4, r16
 99e:	f2 e0       	ldi	r31, 0x02	; 2
 9a0:	4f 0e       	add	r4, r31
 9a2:	51 1c       	adc	r5, r1
 9a4:	f8 01       	movw	r30, r16
 9a6:	a0 80       	ld	r10, Z
 9a8:	b1 80       	ldd	r11, Z+1	; 0x01
 9aa:	36 fe       	sbrs	r3, 6
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <vfprintf+0x16c>
 9ae:	69 2d       	mov	r22, r9
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <vfprintf+0x170>
 9b4:	6f ef       	ldi	r22, 0xFF	; 255
 9b6:	7f ef       	ldi	r23, 0xFF	; 255
 9b8:	c5 01       	movw	r24, r10
 9ba:	4e d1       	rcall	.+668    	; 0xc58 <strnlen>
 9bc:	4c 01       	movw	r8, r24
 9be:	82 01       	movw	r16, r4
 9c0:	f3 2d       	mov	r31, r3
 9c2:	ff 77       	andi	r31, 0x7F	; 127
 9c4:	3f 2e       	mov	r3, r31
 9c6:	15 c0       	rjmp	.+42     	; 0x9f2 <vfprintf+0x1aa>
 9c8:	28 01       	movw	r4, r16
 9ca:	22 e0       	ldi	r18, 0x02	; 2
 9cc:	42 0e       	add	r4, r18
 9ce:	51 1c       	adc	r5, r1
 9d0:	f8 01       	movw	r30, r16
 9d2:	a0 80       	ld	r10, Z
 9d4:	b1 80       	ldd	r11, Z+1	; 0x01
 9d6:	36 fe       	sbrs	r3, 6
 9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <vfprintf+0x198>
 9da:	69 2d       	mov	r22, r9
 9dc:	70 e0       	ldi	r23, 0x00	; 0
 9de:	02 c0       	rjmp	.+4      	; 0x9e4 <vfprintf+0x19c>
 9e0:	6f ef       	ldi	r22, 0xFF	; 255
 9e2:	7f ef       	ldi	r23, 0xFF	; 255
 9e4:	c5 01       	movw	r24, r10
 9e6:	2d d1       	rcall	.+602    	; 0xc42 <strnlen_P>
 9e8:	4c 01       	movw	r8, r24
 9ea:	f3 2d       	mov	r31, r3
 9ec:	f0 68       	ori	r31, 0x80	; 128
 9ee:	3f 2e       	mov	r3, r31
 9f0:	82 01       	movw	r16, r4
 9f2:	33 fc       	sbrc	r3, 3
 9f4:	19 c0       	rjmp	.+50     	; 0xa28 <vfprintf+0x1e0>
 9f6:	82 2d       	mov	r24, r2
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	88 16       	cp	r8, r24
 9fc:	99 06       	cpc	r9, r25
 9fe:	a0 f4       	brcc	.+40     	; 0xa28 <vfprintf+0x1e0>
 a00:	b6 01       	movw	r22, r12
 a02:	80 e2       	ldi	r24, 0x20	; 32
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	33 d1       	rcall	.+614    	; 0xc6e <fputc>
 a08:	2a 94       	dec	r2
 a0a:	f5 cf       	rjmp	.-22     	; 0x9f6 <vfprintf+0x1ae>
 a0c:	f5 01       	movw	r30, r10
 a0e:	37 fc       	sbrc	r3, 7
 a10:	85 91       	lpm	r24, Z+
 a12:	37 fe       	sbrs	r3, 7
 a14:	81 91       	ld	r24, Z+
 a16:	5f 01       	movw	r10, r30
 a18:	b6 01       	movw	r22, r12
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	28 d1       	rcall	.+592    	; 0xc6e <fputc>
 a1e:	21 10       	cpse	r2, r1
 a20:	2a 94       	dec	r2
 a22:	21 e0       	ldi	r18, 0x01	; 1
 a24:	82 1a       	sub	r8, r18
 a26:	91 08       	sbc	r9, r1
 a28:	81 14       	cp	r8, r1
 a2a:	91 04       	cpc	r9, r1
 a2c:	79 f7       	brne	.-34     	; 0xa0c <vfprintf+0x1c4>
 a2e:	e1 c0       	rjmp	.+450    	; 0xbf2 <vfprintf+0x3aa>
 a30:	84 36       	cpi	r24, 0x64	; 100
 a32:	11 f0       	breq	.+4      	; 0xa38 <vfprintf+0x1f0>
 a34:	89 36       	cpi	r24, 0x69	; 105
 a36:	39 f5       	brne	.+78     	; 0xa86 <vfprintf+0x23e>
 a38:	f8 01       	movw	r30, r16
 a3a:	37 fe       	sbrs	r3, 7
 a3c:	07 c0       	rjmp	.+14     	; 0xa4c <vfprintf+0x204>
 a3e:	60 81       	ld	r22, Z
 a40:	71 81       	ldd	r23, Z+1	; 0x01
 a42:	82 81       	ldd	r24, Z+2	; 0x02
 a44:	93 81       	ldd	r25, Z+3	; 0x03
 a46:	0c 5f       	subi	r16, 0xFC	; 252
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	08 c0       	rjmp	.+16     	; 0xa5c <vfprintf+0x214>
 a4c:	60 81       	ld	r22, Z
 a4e:	71 81       	ldd	r23, Z+1	; 0x01
 a50:	07 2e       	mov	r0, r23
 a52:	00 0c       	add	r0, r0
 a54:	88 0b       	sbc	r24, r24
 a56:	99 0b       	sbc	r25, r25
 a58:	0e 5f       	subi	r16, 0xFE	; 254
 a5a:	1f 4f       	sbci	r17, 0xFF	; 255
 a5c:	f3 2d       	mov	r31, r3
 a5e:	ff 76       	andi	r31, 0x6F	; 111
 a60:	3f 2e       	mov	r3, r31
 a62:	97 ff       	sbrs	r25, 7
 a64:	09 c0       	rjmp	.+18     	; 0xa78 <vfprintf+0x230>
 a66:	90 95       	com	r25
 a68:	80 95       	com	r24
 a6a:	70 95       	com	r23
 a6c:	61 95       	neg	r22
 a6e:	7f 4f       	sbci	r23, 0xFF	; 255
 a70:	8f 4f       	sbci	r24, 0xFF	; 255
 a72:	9f 4f       	sbci	r25, 0xFF	; 255
 a74:	f0 68       	ori	r31, 0x80	; 128
 a76:	3f 2e       	mov	r3, r31
 a78:	2a e0       	ldi	r18, 0x0A	; 10
 a7a:	30 e0       	ldi	r19, 0x00	; 0
 a7c:	a3 01       	movw	r20, r6
 a7e:	33 d1       	rcall	.+614    	; 0xce6 <__ultoa_invert>
 a80:	88 2e       	mov	r8, r24
 a82:	86 18       	sub	r8, r6
 a84:	44 c0       	rjmp	.+136    	; 0xb0e <vfprintf+0x2c6>
 a86:	85 37       	cpi	r24, 0x75	; 117
 a88:	31 f4       	brne	.+12     	; 0xa96 <vfprintf+0x24e>
 a8a:	23 2d       	mov	r18, r3
 a8c:	2f 7e       	andi	r18, 0xEF	; 239
 a8e:	b2 2e       	mov	r11, r18
 a90:	2a e0       	ldi	r18, 0x0A	; 10
 a92:	30 e0       	ldi	r19, 0x00	; 0
 a94:	25 c0       	rjmp	.+74     	; 0xae0 <vfprintf+0x298>
 a96:	93 2d       	mov	r25, r3
 a98:	99 7f       	andi	r25, 0xF9	; 249
 a9a:	b9 2e       	mov	r11, r25
 a9c:	8f 36       	cpi	r24, 0x6F	; 111
 a9e:	c1 f0       	breq	.+48     	; 0xad0 <vfprintf+0x288>
 aa0:	18 f4       	brcc	.+6      	; 0xaa8 <vfprintf+0x260>
 aa2:	88 35       	cpi	r24, 0x58	; 88
 aa4:	79 f0       	breq	.+30     	; 0xac4 <vfprintf+0x27c>
 aa6:	ae c0       	rjmp	.+348    	; 0xc04 <vfprintf+0x3bc>
 aa8:	80 37       	cpi	r24, 0x70	; 112
 aaa:	19 f0       	breq	.+6      	; 0xab2 <vfprintf+0x26a>
 aac:	88 37       	cpi	r24, 0x78	; 120
 aae:	21 f0       	breq	.+8      	; 0xab8 <vfprintf+0x270>
 ab0:	a9 c0       	rjmp	.+338    	; 0xc04 <vfprintf+0x3bc>
 ab2:	e9 2f       	mov	r30, r25
 ab4:	e0 61       	ori	r30, 0x10	; 16
 ab6:	be 2e       	mov	r11, r30
 ab8:	b4 fe       	sbrs	r11, 4
 aba:	0d c0       	rjmp	.+26     	; 0xad6 <vfprintf+0x28e>
 abc:	fb 2d       	mov	r31, r11
 abe:	f4 60       	ori	r31, 0x04	; 4
 ac0:	bf 2e       	mov	r11, r31
 ac2:	09 c0       	rjmp	.+18     	; 0xad6 <vfprintf+0x28e>
 ac4:	34 fe       	sbrs	r3, 4
 ac6:	0a c0       	rjmp	.+20     	; 0xadc <vfprintf+0x294>
 ac8:	29 2f       	mov	r18, r25
 aca:	26 60       	ori	r18, 0x06	; 6
 acc:	b2 2e       	mov	r11, r18
 ace:	06 c0       	rjmp	.+12     	; 0xadc <vfprintf+0x294>
 ad0:	28 e0       	ldi	r18, 0x08	; 8
 ad2:	30 e0       	ldi	r19, 0x00	; 0
 ad4:	05 c0       	rjmp	.+10     	; 0xae0 <vfprintf+0x298>
 ad6:	20 e1       	ldi	r18, 0x10	; 16
 ad8:	30 e0       	ldi	r19, 0x00	; 0
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <vfprintf+0x298>
 adc:	20 e1       	ldi	r18, 0x10	; 16
 ade:	32 e0       	ldi	r19, 0x02	; 2
 ae0:	f8 01       	movw	r30, r16
 ae2:	b7 fe       	sbrs	r11, 7
 ae4:	07 c0       	rjmp	.+14     	; 0xaf4 <vfprintf+0x2ac>
 ae6:	60 81       	ld	r22, Z
 ae8:	71 81       	ldd	r23, Z+1	; 0x01
 aea:	82 81       	ldd	r24, Z+2	; 0x02
 aec:	93 81       	ldd	r25, Z+3	; 0x03
 aee:	0c 5f       	subi	r16, 0xFC	; 252
 af0:	1f 4f       	sbci	r17, 0xFF	; 255
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <vfprintf+0x2b8>
 af4:	60 81       	ld	r22, Z
 af6:	71 81       	ldd	r23, Z+1	; 0x01
 af8:	80 e0       	ldi	r24, 0x00	; 0
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	0e 5f       	subi	r16, 0xFE	; 254
 afe:	1f 4f       	sbci	r17, 0xFF	; 255
 b00:	a3 01       	movw	r20, r6
 b02:	f1 d0       	rcall	.+482    	; 0xce6 <__ultoa_invert>
 b04:	88 2e       	mov	r8, r24
 b06:	86 18       	sub	r8, r6
 b08:	fb 2d       	mov	r31, r11
 b0a:	ff 77       	andi	r31, 0x7F	; 127
 b0c:	3f 2e       	mov	r3, r31
 b0e:	36 fe       	sbrs	r3, 6
 b10:	0d c0       	rjmp	.+26     	; 0xb2c <vfprintf+0x2e4>
 b12:	23 2d       	mov	r18, r3
 b14:	2e 7f       	andi	r18, 0xFE	; 254
 b16:	a2 2e       	mov	r10, r18
 b18:	89 14       	cp	r8, r9
 b1a:	58 f4       	brcc	.+22     	; 0xb32 <vfprintf+0x2ea>
 b1c:	34 fe       	sbrs	r3, 4
 b1e:	0b c0       	rjmp	.+22     	; 0xb36 <vfprintf+0x2ee>
 b20:	32 fc       	sbrc	r3, 2
 b22:	09 c0       	rjmp	.+18     	; 0xb36 <vfprintf+0x2ee>
 b24:	83 2d       	mov	r24, r3
 b26:	8e 7e       	andi	r24, 0xEE	; 238
 b28:	a8 2e       	mov	r10, r24
 b2a:	05 c0       	rjmp	.+10     	; 0xb36 <vfprintf+0x2ee>
 b2c:	b8 2c       	mov	r11, r8
 b2e:	a3 2c       	mov	r10, r3
 b30:	03 c0       	rjmp	.+6      	; 0xb38 <vfprintf+0x2f0>
 b32:	b8 2c       	mov	r11, r8
 b34:	01 c0       	rjmp	.+2      	; 0xb38 <vfprintf+0x2f0>
 b36:	b9 2c       	mov	r11, r9
 b38:	a4 fe       	sbrs	r10, 4
 b3a:	0f c0       	rjmp	.+30     	; 0xb5a <vfprintf+0x312>
 b3c:	fe 01       	movw	r30, r28
 b3e:	e8 0d       	add	r30, r8
 b40:	f1 1d       	adc	r31, r1
 b42:	80 81       	ld	r24, Z
 b44:	80 33       	cpi	r24, 0x30	; 48
 b46:	21 f4       	brne	.+8      	; 0xb50 <vfprintf+0x308>
 b48:	9a 2d       	mov	r25, r10
 b4a:	99 7e       	andi	r25, 0xE9	; 233
 b4c:	a9 2e       	mov	r10, r25
 b4e:	09 c0       	rjmp	.+18     	; 0xb62 <vfprintf+0x31a>
 b50:	a2 fe       	sbrs	r10, 2
 b52:	06 c0       	rjmp	.+12     	; 0xb60 <vfprintf+0x318>
 b54:	b3 94       	inc	r11
 b56:	b3 94       	inc	r11
 b58:	04 c0       	rjmp	.+8      	; 0xb62 <vfprintf+0x31a>
 b5a:	8a 2d       	mov	r24, r10
 b5c:	86 78       	andi	r24, 0x86	; 134
 b5e:	09 f0       	breq	.+2      	; 0xb62 <vfprintf+0x31a>
 b60:	b3 94       	inc	r11
 b62:	a3 fc       	sbrc	r10, 3
 b64:	10 c0       	rjmp	.+32     	; 0xb86 <vfprintf+0x33e>
 b66:	a0 fe       	sbrs	r10, 0
 b68:	06 c0       	rjmp	.+12     	; 0xb76 <vfprintf+0x32e>
 b6a:	b2 14       	cp	r11, r2
 b6c:	80 f4       	brcc	.+32     	; 0xb8e <vfprintf+0x346>
 b6e:	28 0c       	add	r2, r8
 b70:	92 2c       	mov	r9, r2
 b72:	9b 18       	sub	r9, r11
 b74:	0d c0       	rjmp	.+26     	; 0xb90 <vfprintf+0x348>
 b76:	b2 14       	cp	r11, r2
 b78:	58 f4       	brcc	.+22     	; 0xb90 <vfprintf+0x348>
 b7a:	b6 01       	movw	r22, r12
 b7c:	80 e2       	ldi	r24, 0x20	; 32
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	76 d0       	rcall	.+236    	; 0xc6e <fputc>
 b82:	b3 94       	inc	r11
 b84:	f8 cf       	rjmp	.-16     	; 0xb76 <vfprintf+0x32e>
 b86:	b2 14       	cp	r11, r2
 b88:	18 f4       	brcc	.+6      	; 0xb90 <vfprintf+0x348>
 b8a:	2b 18       	sub	r2, r11
 b8c:	02 c0       	rjmp	.+4      	; 0xb92 <vfprintf+0x34a>
 b8e:	98 2c       	mov	r9, r8
 b90:	21 2c       	mov	r2, r1
 b92:	a4 fe       	sbrs	r10, 4
 b94:	0f c0       	rjmp	.+30     	; 0xbb4 <vfprintf+0x36c>
 b96:	b6 01       	movw	r22, r12
 b98:	80 e3       	ldi	r24, 0x30	; 48
 b9a:	90 e0       	ldi	r25, 0x00	; 0
 b9c:	68 d0       	rcall	.+208    	; 0xc6e <fputc>
 b9e:	a2 fe       	sbrs	r10, 2
 ba0:	16 c0       	rjmp	.+44     	; 0xbce <vfprintf+0x386>
 ba2:	a1 fc       	sbrc	r10, 1
 ba4:	03 c0       	rjmp	.+6      	; 0xbac <vfprintf+0x364>
 ba6:	88 e7       	ldi	r24, 0x78	; 120
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	02 c0       	rjmp	.+4      	; 0xbb0 <vfprintf+0x368>
 bac:	88 e5       	ldi	r24, 0x58	; 88
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	b6 01       	movw	r22, r12
 bb2:	0c c0       	rjmp	.+24     	; 0xbcc <vfprintf+0x384>
 bb4:	8a 2d       	mov	r24, r10
 bb6:	86 78       	andi	r24, 0x86	; 134
 bb8:	51 f0       	breq	.+20     	; 0xbce <vfprintf+0x386>
 bba:	a1 fe       	sbrs	r10, 1
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <vfprintf+0x37a>
 bbe:	8b e2       	ldi	r24, 0x2B	; 43
 bc0:	01 c0       	rjmp	.+2      	; 0xbc4 <vfprintf+0x37c>
 bc2:	80 e2       	ldi	r24, 0x20	; 32
 bc4:	a7 fc       	sbrc	r10, 7
 bc6:	8d e2       	ldi	r24, 0x2D	; 45
 bc8:	b6 01       	movw	r22, r12
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	50 d0       	rcall	.+160    	; 0xc6e <fputc>
 bce:	89 14       	cp	r8, r9
 bd0:	30 f4       	brcc	.+12     	; 0xbde <vfprintf+0x396>
 bd2:	b6 01       	movw	r22, r12
 bd4:	80 e3       	ldi	r24, 0x30	; 48
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	4a d0       	rcall	.+148    	; 0xc6e <fputc>
 bda:	9a 94       	dec	r9
 bdc:	f8 cf       	rjmp	.-16     	; 0xbce <vfprintf+0x386>
 bde:	8a 94       	dec	r8
 be0:	f3 01       	movw	r30, r6
 be2:	e8 0d       	add	r30, r8
 be4:	f1 1d       	adc	r31, r1
 be6:	80 81       	ld	r24, Z
 be8:	b6 01       	movw	r22, r12
 bea:	90 e0       	ldi	r25, 0x00	; 0
 bec:	40 d0       	rcall	.+128    	; 0xc6e <fputc>
 bee:	81 10       	cpse	r8, r1
 bf0:	f6 cf       	rjmp	.-20     	; 0xbde <vfprintf+0x396>
 bf2:	22 20       	and	r2, r2
 bf4:	09 f4       	brne	.+2      	; 0xbf8 <vfprintf+0x3b0>
 bf6:	4e ce       	rjmp	.-868    	; 0x894 <vfprintf+0x4c>
 bf8:	b6 01       	movw	r22, r12
 bfa:	80 e2       	ldi	r24, 0x20	; 32
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	37 d0       	rcall	.+110    	; 0xc6e <fputc>
 c00:	2a 94       	dec	r2
 c02:	f7 cf       	rjmp	.-18     	; 0xbf2 <vfprintf+0x3aa>
 c04:	f6 01       	movw	r30, r12
 c06:	86 81       	ldd	r24, Z+6	; 0x06
 c08:	97 81       	ldd	r25, Z+7	; 0x07
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0x3c8>
 c0c:	8f ef       	ldi	r24, 0xFF	; 255
 c0e:	9f ef       	ldi	r25, 0xFF	; 255
 c10:	2b 96       	adiw	r28, 0x0b	; 11
 c12:	0f b6       	in	r0, 0x3f	; 63
 c14:	f8 94       	cli
 c16:	de bf       	out	0x3e, r29	; 62
 c18:	0f be       	out	0x3f, r0	; 63
 c1a:	cd bf       	out	0x3d, r28	; 61
 c1c:	df 91       	pop	r29
 c1e:	cf 91       	pop	r28
 c20:	1f 91       	pop	r17
 c22:	0f 91       	pop	r16
 c24:	ff 90       	pop	r15
 c26:	ef 90       	pop	r14
 c28:	df 90       	pop	r13
 c2a:	cf 90       	pop	r12
 c2c:	bf 90       	pop	r11
 c2e:	af 90       	pop	r10
 c30:	9f 90       	pop	r9
 c32:	8f 90       	pop	r8
 c34:	7f 90       	pop	r7
 c36:	6f 90       	pop	r6
 c38:	5f 90       	pop	r5
 c3a:	4f 90       	pop	r4
 c3c:	3f 90       	pop	r3
 c3e:	2f 90       	pop	r2
 c40:	08 95       	ret

00000c42 <strnlen_P>:
 c42:	fc 01       	movw	r30, r24
 c44:	05 90       	lpm	r0, Z+
 c46:	61 50       	subi	r22, 0x01	; 1
 c48:	70 40       	sbci	r23, 0x00	; 0
 c4a:	01 10       	cpse	r0, r1
 c4c:	d8 f7       	brcc	.-10     	; 0xc44 <strnlen_P+0x2>
 c4e:	80 95       	com	r24
 c50:	90 95       	com	r25
 c52:	8e 0f       	add	r24, r30
 c54:	9f 1f       	adc	r25, r31
 c56:	08 95       	ret

00000c58 <strnlen>:
 c58:	fc 01       	movw	r30, r24
 c5a:	61 50       	subi	r22, 0x01	; 1
 c5c:	70 40       	sbci	r23, 0x00	; 0
 c5e:	01 90       	ld	r0, Z+
 c60:	01 10       	cpse	r0, r1
 c62:	d8 f7       	brcc	.-10     	; 0xc5a <strnlen+0x2>
 c64:	80 95       	com	r24
 c66:	90 95       	com	r25
 c68:	8e 0f       	add	r24, r30
 c6a:	9f 1f       	adc	r25, r31
 c6c:	08 95       	ret

00000c6e <fputc>:
 c6e:	0f 93       	push	r16
 c70:	1f 93       	push	r17
 c72:	cf 93       	push	r28
 c74:	df 93       	push	r29
 c76:	fb 01       	movw	r30, r22
 c78:	23 81       	ldd	r18, Z+3	; 0x03
 c7a:	21 fd       	sbrc	r18, 1
 c7c:	03 c0       	rjmp	.+6      	; 0xc84 <fputc+0x16>
 c7e:	8f ef       	ldi	r24, 0xFF	; 255
 c80:	9f ef       	ldi	r25, 0xFF	; 255
 c82:	2c c0       	rjmp	.+88     	; 0xcdc <fputc+0x6e>
 c84:	22 ff       	sbrs	r18, 2
 c86:	16 c0       	rjmp	.+44     	; 0xcb4 <fputc+0x46>
 c88:	46 81       	ldd	r20, Z+6	; 0x06
 c8a:	57 81       	ldd	r21, Z+7	; 0x07
 c8c:	24 81       	ldd	r18, Z+4	; 0x04
 c8e:	35 81       	ldd	r19, Z+5	; 0x05
 c90:	42 17       	cp	r20, r18
 c92:	53 07       	cpc	r21, r19
 c94:	44 f4       	brge	.+16     	; 0xca6 <fputc+0x38>
 c96:	a0 81       	ld	r26, Z
 c98:	b1 81       	ldd	r27, Z+1	; 0x01
 c9a:	9d 01       	movw	r18, r26
 c9c:	2f 5f       	subi	r18, 0xFF	; 255
 c9e:	3f 4f       	sbci	r19, 0xFF	; 255
 ca0:	31 83       	std	Z+1, r19	; 0x01
 ca2:	20 83       	st	Z, r18
 ca4:	8c 93       	st	X, r24
 ca6:	26 81       	ldd	r18, Z+6	; 0x06
 ca8:	37 81       	ldd	r19, Z+7	; 0x07
 caa:	2f 5f       	subi	r18, 0xFF	; 255
 cac:	3f 4f       	sbci	r19, 0xFF	; 255
 cae:	37 83       	std	Z+7, r19	; 0x07
 cb0:	26 83       	std	Z+6, r18	; 0x06
 cb2:	14 c0       	rjmp	.+40     	; 0xcdc <fputc+0x6e>
 cb4:	8b 01       	movw	r16, r22
 cb6:	ec 01       	movw	r28, r24
 cb8:	fb 01       	movw	r30, r22
 cba:	00 84       	ldd	r0, Z+8	; 0x08
 cbc:	f1 85       	ldd	r31, Z+9	; 0x09
 cbe:	e0 2d       	mov	r30, r0
 cc0:	19 95       	eicall
 cc2:	89 2b       	or	r24, r25
 cc4:	e1 f6       	brne	.-72     	; 0xc7e <fputc+0x10>
 cc6:	d8 01       	movw	r26, r16
 cc8:	16 96       	adiw	r26, 0x06	; 6
 cca:	8d 91       	ld	r24, X+
 ccc:	9c 91       	ld	r25, X
 cce:	17 97       	sbiw	r26, 0x07	; 7
 cd0:	01 96       	adiw	r24, 0x01	; 1
 cd2:	17 96       	adiw	r26, 0x07	; 7
 cd4:	9c 93       	st	X, r25
 cd6:	8e 93       	st	-X, r24
 cd8:	16 97       	sbiw	r26, 0x06	; 6
 cda:	ce 01       	movw	r24, r28
 cdc:	df 91       	pop	r29
 cde:	cf 91       	pop	r28
 ce0:	1f 91       	pop	r17
 ce2:	0f 91       	pop	r16
 ce4:	08 95       	ret

00000ce6 <__ultoa_invert>:
 ce6:	fa 01       	movw	r30, r20
 ce8:	aa 27       	eor	r26, r26
 cea:	28 30       	cpi	r18, 0x08	; 8
 cec:	51 f1       	breq	.+84     	; 0xd42 <__ultoa_invert+0x5c>
 cee:	20 31       	cpi	r18, 0x10	; 16
 cf0:	81 f1       	breq	.+96     	; 0xd52 <__ultoa_invert+0x6c>
 cf2:	e8 94       	clt
 cf4:	6f 93       	push	r22
 cf6:	6e 7f       	andi	r22, 0xFE	; 254
 cf8:	6e 5f       	subi	r22, 0xFE	; 254
 cfa:	7f 4f       	sbci	r23, 0xFF	; 255
 cfc:	8f 4f       	sbci	r24, 0xFF	; 255
 cfe:	9f 4f       	sbci	r25, 0xFF	; 255
 d00:	af 4f       	sbci	r26, 0xFF	; 255
 d02:	b1 e0       	ldi	r27, 0x01	; 1
 d04:	3e d0       	rcall	.+124    	; 0xd82 <__ultoa_invert+0x9c>
 d06:	b4 e0       	ldi	r27, 0x04	; 4
 d08:	3c d0       	rcall	.+120    	; 0xd82 <__ultoa_invert+0x9c>
 d0a:	67 0f       	add	r22, r23
 d0c:	78 1f       	adc	r23, r24
 d0e:	89 1f       	adc	r24, r25
 d10:	9a 1f       	adc	r25, r26
 d12:	a1 1d       	adc	r26, r1
 d14:	68 0f       	add	r22, r24
 d16:	79 1f       	adc	r23, r25
 d18:	8a 1f       	adc	r24, r26
 d1a:	91 1d       	adc	r25, r1
 d1c:	a1 1d       	adc	r26, r1
 d1e:	6a 0f       	add	r22, r26
 d20:	71 1d       	adc	r23, r1
 d22:	81 1d       	adc	r24, r1
 d24:	91 1d       	adc	r25, r1
 d26:	a1 1d       	adc	r26, r1
 d28:	20 d0       	rcall	.+64     	; 0xd6a <__ultoa_invert+0x84>
 d2a:	09 f4       	brne	.+2      	; 0xd2e <__ultoa_invert+0x48>
 d2c:	68 94       	set
 d2e:	3f 91       	pop	r19
 d30:	2a e0       	ldi	r18, 0x0A	; 10
 d32:	26 9f       	mul	r18, r22
 d34:	11 24       	eor	r1, r1
 d36:	30 19       	sub	r19, r0
 d38:	30 5d       	subi	r19, 0xD0	; 208
 d3a:	31 93       	st	Z+, r19
 d3c:	de f6       	brtc	.-74     	; 0xcf4 <__ultoa_invert+0xe>
 d3e:	cf 01       	movw	r24, r30
 d40:	08 95       	ret
 d42:	46 2f       	mov	r20, r22
 d44:	47 70       	andi	r20, 0x07	; 7
 d46:	40 5d       	subi	r20, 0xD0	; 208
 d48:	41 93       	st	Z+, r20
 d4a:	b3 e0       	ldi	r27, 0x03	; 3
 d4c:	0f d0       	rcall	.+30     	; 0xd6c <__ultoa_invert+0x86>
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__ultoa_invert+0x5c>
 d50:	f6 cf       	rjmp	.-20     	; 0xd3e <__ultoa_invert+0x58>
 d52:	46 2f       	mov	r20, r22
 d54:	4f 70       	andi	r20, 0x0F	; 15
 d56:	40 5d       	subi	r20, 0xD0	; 208
 d58:	4a 33       	cpi	r20, 0x3A	; 58
 d5a:	18 f0       	brcs	.+6      	; 0xd62 <__ultoa_invert+0x7c>
 d5c:	49 5d       	subi	r20, 0xD9	; 217
 d5e:	31 fd       	sbrc	r19, 1
 d60:	40 52       	subi	r20, 0x20	; 32
 d62:	41 93       	st	Z+, r20
 d64:	02 d0       	rcall	.+4      	; 0xd6a <__ultoa_invert+0x84>
 d66:	a9 f7       	brne	.-22     	; 0xd52 <__ultoa_invert+0x6c>
 d68:	ea cf       	rjmp	.-44     	; 0xd3e <__ultoa_invert+0x58>
 d6a:	b4 e0       	ldi	r27, 0x04	; 4
 d6c:	a6 95       	lsr	r26
 d6e:	97 95       	ror	r25
 d70:	87 95       	ror	r24
 d72:	77 95       	ror	r23
 d74:	67 95       	ror	r22
 d76:	ba 95       	dec	r27
 d78:	c9 f7       	brne	.-14     	; 0xd6c <__ultoa_invert+0x86>
 d7a:	00 97       	sbiw	r24, 0x00	; 0
 d7c:	61 05       	cpc	r22, r1
 d7e:	71 05       	cpc	r23, r1
 d80:	08 95       	ret
 d82:	9b 01       	movw	r18, r22
 d84:	ac 01       	movw	r20, r24
 d86:	0a 2e       	mov	r0, r26
 d88:	06 94       	lsr	r0
 d8a:	57 95       	ror	r21
 d8c:	47 95       	ror	r20
 d8e:	37 95       	ror	r19
 d90:	27 95       	ror	r18
 d92:	ba 95       	dec	r27
 d94:	c9 f7       	brne	.-14     	; 0xd88 <__ultoa_invert+0xa2>
 d96:	62 0f       	add	r22, r18
 d98:	73 1f       	adc	r23, r19
 d9a:	84 1f       	adc	r24, r20
 d9c:	95 1f       	adc	r25, r21
 d9e:	a0 1d       	adc	r26, r0
 da0:	08 95       	ret

00000da2 <_exit>:
 da2:	f8 94       	cli

00000da4 <__stop_program>:
 da4:	ff cf       	rjmp	.-2      	; 0xda4 <__stop_program>
