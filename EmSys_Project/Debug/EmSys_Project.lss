
EmSys_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  00001972  00001a06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001972  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800224  00800224  00001a2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00001ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028d1  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011ac  00000000  00000000  00004561  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eb2  00000000  00000000  0000570d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000650  00000000  00000000  000065c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009fc  00000000  00000000  00006c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c8e  00000000  00000000  0000760c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000929a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c3       	rjmp	.+1618   	; 0x654 <__ctors_end>
       2:	00 00       	nop
       4:	47 c3       	rjmp	.+1678   	; 0x694 <__bad_interrupt>
       6:	00 00       	nop
       8:	45 c3       	rjmp	.+1674   	; 0x694 <__bad_interrupt>
       a:	00 00       	nop
       c:	43 c3       	rjmp	.+1670   	; 0x694 <__bad_interrupt>
       e:	00 00       	nop
      10:	41 c3       	rjmp	.+1666   	; 0x694 <__bad_interrupt>
      12:	00 00       	nop
      14:	f1 c5       	rjmp	.+3042   	; 0xbf8 <__vector_5>
      16:	00 00       	nop
      18:	3d c3       	rjmp	.+1658   	; 0x694 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	3b c3       	rjmp	.+1654   	; 0x694 <__bad_interrupt>
      1e:	00 00       	nop
      20:	39 c3       	rjmp	.+1650   	; 0x694 <__bad_interrupt>
      22:	00 00       	nop
      24:	37 c3       	rjmp	.+1646   	; 0x694 <__bad_interrupt>
      26:	00 00       	nop
      28:	35 c3       	rjmp	.+1642   	; 0x694 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	33 c3       	rjmp	.+1638   	; 0x694 <__bad_interrupt>
      2e:	00 00       	nop
      30:	31 c3       	rjmp	.+1634   	; 0x694 <__bad_interrupt>
      32:	00 00       	nop
      34:	2f c3       	rjmp	.+1630   	; 0x694 <__bad_interrupt>
      36:	00 00       	nop
      38:	2d c3       	rjmp	.+1626   	; 0x694 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	2b c3       	rjmp	.+1622   	; 0x694 <__bad_interrupt>
      3e:	00 00       	nop
      40:	29 c3       	rjmp	.+1618   	; 0x694 <__bad_interrupt>
      42:	00 00       	nop
      44:	27 c3       	rjmp	.+1614   	; 0x694 <__bad_interrupt>
      46:	00 00       	nop
      48:	25 c3       	rjmp	.+1610   	; 0x694 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	23 c3       	rjmp	.+1606   	; 0x694 <__bad_interrupt>
      4e:	00 00       	nop
      50:	21 c3       	rjmp	.+1602   	; 0x694 <__bad_interrupt>
      52:	00 00       	nop
      54:	1f c3       	rjmp	.+1598   	; 0x694 <__bad_interrupt>
      56:	00 00       	nop
      58:	1d c3       	rjmp	.+1594   	; 0x694 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a6 c5       	rjmp	.+2892   	; 0xbaa <__vector_23>
      5e:	00 00       	nop
      60:	19 c3       	rjmp	.+1586   	; 0x694 <__bad_interrupt>
      62:	00 00       	nop
      64:	17 c3       	rjmp	.+1582   	; 0x694 <__bad_interrupt>
      66:	00 00       	nop
      68:	15 c3       	rjmp	.+1578   	; 0x694 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	13 c3       	rjmp	.+1574   	; 0x694 <__bad_interrupt>
      6e:	00 00       	nop
      70:	11 c3       	rjmp	.+1570   	; 0x694 <__bad_interrupt>
      72:	00 00       	nop
      74:	0f c3       	rjmp	.+1566   	; 0x694 <__bad_interrupt>
      76:	00 00       	nop
      78:	0d c3       	rjmp	.+1562   	; 0x694 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	0b c3       	rjmp	.+1558   	; 0x694 <__bad_interrupt>
      7e:	00 00       	nop
      80:	09 c3       	rjmp	.+1554   	; 0x694 <__bad_interrupt>
      82:	00 00       	nop
      84:	07 c3       	rjmp	.+1550   	; 0x694 <__bad_interrupt>
      86:	00 00       	nop
      88:	05 c3       	rjmp	.+1546   	; 0x694 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	03 c3       	rjmp	.+1542   	; 0x694 <__bad_interrupt>
      8e:	00 00       	nop
      90:	01 c3       	rjmp	.+1538   	; 0x694 <__bad_interrupt>
      92:	00 00       	nop
      94:	ff c2       	rjmp	.+1534   	; 0x694 <__bad_interrupt>
      96:	00 00       	nop
      98:	fd c2       	rjmp	.+1530   	; 0x694 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	fb c2       	rjmp	.+1526   	; 0x694 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	f9 c2       	rjmp	.+1522   	; 0x694 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	f7 c2       	rjmp	.+1518   	; 0x694 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	f5 c2       	rjmp	.+1514   	; 0x694 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	f3 c2       	rjmp	.+1510   	; 0x694 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	f1 c2       	rjmp	.+1506   	; 0x694 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ef c2       	rjmp	.+1502   	; 0x694 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	ed c2       	rjmp	.+1498   	; 0x694 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	eb c2       	rjmp	.+1494   	; 0x694 <__bad_interrupt>
      be:	00 00       	nop
      c0:	e9 c2       	rjmp	.+1490   	; 0x694 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	e7 c2       	rjmp	.+1486   	; 0x694 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	e5 c2       	rjmp	.+1482   	; 0x694 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	e3 c2       	rjmp	.+1478   	; 0x694 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	e1 c2       	rjmp	.+1474   	; 0x694 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	df c2       	rjmp	.+1470   	; 0x694 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	dd c2       	rjmp	.+1466   	; 0x694 <__bad_interrupt>
      da:	00 00       	nop
      dc:	db c2       	rjmp	.+1462   	; 0x694 <__bad_interrupt>
      de:	00 00       	nop
      e0:	d9 c2       	rjmp	.+1458   	; 0x694 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	ef 03       	fmulsu	r22, r23
      e6:	03 80       	ldd	r0, Z+3	; 0x03
      e8:	02 cf       	rjmp	.-508    	; 0xfffffeee <__eeprom_end+0xff7efeee>
      ea:	03 00       	.word	0x0003	; ????
      ec:	c1 30       	cpi	r28, 0x01	; 1
      ee:	ed 04       	cpc	r14, r13
      f0:	64 03       	mulsu	r22, r20
      f2:	12 81       	ldd	r17, Z+2	; 0x02
      f4:	e8 03       	fmulsu	r22, r16
      f6:	85 00       	.word	0x0085	; ????
      f8:	78 cb       	rjmp	.-2320   	; 0xfffff7ea <__eeprom_end+0xff7ef7ea>
      fa:	05 39       	cpi	r16, 0x95	; 149
      fc:	2c 00       	.word	0x002c	; ????
      fe:	34 02       	muls	r19, r20
     100:	f7 01       	movw	r30, r14
     102:	20 ea       	ldi	r18, 0xA0	; 160
     104:	02 00       	.word	0x0002	; ????
     106:	00 c0       	rjmp	.+0      	; 0x108 <__trampolines_end+0x24>
     108:	01 23       	and	r16, r17
     10a:	c1 01       	movw	r24, r2
     10c:	10 c5       	rjmp	.+2592   	; 0xb2e <display_fill_color+0x8>
     10e:	02 3e       	cpi	r16, 0xE2	; 226
     110:	28 c7       	rjmp	.+3664   	; 0xf62 <__addsf3x+0x14>
     112:	01 86       	std	Z+9, r0	; 0x09
     114:	36 01       	movw	r6, r12
     116:	48 37       	cpi	r20, 0x78	; 120
     118:	01 00       	.word	0x0001	; ????
     11a:	3a 01       	movw	r6, r20
     11c:	55 b1       	in	r21, 0x05	; 5
     11e:	02 00       	.word	0x0002	; ????
     120:	18 b6       	in	r1, 0x38	; 56
     122:	03 08       	sbc	r0, r3
     124:	82 27       	eor	r24, r18
     126:	f2 01       	movw	r30, r4
     128:	00 26       	eor	r0, r16
     12a:	01 01       	movw	r0, r2
     12c:	e0 0f       	add	r30, r16
     12e:	0f 31       	cpi	r16, 0x1F	; 31
     130:	2b 0c       	add	r2, r11
     132:	0e 08       	sbc	r0, r14
     134:	4e f1       	brts	.+82     	; 0x188 <font+0x35>
     136:	37 07       	cpc	r19, r23
     138:	10 03       	mulsu	r17, r16
     13a:	0e 09       	sbc	r16, r14
     13c:	00 e1       	ldi	r16, 0x10	; 16
     13e:	0f 00       	.word	0x000f	; ????
     140:	0e 14       	cp	r0, r14
     142:	03 11       	cpse	r16, r3
     144:	07 31       	cpi	r16, 0x17	; 23
     146:	c1 48       	sbci	r28, 0x81	; 129
     148:	08 0f       	add	r16, r24
     14a:	0c 31       	cpi	r16, 0x1C	; 28
     14c:	36 0f       	add	r19, r22
     14e:	11 80       	ldd	r1, Z+1	; 0x01
     150:	29 80       	ldd	r2, Y+1	; 0x01
	...

00000153 <font>:
     153:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
     163:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
     173:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
     183:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
     193:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
     1a3:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
     1b3:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
     1c3:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
     1d3:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
     1e3:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
     1f3:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     203:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     213:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
     223:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
     233:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
     243:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
     253:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
     263:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
     273:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
     283:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
     293:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
     2a3:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
     2b3:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
     2c3:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2d3:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2e3:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     2f3:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     303:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
     313:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
     323:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
     333:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
     343:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
     353:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
     363:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
     373:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
     383:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
     393:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
     3a3:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
     3b3:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
     3c3:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
     3d3:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
     3e3:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
     3f3:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
     403:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
     413:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
     423:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
     433:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
     443:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
     453:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
     463:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
     473:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
     483:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
     493:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
     4a3:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
     4b3:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
     4c3:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
     4d3:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
     4e3:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
     4f3:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
     503:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
     513:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
     523:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
     533:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
     543:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
     553:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
     563:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
     573:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
     583:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
     593:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
     5a3:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
     5b3:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
     5c3:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
     5d3:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
     5e3:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
     5f3:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
     603:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
     613:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
     623:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
     633:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
     643:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....
	...

00000654 <__ctors_end>:
     654:	11 24       	eor	r1, r1
     656:	1f be       	out	0x3f, r1	; 63
     658:	cf ef       	ldi	r28, 0xFF	; 255
     65a:	d1 e2       	ldi	r29, 0x21	; 33
     65c:	de bf       	out	0x3e, r29	; 62
     65e:	cd bf       	out	0x3d, r28	; 61
     660:	00 e0       	ldi	r16, 0x00	; 0
     662:	0c bf       	out	0x3c, r16	; 60

00000664 <__do_copy_data>:
     664:	12 e0       	ldi	r17, 0x02	; 2
     666:	a0 e0       	ldi	r26, 0x00	; 0
     668:	b2 e0       	ldi	r27, 0x02	; 2
     66a:	e2 e7       	ldi	r30, 0x72	; 114
     66c:	f9 e1       	ldi	r31, 0x19	; 25
     66e:	00 e0       	ldi	r16, 0x00	; 0
     670:	0b bf       	out	0x3b, r16	; 59
     672:	02 c0       	rjmp	.+4      	; 0x678 <__do_copy_data+0x14>
     674:	07 90       	elpm	r0, Z+
     676:	0d 92       	st	X+, r0
     678:	a4 32       	cpi	r26, 0x24	; 36
     67a:	b1 07       	cpc	r27, r17
     67c:	d9 f7       	brne	.-10     	; 0x674 <__do_copy_data+0x10>

0000067e <__do_clear_bss>:
     67e:	22 e0       	ldi	r18, 0x02	; 2
     680:	a4 e2       	ldi	r26, 0x24	; 36
     682:	b2 e0       	ldi	r27, 0x02	; 2
     684:	01 c0       	rjmp	.+2      	; 0x688 <.do_clear_bss_start>

00000686 <.do_clear_bss_loop>:
     686:	1d 92       	st	X+, r1

00000688 <.do_clear_bss_start>:
     688:	a4 33       	cpi	r26, 0x34	; 52
     68a:	b2 07       	cpc	r27, r18
     68c:	e1 f7       	brne	.-8      	; 0x686 <.do_clear_bss_loop>
     68e:	c3 d2       	rcall	.+1414   	; 0xc16 <main>
     690:	0c 94 b7 0c 	jmp	0x196e	; 0x196e <_exit>

00000694 <__bad_interrupt>:
     694:	b5 cc       	rjmp	.-1686   	; 0x0 <__vectors>

00000696 <ADC_Init>:
////    ADC0    ////
////////////////////


void ADC_Init(void){
	ADMUX = 1 << REFS0;                                                // select avcc & adc0
     696:	80 e4       	ldi	r24, 0x40	; 64
     698:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable adc & set prescaler to 128
     69c:	87 e8       	ldi	r24, 0x87	; 135
     69e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     6a2:	08 95       	ret

000006a4 <ADC_measure>:
}

float ADC_measure(void){
     6a4:	cf 92       	push	r12
     6a6:	df 92       	push	r13
     6a8:	ef 92       	push	r14
     6aa:	ff 92       	push	r15
     6ac:	cf 93       	push	r28
	uint32_t adc_sum = 0;
	for (uint8_t i = 0; i < NUM_SAMPLES; i++) {
     6ae:	c0 e0       	ldi	r28, 0x00	; 0
	ADMUX = 1 << REFS0;                                                // select avcc & adc0
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable adc & set prescaler to 128
}

float ADC_measure(void){
	uint32_t adc_sum = 0;
     6b0:	c1 2c       	mov	r12, r1
     6b2:	d1 2c       	mov	r13, r1
     6b4:	76 01       	movw	r14, r12
	for (uint8_t i = 0; i < NUM_SAMPLES; i++) {
     6b6:	1d c0       	rjmp	.+58     	; 0x6f2 <ADC_measure+0x4e>
		ADCSRA |= (1 << ADSC);                        // Start ADC
     6b8:	ea e7       	ldi	r30, 0x7A	; 122
     6ba:	f0 e0       	ldi	r31, 0x00	; 0
     6bc:	80 81       	ld	r24, Z
     6be:	80 64       	ori	r24, 0x40	; 64
     6c0:	80 83       	st	Z, r24
		while (ADCSRA & (1 << ADSC));                 // Wait for conversion
     6c2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     6c6:	86 fd       	sbrc	r24, 6
     6c8:	fc cf       	rjmp	.-8      	; 0x6c2 <ADC_measure+0x1e>
		adc_sum += (ADCL | (ADCH << 8));              // Accumulate result
     6ca:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     6ce:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	98 2f       	mov	r25, r24
     6d6:	88 27       	eor	r24, r24
     6d8:	82 2b       	or	r24, r18
     6da:	09 2e       	mov	r0, r25
     6dc:	00 0c       	add	r0, r0
     6de:	aa 0b       	sbc	r26, r26
     6e0:	bb 0b       	sbc	r27, r27
     6e2:	c8 0e       	add	r12, r24
     6e4:	d9 1e       	adc	r13, r25
     6e6:	ea 1e       	adc	r14, r26
     6e8:	fb 1e       	adc	r15, r27
		timer_delay_ms(1);                            // Small delay between samples
     6ea:	81 e0       	ldi	r24, 0x01	; 1
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	06 d4       	rcall	.+2060   	; 0xefc <timer_delay_ms>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable adc & set prescaler to 128
}

float ADC_measure(void){
	uint32_t adc_sum = 0;
	for (uint8_t i = 0; i < NUM_SAMPLES; i++) {
     6f0:	cf 5f       	subi	r28, 0xFF	; 255
     6f2:	ca 30       	cpi	r28, 0x0A	; 10
     6f4:	08 f3       	brcs	.-62     	; 0x6b8 <ADC_measure+0x14>
		while (ADCSRA & (1 << ADSC));                 // Wait for conversion
		adc_sum += (ADCL | (ADCH << 8));              // Accumulate result
		timer_delay_ms(1);                            // Small delay between samples
	}

	return adc_sum / NUM_SAMPLES;                     // Average result
     6f6:	c7 01       	movw	r24, r14
     6f8:	b6 01       	movw	r22, r12
     6fa:	2a e0       	ldi	r18, 0x0A	; 10
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e0       	ldi	r20, 0x00	; 0
     700:	50 e0       	ldi	r21, 0x00	; 0
     702:	29 d6       	rcall	.+3154   	; 0x1356 <__udivmodsi4>
     704:	ca 01       	movw	r24, r20
     706:	b9 01       	movw	r22, r18
     708:	0d d5       	rcall	.+2586   	; 0x1124 <__floatunsisf>
     70a:	cf 91       	pop	r28
     70c:	ff 90       	pop	r15
     70e:	ef 90       	pop	r14
     710:	df 90       	pop	r13
     712:	cf 90       	pop	r12
     714:	08 95       	ret

00000716 <start_button_init>:
#include "buttons.h"

volatile bool button_pressed = false;

void start_button_init(void){
	DDRE &= ~(1 << PE4);                     // set button as input
     716:	8d b1       	in	r24, 0x0d	; 13
     718:	8f 7e       	andi	r24, 0xEF	; 239
     71a:	8d b9       	out	0x0d, r24	; 13
	PORTE |= (1 << PE4);                     // pull-up resistor
     71c:	8e b1       	in	r24, 0x0e	; 14
     71e:	80 61       	ori	r24, 0x10	; 16
     720:	8e b9       	out	0x0e, r24	; 14
	EICRB &= ~((1 << ISC41) | (1 << ISC40)); // clear both regs
     722:	ea e6       	ldi	r30, 0x6A	; 106
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	80 81       	ld	r24, Z
     728:	8c 7f       	andi	r24, 0xFC	; 252
     72a:	80 83       	st	Z, r24
	EICRB |= (1 << ISC41);                   // set ISC40 (01)
     72c:	80 81       	ld	r24, Z
     72e:	82 60       	ori	r24, 0x02	; 2
     730:	80 83       	st	Z, r24

	EIMSK |= (1 << INT4);                    // interrupt mask reg
     732:	8d b3       	in	r24, 0x1d	; 29
     734:	80 61       	ori	r24, 0x10	; 16
     736:	8d bb       	out	0x1d, r24	; 29
     738:	08 95       	ret

0000073a <display_send_command>:
void display_write(void) {
	display_write_color(fg_color);
}

void display_write_background(void) {
	display_write_color(bg_color);
     73a:	95 b1       	in	r25, 0x05	; 5
     73c:	9f 7b       	andi	r25, 0xBF	; 191
     73e:	95 b9       	out	0x05, r25	; 5
     740:	95 b1       	in	r25, 0x05	; 5
     742:	9f 7e       	andi	r25, 0xEF	; 239
     744:	95 b9       	out	0x05, r25	; 5
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	b2 d3       	rcall	.+1892   	; 0xeae <SPI_transfer>
     74a:	85 b1       	in	r24, 0x05	; 5
     74c:	80 64       	ori	r24, 0x40	; 64
     74e:	85 b9       	out	0x05, r24	; 5
     750:	08 95       	ret

00000752 <display_data>:
     752:	95 b1       	in	r25, 0x05	; 5
     754:	9f 7b       	andi	r25, 0xBF	; 191
     756:	95 b9       	out	0x05, r25	; 5
     758:	95 b1       	in	r25, 0x05	; 5
     75a:	90 61       	ori	r25, 0x10	; 16
     75c:	95 b9       	out	0x05, r25	; 5
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	a6 d3       	rcall	.+1868   	; 0xeae <SPI_transfer>
     762:	85 b1       	in	r24, 0x05	; 5
     764:	80 64       	ori	r24, 0x40	; 64
     766:	85 b9       	out	0x05, r24	; 5
     768:	08 95       	ret

0000076a <display_command_start>:
     76a:	85 b1       	in	r24, 0x05	; 5
     76c:	8f 7e       	andi	r24, 0xEF	; 239
     76e:	85 b9       	out	0x05, r24	; 5
     770:	85 b1       	in	r24, 0x05	; 5
     772:	8f 7b       	andi	r24, 0xBF	; 191
     774:	85 b9       	out	0x05, r24	; 5
     776:	08 95       	ret

00000778 <display_command_end>:
     778:	85 b1       	in	r24, 0x05	; 5
     77a:	80 64       	ori	r24, 0x40	; 64
     77c:	85 b9       	out	0x05, r24	; 5
     77e:	86 e0       	ldi	r24, 0x06	; 6
     780:	8a 95       	dec	r24
     782:	f1 f7       	brne	.-4      	; 0x780 <display_command_end+0x8>
     784:	00 c0       	rjmp	.+0      	; 0x786 <display_command_end+0xe>
     786:	08 95       	ret

00000788 <display_data_start>:
     788:	85 b1       	in	r24, 0x05	; 5
     78a:	80 61       	ori	r24, 0x10	; 16
     78c:	85 b9       	out	0x05, r24	; 5
     78e:	85 b1       	in	r24, 0x05	; 5
     790:	8f 7b       	andi	r24, 0xBF	; 191
     792:	85 b9       	out	0x05, r24	; 5
     794:	08 95       	ret

00000796 <display_data_end>:
     796:	85 b1       	in	r24, 0x05	; 5
     798:	80 64       	ori	r24, 0x40	; 64
     79a:	85 b9       	out	0x05, r24	; 5
     79c:	86 e0       	ldi	r24, 0x06	; 6
     79e:	8a 95       	dec	r24
     7a0:	f1 f7       	brne	.-4      	; 0x79e <display_data_end+0x8>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <display_data_end+0xe>
     7a4:	08 95       	ret

000007a6 <display_write_byte>:
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	82 c3       	rjmp	.+1796   	; 0xeae <SPI_transfer>
     7aa:	08 95       	ret

000007ac <Display_Init>:
     7ac:	df 92       	push	r13
     7ae:	ef 92       	push	r14
     7b0:	ff 92       	push	r15
     7b2:	0f 93       	push	r16
     7b4:	1f 93       	push	r17
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	84 b1       	in	r24, 0x04	; 4
     7bc:	80 67       	ori	r24, 0x70	; 112
     7be:	84 b9       	out	0x04, r24	; 4
     7c0:	85 b1       	in	r24, 0x05	; 5
     7c2:	80 64       	ori	r24, 0x40	; 64
     7c4:	85 b9       	out	0x05, r24	; 5
     7c6:	85 b1       	in	r24, 0x05	; 5
     7c8:	80 61       	ori	r24, 0x10	; 16
     7ca:	85 b9       	out	0x05, r24	; 5
     7cc:	85 b1       	in	r24, 0x05	; 5
     7ce:	80 62       	ori	r24, 0x20	; 32
     7d0:	85 b9       	out	0x05, r24	; 5
     7d2:	85 b1       	in	r24, 0x05	; 5
     7d4:	8f 7d       	andi	r24, 0xDF	; 223
     7d6:	85 b9       	out	0x05, r24	; 5
     7d8:	87 e8       	ldi	r24, 0x87	; 135
     7da:	93 e1       	ldi	r25, 0x13	; 19
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	f1 f7       	brne	.-4      	; 0x7dc <Display_Init+0x30>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <Display_Init+0x36>
     7e2:	00 00       	nop
     7e4:	85 b1       	in	r24, 0x05	; 5
     7e6:	80 62       	ori	r24, 0x20	; 32
     7e8:	85 b9       	out	0x05, r24	; 5
     7ea:	eb e7       	ldi	r30, 0x7B	; 123
     7ec:	f2 e9       	ldi	r31, 0x92	; 146
     7ee:	31 97       	sbiw	r30, 0x01	; 1
     7f0:	f1 f7       	brne	.-4      	; 0x7ee <Display_Init+0x42>
     7f2:	00 c0       	rjmp	.+0      	; 0x7f4 <Display_Init+0x48>
     7f4:	00 00       	nop
     7f6:	c4 ee       	ldi	r28, 0xE4	; 228
     7f8:	d0 e0       	ldi	r29, 0x00	; 0
     7fa:	22 c0       	rjmp	.+68     	; 0x840 <Display_Init+0x94>
     7fc:	22 96       	adiw	r28, 0x02	; 2
     7fe:	fc 01       	movw	r30, r24
     800:	d4 90       	lpm	r13, Z
     802:	0d 2d       	mov	r16, r13
     804:	0f 77       	andi	r16, 0x7F	; 127
     806:	b1 df       	rcall	.-158    	; 0x76a <display_command_start>
     808:	81 2f       	mov	r24, r17
     80a:	cd df       	rcall	.-102    	; 0x7a6 <display_write_byte>
     80c:	b5 df       	rcall	.-150    	; 0x778 <display_command_end>
     80e:	00 23       	and	r16, r16
     810:	79 f0       	breq	.+30     	; 0x830 <Display_Init+0x84>
     812:	ba df       	rcall	.-140    	; 0x788 <display_data_start>
     814:	10 e0       	ldi	r17, 0x00	; 0
     816:	09 c0       	rjmp	.+18     	; 0x82a <Display_Init+0x7e>
     818:	7e 01       	movw	r14, r28
     81a:	ff ef       	ldi	r31, 0xFF	; 255
     81c:	ef 1a       	sub	r14, r31
     81e:	ff 0a       	sbc	r15, r31
     820:	fe 01       	movw	r30, r28
     822:	84 91       	lpm	r24, Z
     824:	c0 df       	rcall	.-128    	; 0x7a6 <display_write_byte>
     826:	1f 5f       	subi	r17, 0xFF	; 255
     828:	e7 01       	movw	r28, r14
     82a:	10 17       	cp	r17, r16
     82c:	a8 f3       	brcs	.-22     	; 0x818 <Display_Init+0x6c>
     82e:	b3 df       	rcall	.-154    	; 0x796 <display_data_end>
     830:	dd 20       	and	r13, r13
     832:	34 f4       	brge	.+12     	; 0x840 <Display_Init+0x94>
     834:	8b e7       	ldi	r24, 0x7B	; 123
     836:	92 e9       	ldi	r25, 0x92	; 146
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	f1 f7       	brne	.-4      	; 0x838 <Display_Init+0x8c>
     83c:	00 c0       	rjmp	.+0      	; 0x83e <Display_Init+0x92>
     83e:	00 00       	nop
     840:	ce 01       	movw	r24, r28
     842:	01 96       	adiw	r24, 0x01	; 1
     844:	fe 01       	movw	r30, r28
     846:	14 91       	lpm	r17, Z
     848:	11 11       	cpse	r17, r1
     84a:	d8 cf       	rjmp	.-80     	; 0x7fc <Display_Init+0x50>
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	1f 91       	pop	r17
     852:	0f 91       	pop	r16
     854:	ff 90       	pop	r15
     856:	ef 90       	pop	r14
     858:	df 90       	pop	r13
     85a:	08 95       	ret

0000085c <display_set_rotation>:
     85c:	cf 93       	push	r28
     85e:	83 70       	andi	r24, 0x03	; 3
     860:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <display_rotation>
     864:	81 30       	cpi	r24, 0x01	; 1
     866:	a1 f0       	breq	.+40     	; 0x890 <display_set_rotation+0x34>
     868:	28 f0       	brcs	.+10     	; 0x874 <display_set_rotation+0x18>
     86a:	82 30       	cpi	r24, 0x02	; 2
     86c:	f9 f0       	breq	.+62     	; 0x8ac <display_set_rotation+0x50>
     86e:	83 30       	cpi	r24, 0x03	; 3
     870:	59 f1       	breq	.+86     	; 0x8c8 <display_set_rotation+0x6c>
     872:	38 c0       	rjmp	.+112    	; 0x8e4 <display_set_rotation+0x88>
     874:	80 ef       	ldi	r24, 0xF0	; 240
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <display_width+0x1>
     87c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <display_width>
     880:	80 e4       	ldi	r24, 0x40	; 64
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <display_height+0x1>
     888:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <display_height>
     88c:	c8 e4       	ldi	r28, 0x48	; 72
     88e:	2b c0       	rjmp	.+86     	; 0x8e6 <display_set_rotation+0x8a>
     890:	80 e4       	ldi	r24, 0x40	; 64
     892:	91 e0       	ldi	r25, 0x01	; 1
     894:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <display_width+0x1>
     898:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <display_width>
     89c:	80 ef       	ldi	r24, 0xF0	; 240
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <display_height+0x1>
     8a4:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <display_height>
     8a8:	c8 e2       	ldi	r28, 0x28	; 40
     8aa:	1d c0       	rjmp	.+58     	; 0x8e6 <display_set_rotation+0x8a>
     8ac:	80 ef       	ldi	r24, 0xF0	; 240
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <display_width+0x1>
     8b4:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <display_width>
     8b8:	80 e4       	ldi	r24, 0x40	; 64
     8ba:	91 e0       	ldi	r25, 0x01	; 1
     8bc:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <display_height+0x1>
     8c0:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <display_height>
     8c4:	c8 e8       	ldi	r28, 0x88	; 136
     8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <display_set_rotation+0x8a>
     8c8:	80 e4       	ldi	r24, 0x40	; 64
     8ca:	91 e0       	ldi	r25, 0x01	; 1
     8cc:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <display_width+0x1>
     8d0:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <display_width>
     8d4:	80 ef       	ldi	r24, 0xF0	; 240
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <display_height+0x1>
     8dc:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <display_height>
     8e0:	c8 ee       	ldi	r28, 0xE8	; 232
     8e2:	01 c0       	rjmp	.+2      	; 0x8e6 <display_set_rotation+0x8a>
     8e4:	c0 e0       	ldi	r28, 0x00	; 0
     8e6:	86 e3       	ldi	r24, 0x36	; 54
     8e8:	28 df       	rcall	.-432    	; 0x73a <display_send_command>
     8ea:	8c 2f       	mov	r24, r28
     8ec:	32 df       	rcall	.-412    	; 0x752 <display_data>
     8ee:	cf 91       	pop	r28
     8f0:	08 95       	ret

000008f2 <display_set_window>:
     8f2:	cf 92       	push	r12
     8f4:	df 92       	push	r13
     8f6:	ef 92       	push	r14
     8f8:	ff 92       	push	r15
     8fa:	0f 93       	push	r16
     8fc:	1f 93       	push	r17
     8fe:	cf 93       	push	r28
     900:	df 93       	push	r29
     902:	6c 01       	movw	r12, r24
     904:	7b 01       	movw	r14, r22
     906:	48 0f       	add	r20, r24
     908:	59 1f       	adc	r21, r25
     90a:	8a 01       	movw	r16, r20
     90c:	01 50       	subi	r16, 0x01	; 1
     90e:	11 09       	sbc	r17, r1
     910:	eb 01       	movw	r28, r22
     912:	c2 0f       	add	r28, r18
     914:	d3 1f       	adc	r29, r19
     916:	21 97       	sbiw	r28, 0x01	; 1
     918:	8a e2       	ldi	r24, 0x2A	; 42
     91a:	0f df       	rcall	.-482    	; 0x73a <display_send_command>
     91c:	8d 2d       	mov	r24, r13
     91e:	19 df       	rcall	.-462    	; 0x752 <display_data>
     920:	8c 2d       	mov	r24, r12
     922:	17 df       	rcall	.-466    	; 0x752 <display_data>
     924:	81 2f       	mov	r24, r17
     926:	15 df       	rcall	.-470    	; 0x752 <display_data>
     928:	80 2f       	mov	r24, r16
     92a:	13 df       	rcall	.-474    	; 0x752 <display_data>
     92c:	8b e2       	ldi	r24, 0x2B	; 43
     92e:	05 df       	rcall	.-502    	; 0x73a <display_send_command>
     930:	8f 2d       	mov	r24, r15
     932:	0f df       	rcall	.-482    	; 0x752 <display_data>
     934:	8e 2d       	mov	r24, r14
     936:	0d df       	rcall	.-486    	; 0x752 <display_data>
     938:	8d 2f       	mov	r24, r29
     93a:	0b df       	rcall	.-490    	; 0x752 <display_data>
     93c:	8c 2f       	mov	r24, r28
     93e:	09 df       	rcall	.-494    	; 0x752 <display_data>
     940:	8c e2       	ldi	r24, 0x2C	; 44
     942:	fb de       	rcall	.-522    	; 0x73a <display_send_command>
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	0f 91       	pop	r16
     94c:	ff 90       	pop	r15
     94e:	ef 90       	pop	r14
     950:	df 90       	pop	r13
     952:	cf 90       	pop	r12
     954:	08 95       	ret

00000956 <set_text_size>:
     956:	81 11       	cpse	r24, r1
     958:	01 c0       	rjmp	.+2      	; 0x95c <set_text_size+0x6>
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     960:	08 95       	ret

00000962 <display_fill_rect>:
}

void display_fill_rect(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color) {
     962:	8f 92       	push	r8
     964:	9f 92       	push	r9
     966:	af 92       	push	r10
     968:	bf 92       	push	r11
     96a:	cf 92       	push	r12
     96c:	df 92       	push	r13
     96e:	ef 92       	push	r14
     970:	ff 92       	push	r15
     972:	0f 93       	push	r16
     974:	1f 93       	push	r17
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	ea 01       	movw	r28, r20
     97c:	59 01       	movw	r10, r18
	uint8_t hi = color >> 8;
     97e:	81 2e       	mov	r8, r17
     980:	91 2c       	mov	r9, r1
	uint8_t lo = color & 0xFF;

	display_set_window(x, y, w, h);
     982:	b7 df       	rcall	.-146    	; 0x8f2 <display_set_window>
	display_send_command(ILI9341_RAMWR);
     984:	8c e2       	ldi	r24, 0x2C	; 44
	display_data_start();
     986:	d9 de       	rcall	.-590    	; 0x73a <display_send_command>
     988:	ff de       	rcall	.-514    	; 0x788 <display_data_start>

	for (uint32_t i = 0; i < (uint32_t)w * h; i++) {
     98a:	c1 2c       	mov	r12, r1
     98c:	d1 2c       	mov	r13, r1
     98e:	76 01       	movw	r14, r12
		SPI_transfer(hi);
     990:	0b c0       	rjmp	.+22     	; 0x9a8 <display_fill_rect+0x46>
     992:	88 2d       	mov	r24, r8
     994:	99 2d       	mov	r25, r9
		SPI_transfer(lo);
     996:	8b d2       	rcall	.+1302   	; 0xeae <SPI_transfer>
     998:	c8 01       	movw	r24, r16
     99a:	99 27       	eor	r25, r25
     99c:	88 d2       	rcall	.+1296   	; 0xeae <SPI_transfer>

	display_set_window(x, y, w, h);
	display_send_command(ILI9341_RAMWR);
	display_data_start();

	for (uint32_t i = 0; i < (uint32_t)w * h; i++) {
     99e:	8f ef       	ldi	r24, 0xFF	; 255
     9a0:	c8 1a       	sub	r12, r24
     9a2:	d8 0a       	sbc	r13, r24
     9a4:	e8 0a       	sbc	r14, r24
     9a6:	f8 0a       	sbc	r15, r24
     9a8:	9e 01       	movw	r18, r28
     9aa:	d5 01       	movw	r26, r10
     9ac:	f6 d4       	rcall	.+2540   	; 0x139a <__umulhisi3>
     9ae:	c6 16       	cp	r12, r22
     9b0:	d7 06       	cpc	r13, r23
     9b2:	e8 06       	cpc	r14, r24
     9b4:	f9 06       	cpc	r15, r25
		SPI_transfer(hi);
		SPI_transfer(lo);
	}

	display_data_end();
     9b6:	68 f3       	brcs	.-38     	; 0x992 <display_fill_rect+0x30>
     9b8:	ee de       	rcall	.-548    	; 0x796 <display_data_end>
}
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	1f 91       	pop	r17
     9c0:	0f 91       	pop	r16
     9c2:	ff 90       	pop	r15
     9c4:	ef 90       	pop	r14
     9c6:	df 90       	pop	r13
     9c8:	cf 90       	pop	r12
     9ca:	bf 90       	pop	r11
     9cc:	af 90       	pop	r10
     9ce:	9f 90       	pop	r9
     9d0:	8f 90       	pop	r8
     9d2:	08 95       	ret

000009d4 <display_draw_char>:


void display_draw_char(char c, uint16_t x, uint16_t y) {
     9d4:	8f 92       	push	r8
     9d6:	9f 92       	push	r9
     9d8:	af 92       	push	r10
     9da:	bf 92       	push	r11
     9dc:	cf 92       	push	r12
     9de:	df 92       	push	r13
     9e0:	ef 92       	push	r14
     9e2:	ff 92       	push	r15
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
	if (c < 32 || c > 127) return;
     9ec:	90 ee       	ldi	r25, 0xE0	; 224
     9ee:	98 0f       	add	r25, r24
     9f0:	90 36       	cpi	r25, 0x60	; 96
     9f2:	08 f0       	brcs	.+2      	; 0x9f6 <display_draw_char+0x22>
     9f4:	64 c0       	rjmp	.+200    	; 0xabe <display_draw_char+0xea>
     9f6:	5a 01       	movw	r10, r20
     9f8:	6b 01       	movw	r12, r22
     9fa:	88 2e       	mov	r8, r24
     9fc:	91 2c       	mov	r9, r1
     9fe:	42 c0       	rjmp	.+132    	; 0xa84 <display_draw_char+0xb0>

	for (uint8_t col = 0; col < 5; col++) {
		uint8_t line = pgm_read_byte(&font[c * 5 + col]);
     a00:	88 2d       	mov	r24, r8
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	fc 01       	movw	r30, r24
     a06:	ee 0f       	add	r30, r30
     a08:	ff 1f       	adc	r31, r31
     a0a:	ee 0f       	add	r30, r30
     a0c:	ff 1f       	adc	r31, r31
     a0e:	e8 0f       	add	r30, r24
     a10:	f9 1f       	adc	r31, r25
     a12:	e9 2c       	mov	r14, r9
     a14:	f1 2c       	mov	r15, r1
     a16:	ee 0d       	add	r30, r14
     a18:	ff 1d       	adc	r31, r15
     a1a:	ed 5a       	subi	r30, 0xAD	; 173
     a1c:	fe 4f       	sbci	r31, 0xFE	; 254
     a1e:	d4 91       	lpm	r29, Z
		for (uint8_t row = 0; row < 8; row++) {
     a20:	c0 e0       	ldi	r28, 0x00	; 0
     a22:	2d c0       	rjmp	.+90     	; 0xa7e <display_draw_char+0xaa>
			uint16_t px = (line & (1 << row)) ? fg_color : bg_color;
     a24:	2c 2f       	mov	r18, r28
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	8d 2f       	mov	r24, r29
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	0c 2e       	mov	r0, r28
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <display_draw_char+0x60>
     a30:	95 95       	asr	r25
     a32:	87 95       	ror	r24
     a34:	0a 94       	dec	r0
     a36:	e2 f7       	brpl	.-8      	; 0xa30 <display_draw_char+0x5c>
     a38:	80 ff       	sbrs	r24, 0
     a3a:	05 c0       	rjmp	.+10     	; 0xa46 <display_draw_char+0x72>
     a3c:	00 91 01 02 	lds	r16, 0x0201	; 0x800201 <fg_color>
     a40:	10 91 02 02 	lds	r17, 0x0202	; 0x800202 <fg_color+0x1>
     a44:	04 c0       	rjmp	.+8      	; 0xa4e <display_draw_char+0x7a>
     a46:	00 91 26 02 	lds	r16, 0x0226	; 0x800226 <bg_color>
     a4a:	10 91 27 02 	lds	r17, 0x0227	; 0x800227 <bg_color+0x1>
			display_fill_rect(x + col * text_size, y + row * text_size, text_size, text_size, px);
     a4e:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     a52:	50 e0       	ldi	r21, 0x00	; 0
     a54:	24 9f       	mul	r18, r20
     a56:	b0 01       	movw	r22, r0
     a58:	25 9f       	mul	r18, r21
     a5a:	70 0d       	add	r23, r0
     a5c:	34 9f       	mul	r19, r20
     a5e:	70 0d       	add	r23, r0
     a60:	11 24       	eor	r1, r1
     a62:	e4 9e       	mul	r14, r20
     a64:	c0 01       	movw	r24, r0
     a66:	e5 9e       	mul	r14, r21
     a68:	90 0d       	add	r25, r0
     a6a:	f4 9e       	mul	r15, r20
     a6c:	90 0d       	add	r25, r0
     a6e:	11 24       	eor	r1, r1
     a70:	6a 0d       	add	r22, r10
     a72:	7b 1d       	adc	r23, r11
     a74:	9a 01       	movw	r18, r20
     a76:	8c 0d       	add	r24, r12
     a78:	9d 1d       	adc	r25, r13
     a7a:	73 df       	rcall	.-282    	; 0x962 <display_fill_rect>
void display_draw_char(char c, uint16_t x, uint16_t y) {
	if (c < 32 || c > 127) return;

	for (uint8_t col = 0; col < 5; col++) {
		uint8_t line = pgm_read_byte(&font[c * 5 + col]);
		for (uint8_t row = 0; row < 8; row++) {
     a7c:	cf 5f       	subi	r28, 0xFF	; 255
     a7e:	c8 30       	cpi	r28, 0x08	; 8
     a80:	88 f2       	brcs	.-94     	; 0xa24 <display_draw_char+0x50>


void display_draw_char(char c, uint16_t x, uint16_t y) {
	if (c < 32 || c > 127) return;

	for (uint8_t col = 0; col < 5; col++) {
     a82:	93 94       	inc	r9
     a84:	84 e0       	ldi	r24, 0x04	; 4
     a86:	89 15       	cp	r24, r9
     a88:	08 f0       	brcs	.+2      	; 0xa8c <display_draw_char+0xb8>
     a8a:	ba cf       	rjmp	.-140    	; 0xa00 <display_draw_char+0x2c>
			display_fill_rect(x + col * text_size, y + row * text_size, text_size, text_size, px);
		}
	}

	// Add spacing
	display_fill_rect(x + 5 * text_size, y, text_size, 8 * text_size, bg_color);
     a8c:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     a90:	50 e0       	ldi	r21, 0x00	; 0
     a92:	9a 01       	movw	r18, r20
     a94:	22 0f       	add	r18, r18
     a96:	33 1f       	adc	r19, r19
     a98:	22 0f       	add	r18, r18
     a9a:	33 1f       	adc	r19, r19
     a9c:	22 0f       	add	r18, r18
     a9e:	33 1f       	adc	r19, r19
     aa0:	ca 01       	movw	r24, r20
     aa2:	88 0f       	add	r24, r24
     aa4:	99 1f       	adc	r25, r25
     aa6:	88 0f       	add	r24, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	84 0f       	add	r24, r20
     aac:	95 1f       	adc	r25, r21
     aae:	00 91 26 02 	lds	r16, 0x0226	; 0x800226 <bg_color>
     ab2:	10 91 27 02 	lds	r17, 0x0227	; 0x800227 <bg_color+0x1>
     ab6:	b5 01       	movw	r22, r10
     ab8:	8c 0d       	add	r24, r12
     aba:	9d 1d       	adc	r25, r13
     abc:	52 df       	rcall	.-348    	; 0x962 <display_fill_rect>

}
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	1f 91       	pop	r17
     ac4:	0f 91       	pop	r16
     ac6:	ff 90       	pop	r15
     ac8:	ef 90       	pop	r14
     aca:	df 90       	pop	r13
     acc:	cf 90       	pop	r12
     ace:	bf 90       	pop	r11
     ad0:	af 90       	pop	r10
     ad2:	9f 90       	pop	r9
     ad4:	8f 90       	pop	r8
     ad6:	08 95       	ret

00000ad8 <display_print>:

void display_print(const char* str, uint16_t x, uint16_t y) {
     ad8:	ef 92       	push	r14
     ada:	ff 92       	push	r15
     adc:	0f 93       	push	r16
     ade:	1f 93       	push	r17
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	7c 01       	movw	r14, r24
     ae6:	eb 01       	movw	r28, r22
     ae8:	8a 01       	movw	r16, r20
	while (*str) {
     aea:	12 c0       	rjmp	.+36     	; 0xb10 <display_print+0x38>
		display_draw_char(*str++, x, y);
     aec:	9f ef       	ldi	r25, 0xFF	; 255
     aee:	e9 1a       	sub	r14, r25
     af0:	f9 0a       	sbc	r15, r25
     af2:	a8 01       	movw	r20, r16
     af4:	be 01       	movw	r22, r28
     af6:	6e df       	rcall	.-292    	; 0x9d4 <display_draw_char>
		x += 6 * text_size;
     af8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	9c 01       	movw	r18, r24
     b00:	22 0f       	add	r18, r18
     b02:	33 1f       	adc	r19, r19
     b04:	82 0f       	add	r24, r18
     b06:	93 1f       	adc	r25, r19
     b08:	88 0f       	add	r24, r24
     b0a:	99 1f       	adc	r25, r25
     b0c:	c8 0f       	add	r28, r24
     b0e:	d9 1f       	adc	r29, r25
	display_fill_rect(x + 5 * text_size, y, text_size, 8 * text_size, bg_color);

}

void display_print(const char* str, uint16_t x, uint16_t y) {
	while (*str) {
     b10:	f7 01       	movw	r30, r14
     b12:	80 81       	ld	r24, Z
     b14:	81 11       	cpse	r24, r1
     b16:	ea cf       	rjmp	.-44     	; 0xaec <display_print+0x14>
		display_draw_char(*str++, x, y);
		x += 6 * text_size;
	}
}
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	0f 91       	pop	r16
     b20:	ff 90       	pop	r15
     b22:	ef 90       	pop	r14
     b24:	08 95       	ret

00000b26 <display_fill_color>:

void display_fill_color(uint16_t color) {
     b26:	cf 92       	push	r12
     b28:	df 92       	push	r13
     b2a:	ef 92       	push	r14
     b2c:	ff 92       	push	r15
     b2e:	0f 93       	push	r16
     b30:	1f 93       	push	r17
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	ec 01       	movw	r28, r24
	uint8_t hi = color >> 8;
     b38:	0d 2f       	mov	r16, r29
     b3a:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t lo = color & 0xFF;

	display_set_window(0, 0, display_width, display_height);
     b3c:	20 91 03 02 	lds	r18, 0x0203	; 0x800203 <display_height>
     b40:	30 91 04 02 	lds	r19, 0x0204	; 0x800204 <display_height+0x1>
     b44:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <display_width>
     b48:	50 91 06 02 	lds	r21, 0x0206	; 0x800206 <display_width+0x1>
     b4c:	60 e0       	ldi	r22, 0x00	; 0
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	ce de       	rcall	.-612    	; 0x8f2 <display_set_window>
	display_send_command(ILI9341_RAMWR);
     b56:	8c e2       	ldi	r24, 0x2C	; 44
	display_data_start();
     b58:	f0 dd       	rcall	.-1056   	; 0x73a <display_send_command>
     b5a:	16 de       	rcall	.-980    	; 0x788 <display_data_start>

	for (uint32_t i = 0; i < (uint32_t)display_width * display_height; i++) {
     b5c:	c1 2c       	mov	r12, r1
     b5e:	d1 2c       	mov	r13, r1
     b60:	76 01       	movw	r14, r12
		SPI_transfer(hi);
     b62:	0b c0       	rjmp	.+22     	; 0xb7a <display_fill_color+0x54>
     b64:	80 2f       	mov	r24, r16
     b66:	91 2f       	mov	r25, r17
		SPI_transfer(lo);
     b68:	a2 d1       	rcall	.+836    	; 0xeae <SPI_transfer>
     b6a:	ce 01       	movw	r24, r28
     b6c:	99 27       	eor	r25, r25
     b6e:	9f d1       	rcall	.+830    	; 0xeae <SPI_transfer>

	display_set_window(0, 0, display_width, display_height);
	display_send_command(ILI9341_RAMWR);
	display_data_start();

	for (uint32_t i = 0; i < (uint32_t)display_width * display_height; i++) {
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	c8 1a       	sub	r12, r24
     b74:	d8 0a       	sbc	r13, r24
     b76:	e8 0a       	sbc	r14, r24
     b78:	f8 0a       	sbc	r15, r24
     b7a:	20 91 05 02 	lds	r18, 0x0205	; 0x800205 <display_width>
     b7e:	30 91 06 02 	lds	r19, 0x0206	; 0x800206 <display_width+0x1>
     b82:	a0 91 03 02 	lds	r26, 0x0203	; 0x800203 <display_height>
     b86:	b0 91 04 02 	lds	r27, 0x0204	; 0x800204 <display_height+0x1>
     b8a:	07 d4       	rcall	.+2062   	; 0x139a <__umulhisi3>
     b8c:	c6 16       	cp	r12, r22
     b8e:	d7 06       	cpc	r13, r23
     b90:	e8 06       	cpc	r14, r24
     b92:	f9 06       	cpc	r15, r25
		SPI_transfer(hi);
		SPI_transfer(lo);
	}

	display_data_end();
     b94:	38 f3       	brcs	.-50     	; 0xb64 <display_fill_color+0x3e>
     b96:	ff dd       	rcall	.-1026   	; 0x796 <display_data_end>
}
     b98:	df 91       	pop	r29
     b9a:	cf 91       	pop	r28
     b9c:	1f 91       	pop	r17
     b9e:	0f 91       	pop	r16
     ba0:	ff 90       	pop	r15
     ba2:	ef 90       	pop	r14
     ba4:	df 90       	pop	r13
     ba6:	cf 90       	pop	r12
     ba8:	08 95       	ret

00000baa <__vector_23>:

bool is_green_led_on = false;
bool is_orange_led_on = false;
bool is_red_led_on = false;

ISR(TIMER0_OVF_vect){
     baa:	1f 92       	push	r1
     bac:	0f 92       	push	r0
     bae:	0f b6       	in	r0, 0x3f	; 63
     bb0:	0f 92       	push	r0
     bb2:	11 24       	eor	r1, r1
     bb4:	8f 93       	push	r24
     bb6:	9f 93       	push	r25
     bb8:	af 93       	push	r26
     bba:	bf 93       	push	r27
	TCNT0 = 6;           // reload for next 1 ms
     bbc:	86 e0       	ldi	r24, 0x06	; 6
     bbe:	86 bd       	out	0x26, r24	; 38
	millis_counter++;    // increment ms counter
     bc0:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <millis_counter>
     bc4:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <millis_counter+0x1>
     bc8:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <millis_counter+0x2>
     bcc:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <millis_counter+0x3>
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	a1 1d       	adc	r26, r1
     bd4:	b1 1d       	adc	r27, r1
     bd6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <millis_counter>
     bda:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <millis_counter+0x1>
     bde:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <millis_counter+0x2>
     be2:	b0 93 33 02 	sts	0x0233, r27	; 0x800233 <millis_counter+0x3>
}
     be6:	bf 91       	pop	r27
     be8:	af 91       	pop	r26
     bea:	9f 91       	pop	r25
     bec:	8f 91       	pop	r24
     bee:	0f 90       	pop	r0
     bf0:	0f be       	out	0x3f, r0	; 63
     bf2:	0f 90       	pop	r0
     bf4:	1f 90       	pop	r1
     bf6:	18 95       	reti

00000bf8 <__vector_5>:

ISR(INT4_vect) {
     bf8:	1f 92       	push	r1
     bfa:	0f 92       	push	r0
     bfc:	0f b6       	in	r0, 0x3f	; 63
     bfe:	0f 92       	push	r0
     c00:	11 24       	eor	r1, r1
     c02:	8f 93       	push	r24
	button_pressed = true;
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end>
}
     c0a:	8f 91       	pop	r24
     c0c:	0f 90       	pop	r0
     c0e:	0f be       	out	0x3f, r0	; 63
     c10:	0f 90       	pop	r0
     c12:	1f 90       	pop	r1
     c14:	18 95       	reti

00000c16 <main>:

int main(void){
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	cd b7       	in	r28, 0x3d	; 61
     c1c:	de b7       	in	r29, 0x3e	; 62
     c1e:	2a 97       	sbiw	r28, 0x0a	; 10
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	f8 94       	cli
     c24:	de bf       	out	0x3e, r29	; 62
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	cd bf       	out	0x3d, r28	; 61
	sei();
     c2a:	78 94       	sei
	Timer0_Init();
     c2c:	46 d1       	rcall	.+652    	; 0xeba <Timer0_Init>
	Timer1_Init();
     c2e:	54 d1       	rcall	.+680    	; 0xed8 <Timer1_Init>
	start_button_init();
     c30:	72 dd       	rcall	.-1308   	; 0x716 <start_button_init>
	ADC_Init();
     c32:	31 dd       	rcall	.-1438   	; 0x696 <ADC_Init>
	SPI_init();
     c34:	2d d1       	rcall	.+602    	; 0xe90 <SPI_init>
     c36:	ba dd       	rcall	.-1164   	; 0x7ac <Display_Init>
	Display_Init();
     c38:	83 e0       	ldi	r24, 0x03	; 3
	
	display_set_rotation(3);             // Landscape
     c3a:	10 de       	rcall	.-992    	; 0x85c <display_set_rotation>
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	90 e0       	ldi	r25, 0x00	; 0
	display_fill_color(COLOR_BLACK);     // Black
     c40:	72 df       	rcall	.-284    	; 0xb26 <display_fill_color>
     c42:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end>
     c46:	88 23       	and	r24, r24
	
	uint16_t adc_value;
	float voltage_value;
	while (1){
		if (button_pressed && (millis_counter - last_button_time > 300)) {                      // 1s debounce
     c48:	69 f1       	breq	.+90     	; 0xca4 <main+0x8e>
     c4a:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <millis_counter>
     c4e:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <millis_counter+0x1>
     c52:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <millis_counter+0x2>
     c56:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <millis_counter+0x3>
     c5a:	40 91 2b 02 	lds	r20, 0x022B	; 0x80022b <last_button_time>
     c5e:	50 91 2c 02 	lds	r21, 0x022C	; 0x80022c <last_button_time+0x1>
     c62:	60 91 2d 02 	lds	r22, 0x022D	; 0x80022d <last_button_time+0x2>
     c66:	70 91 2e 02 	lds	r23, 0x022E	; 0x80022e <last_button_time+0x3>
     c6a:	8c 01       	movw	r16, r24
     c6c:	9d 01       	movw	r18, r26
     c6e:	04 1b       	sub	r16, r20
     c70:	15 0b       	sbc	r17, r21
     c72:	26 0b       	sbc	r18, r22
     c74:	37 0b       	sbc	r19, r23
     c76:	b9 01       	movw	r22, r18
     c78:	a8 01       	movw	r20, r16
     c7a:	4d 32       	cpi	r20, 0x2D	; 45
     c7c:	51 40       	sbci	r21, 0x01	; 1
     c7e:	61 05       	cpc	r22, r1
     c80:	71 05       	cpc	r23, r1
     c82:	80 f0       	brcs	.+32     	; 0xca4 <main+0x8e>
     c84:	30 91 2f 02 	lds	r19, 0x022F	; 0x80022f <is_adc_on>
     c88:	21 e0       	ldi	r18, 0x01	; 1
			is_adc_on = !is_adc_on;
     c8a:	23 27       	eor	r18, r19
     c8c:	20 93 2f 02 	sts	0x022F, r18	; 0x80022f <is_adc_on>
     c90:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <last_button_time>
     c94:	90 93 2c 02 	sts	0x022C, r25	; 0x80022c <last_button_time+0x1>
			last_button_time = millis_counter;
     c98:	a0 93 2d 02 	sts	0x022D, r26	; 0x80022d <last_button_time+0x2>
     c9c:	b0 93 2e 02 	sts	0x022E, r27	; 0x80022e <last_button_time+0x3>
     ca0:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end>
     ca4:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <is_adc_on>
			button_pressed = false;
     ca8:	88 23       	and	r24, r24
		}

		if(is_adc_on){
     caa:	09 f4       	brne	.+2      	; 0xcae <main+0x98>
     cac:	da c0       	rjmp	.+436    	; 0xe62 <main+0x24c>
     cae:	11 e0       	ldi	r17, 0x01	; 1
			is_green_led_on = true;
     cb0:	10 93 2a 02 	sts	0x022A, r17	; 0x80022a <is_green_led_on>
     cb4:	f7 dc       	rcall	.-1554   	; 0x6a4 <ADC_measure>
			adc_value = ADC_measure();
     cb6:	0a d2       	rcall	.+1044   	; 0x10cc <__fixunssfsi>
     cb8:	4b 01       	movw	r8, r22
     cba:	b0 90 2a 02 	lds	r11, 0x022A	; 0x80022a <is_green_led_on>
     cbe:	20 91 29 02 	lds	r18, 0x0229	; 0x800229 <is_orange_led_on>
			float calibrated_max_volts = 0;
			if(is_green_led_on & !is_orange_led_on & !is_red_led_on)
     cc2:	32 2f       	mov	r19, r18
     cc4:	31 27       	eor	r19, r17
     cc6:	b3 22       	and	r11, r19
     cc8:	a0 90 28 02 	lds	r10, 0x0228	; 0x800228 <is_red_led_on>
     ccc:	1a 25       	eor	r17, r10
     cce:	ab 14       	cp	r10, r11
     cd0:	40 f0       	brcs	.+16     	; 0xce2 <main+0xcc>
     cd2:	a2 16       	cp	r10, r18
     cd4:	88 f0       	brcs	.+34     	; 0xcf8 <main+0xe2>
     cd6:	a1 10       	cpse	r10, r1
				calibrated_max_volts = MAX_VOLTS + 0.037;
			else if(is_orange_led_on & !is_red_led_on)
     cd8:	1a c0       	rjmp	.+52     	; 0xd0e <main+0xf8>
     cda:	c1 2c       	mov	r12, r1
				calibrated_max_volts = MAX_VOLTS + 0.029;
			else if(is_red_led_on)
     cdc:	d1 2c       	mov	r13, r1
     cde:	76 01       	movw	r14, r12
		}

		if(is_adc_on){
			is_green_led_on = true;
			adc_value = ADC_measure();
			float calibrated_max_volts = 0;
     ce0:	20 c0       	rjmp	.+64     	; 0xd22 <main+0x10c>
     ce2:	0f 2e       	mov	r0, r31
     ce4:	fb e1       	ldi	r31, 0x1B	; 27
     ce6:	cf 2e       	mov	r12, r31
			if(is_green_led_on & !is_orange_led_on & !is_red_led_on)
				calibrated_max_volts = MAX_VOLTS + 0.037;
     ce8:	ff e2       	ldi	r31, 0x2F	; 47
     cea:	df 2e       	mov	r13, r31
     cec:	f1 ea       	ldi	r31, 0xA1	; 161
     cee:	ef 2e       	mov	r14, r31
     cf0:	f0 e4       	ldi	r31, 0x40	; 64
     cf2:	ff 2e       	mov	r15, r31
     cf4:	f0 2d       	mov	r31, r0
     cf6:	15 c0       	rjmp	.+42     	; 0xd22 <main+0x10c>
     cf8:	0f 2e       	mov	r0, r31
     cfa:	f1 e9       	ldi	r31, 0x91	; 145
     cfc:	cf 2e       	mov	r12, r31
			else if(is_orange_led_on & !is_red_led_on)
				calibrated_max_volts = MAX_VOLTS + 0.029;
     cfe:	fd ee       	ldi	r31, 0xED	; 237
     d00:	df 2e       	mov	r13, r31
     d02:	f0 ea       	ldi	r31, 0xA0	; 160
     d04:	ef 2e       	mov	r14, r31
     d06:	f0 e4       	ldi	r31, 0x40	; 64
     d08:	ff 2e       	mov	r15, r31
     d0a:	f0 2d       	mov	r31, r0
     d0c:	0a c0       	rjmp	.+20     	; 0xd22 <main+0x10c>
     d0e:	0f 2e       	mov	r0, r31
     d10:	f4 e4       	ldi	r31, 0x44	; 68
     d12:	cf 2e       	mov	r12, r31
			else if(is_red_led_on)
				calibrated_max_volts = MAX_VOLTS + 0.017;
     d14:	fb e8       	ldi	r31, 0x8B	; 139
     d16:	df 2e       	mov	r13, r31
     d18:	f0 ea       	ldi	r31, 0xA0	; 160
     d1a:	ef 2e       	mov	r14, r31
     d1c:	f0 e4       	ldi	r31, 0x40	; 64
     d1e:	ff 2e       	mov	r15, r31
     d20:	f0 2d       	mov	r31, r0
     d22:	80 e0       	ldi	r24, 0x00	; 0
			
			voltage_value = ((float)(adc_value) * calibrated_max_volts) / ADC_MAX_VALUE;                // convert value
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	fe d1       	rcall	.+1020   	; 0x1124 <__floatunsisf>
     d28:	9b 01       	movw	r18, r22
     d2a:	ac 01       	movw	r20, r24
     d2c:	c7 01       	movw	r24, r14
     d2e:	b6 01       	movw	r22, r12
     d30:	af d2       	rcall	.+1374   	; 0x1290 <__mulsf3>
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	30 ec       	ldi	r19, 0xC0	; 192
     d36:	4f e7       	ldi	r20, 0x7F	; 127
     d38:	54 e4       	ldi	r21, 0x44	; 68
     d3a:	60 d1       	rcall	.+704    	; 0xffc <__divsf3>
     d3c:	6b 01       	movw	r12, r22
     d3e:	7c 01       	movw	r14, r24
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	89 28       	or	r8, r9
     d44:	09 f4       	brne	.+2      	; 0xd48 <main+0x132>
			if(is_green_led_on & !is_orange_led_on & !is_red_led_on & (adc_value > 0))
     d46:	80 e0       	ldi	r24, 0x00	; 0
     d48:	1b 21       	and	r17, r11
     d4a:	61 f0       	breq	.+24     	; 0xd64 <main+0x14e>
     d4c:	88 23       	and	r24, r24
     d4e:	51 f0       	breq	.+20     	; 0xd64 <main+0x14e>
     d50:	2a e0       	ldi	r18, 0x0A	; 10
     d52:	37 ed       	ldi	r19, 0xD7	; 215
				voltage_value += 0.010;
     d54:	43 e2       	ldi	r20, 0x23	; 35
     d56:	5c e3       	ldi	r21, 0x3C	; 60
     d58:	c7 01       	movw	r24, r14
     d5a:	b6 01       	movw	r22, r12
     d5c:	e7 d0       	rcall	.+462    	; 0xf2c <__addsf3>
     d5e:	6b 01       	movw	r12, r22
     d60:	7c 01       	movw	r14, r24
     d62:	0b c0       	rjmp	.+22     	; 0xd7a <main+0x164>
     d64:	aa 20       	and	r10, r10
     d66:	49 f0       	breq	.+18     	; 0xd7a <main+0x164>
			else if(is_red_led_on)
     d68:	2f e6       	ldi	r18, 0x6F	; 111
     d6a:	32 e1       	ldi	r19, 0x12	; 18
				voltage_value -= 0.008;
     d6c:	43 e0       	ldi	r20, 0x03	; 3
     d6e:	5c e3       	ldi	r21, 0x3C	; 60
     d70:	c7 01       	movw	r24, r14
     d72:	b6 01       	movw	r22, r12
     d74:	da d0       	rcall	.+436    	; 0xf2a <__subsf3>
     d76:	6b 01       	movw	r12, r22
     d78:	7c 01       	movw	r14, r24
     d7a:	20 e0       	ldi	r18, 0x00	; 0
			
			
			char voltage_value_string[10];
			uint16_t voltage_mV = (uint16_t)(voltage_value * 1000);                                     // convert to millivolts
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	4a e7       	ldi	r20, 0x7A	; 122
     d80:	54 e4       	ldi	r21, 0x44	; 68
     d82:	c7 01       	movw	r24, r14
     d84:	b6 01       	movw	r22, r12
     d86:	84 d2       	rcall	.+1288   	; 0x1290 <__mulsf3>
     d88:	a1 d1       	rcall	.+834    	; 0x10cc <__fixunssfsi>
     d8a:	4b 01       	movw	r8, r22
     d8c:	5c 01       	movw	r10, r24
     d8e:	ab 01       	movw	r20, r22
     d90:	56 95       	lsr	r21
			sprintf(voltage_value_string, "%u.%03uV", voltage_mV / 1000, (voltage_mV % 1000)); // convert milivolts to Volts in string (sprintf doesn't seem to work from float to string directly...)
     d92:	47 95       	ror	r20
     d94:	56 95       	lsr	r21
     d96:	47 95       	ror	r20
     d98:	56 95       	lsr	r21
     d9a:	47 95       	ror	r20
     d9c:	9a 01       	movw	r18, r20
     d9e:	a5 ec       	ldi	r26, 0xC5	; 197
     da0:	b0 e2       	ldi	r27, 0x20	; 32
     da2:	fb d2       	rcall	.+1526   	; 0x139a <__umulhisi3>
     da4:	92 95       	swap	r25
     da6:	82 95       	swap	r24
     da8:	8f 70       	andi	r24, 0x0F	; 15
     daa:	89 27       	eor	r24, r25
     dac:	9f 70       	andi	r25, 0x0F	; 15
     dae:	89 27       	eor	r24, r25
     db0:	68 ee       	ldi	r22, 0xE8	; 232
     db2:	73 e0       	ldi	r23, 0x03	; 3
     db4:	86 9f       	mul	r24, r22
     db6:	90 01       	movw	r18, r0
     db8:	87 9f       	mul	r24, r23
     dba:	30 0d       	add	r19, r0
     dbc:	96 9f       	mul	r25, r22
     dbe:	30 0d       	add	r19, r0
     dc0:	11 24       	eor	r1, r1
     dc2:	82 1a       	sub	r8, r18
     dc4:	93 0a       	sbc	r9, r19
     dc6:	9f 92       	push	r9
     dc8:	8f 92       	push	r8
     dca:	9a 01       	movw	r18, r20
     dcc:	e6 d2       	rcall	.+1484   	; 0x139a <__umulhisi3>
     dce:	92 95       	swap	r25
     dd0:	82 95       	swap	r24
     dd2:	8f 70       	andi	r24, 0x0F	; 15
     dd4:	89 27       	eor	r24, r25
     dd6:	9f 70       	andi	r25, 0x0F	; 15
     dd8:	89 27       	eor	r24, r25
     dda:	9f 93       	push	r25
     ddc:	8f 93       	push	r24
     dde:	87 e0       	ldi	r24, 0x07	; 7
     de0:	92 e0       	ldi	r25, 0x02	; 2
     de2:	9f 93       	push	r25
     de4:	8f 93       	push	r24
     de6:	ce 01       	movw	r24, r28
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	9f 93       	push	r25
     dec:	8f 93       	push	r24
     dee:	e4 d2       	rcall	.+1480   	; 0x13b8 <sprintf>
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	f8 94       	cli
			
			if(voltage_value > 1.5){                                                                    // orange LED turned on if voltage is above 1.5V
     df4:	de bf       	out	0x3e, r29	; 62
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	cd bf       	out	0x3d, r28	; 61
     dfa:	20 e0       	ldi	r18, 0x00	; 0
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	40 ec       	ldi	r20, 0xC0	; 192
     e00:	5f e3       	ldi	r21, 0x3F	; 63
     e02:	c7 01       	movw	r24, r14
     e04:	b6 01       	movw	r22, r12
     e06:	40 d2       	rcall	.+1152   	; 0x1288 <__gesf2>
     e08:	18 16       	cp	r1, r24
     e0a:	24 f4       	brge	.+8      	; 0xe14 <main+0x1fe>
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <is_orange_led_on>
				is_orange_led_on = true;
     e12:	0b c0       	rjmp	.+22     	; 0xe2a <main+0x214>
     e14:	20 e0       	ldi	r18, 0x00	; 0
			}
			else if(voltage_value < 1.5){
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	40 ec       	ldi	r20, 0xC0	; 192
     e1a:	5f e3       	ldi	r21, 0x3F	; 63
     e1c:	c7 01       	movw	r24, r14
     e1e:	b6 01       	movw	r22, r12
     e20:	e9 d0       	rcall	.+466    	; 0xff4 <__cmpsf2>
     e22:	88 23       	and	r24, r24
     e24:	14 f4       	brge	.+4      	; 0xe2a <main+0x214>
     e26:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <is_orange_led_on>
				is_orange_led_on = false;
     e2a:	20 e0       	ldi	r18, 0x00	; 0
			}
			if(voltage_value >= 3.5){                                                                   // red LED turned on if voltage is above 3.5V
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	40 e6       	ldi	r20, 0x60	; 96
     e30:	50 e4       	ldi	r21, 0x40	; 64
     e32:	c7 01       	movw	r24, r14
     e34:	b6 01       	movw	r22, r12
     e36:	28 d2       	rcall	.+1104   	; 0x1288 <__gesf2>
     e38:	88 23       	and	r24, r24
     e3a:	24 f0       	brlt	.+8      	; 0xe44 <main+0x22e>
				is_red_led_on = true;
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <is_red_led_on>
     e42:	0b c0       	rjmp	.+22     	; 0xe5a <main+0x244>
			}
			else if(voltage_value < 3.5){
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	40 e6       	ldi	r20, 0x60	; 96
     e4a:	50 e4       	ldi	r21, 0x40	; 64
     e4c:	c7 01       	movw	r24, r14
     e4e:	b6 01       	movw	r22, r12
     e50:	d1 d0       	rcall	.+418    	; 0xff4 <__cmpsf2>
     e52:	88 23       	and	r24, r24
				is_red_led_on = false;
     e54:	14 f4       	brge	.+4      	; 0xe5a <main+0x244>
     e56:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <is_red_led_on>
			}

			timer_delay_ms(1000);
     e5a:	88 ee       	ldi	r24, 0xE8	; 232
     e5c:	93 e0       	ldi	r25, 0x03	; 3
     e5e:	4e d0       	rcall	.+156    	; 0xefc <timer_delay_ms>
     e60:	f0 ce       	rjmp	.-544    	; 0xc42 <main+0x2c>
		}else{
			set_text_size(2);
     e62:	82 e0       	ldi	r24, 0x02	; 2
     e64:	78 dd       	rcall	.-1296   	; 0x956 <set_text_size>
     e66:	44 e1       	ldi	r20, 0x14	; 20
			display_print("System OFF", 50, 20);
     e68:	50 e0       	ldi	r21, 0x00	; 0
     e6a:	62 e3       	ldi	r22, 0x32	; 50
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	80 e1       	ldi	r24, 0x10	; 16
     e70:	92 e0       	ldi	r25, 0x02	; 2
     e72:	32 de       	rcall	.-924    	; 0xad8 <display_print>
     e74:	42 e3       	ldi	r20, 0x32	; 50
     e76:	50 e0       	ldi	r21, 0x00	; 0
			display_print("Power ON", 50, 50);
     e78:	62 e3       	ldi	r22, 0x32	; 50
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	8b e1       	ldi	r24, 0x1B	; 27
     e7e:	92 e0       	ldi	r25, 0x02	; 2
     e80:	2b de       	rcall	.-938    	; 0xad8 <display_print>
     e82:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <is_green_led_on>
     e86:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <is_orange_led_on>
			is_green_led_on = false;
     e8a:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <is_red_led_on>
			is_orange_led_on = false;
     e8e:	d9 ce       	rjmp	.-590    	; 0xc42 <main+0x2c>

00000e90 <SPI_init>:
#include "spi.h"

void SPI_init(void) {
	SPI_DDR |= (1 << SPI_MOSI) | (1 << SPI_SCK) | (1 << PB0);    // MISO, SCK & SS output
     e90:	84 b1       	in	r24, 0x04	; 4
     e92:	87 60       	ori	r24, 0x07	; 7
     e94:	84 b9       	out	0x04, r24	; 4
	SPI_DDR &= ~(1 << PB3);                                      // MISO  input
     e96:	84 b1       	in	r24, 0x04	; 4
     e98:	87 7f       	andi	r24, 0xF7	; 247
     e9a:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1 << PB3);                                        // pull-up is OFF
     e9c:	85 b1       	in	r24, 0x05	; 5
     e9e:	87 7f       	andi	r24, 0xF7	; 247
     ea0:	85 b9       	out	0x05, r24	; 5
	SPCR = (1 << SPE) | (1 << MSTR) | (1 << CPOL) | (1 << CPHA); // enable spi and set master
     ea2:	8c e5       	ldi	r24, 0x5C	; 92
     ea4:	8c bd       	out	0x2c, r24	; 44
	SPSR |= (1 << SPI2X);                                        // double speed
     ea6:	8d b5       	in	r24, 0x2d	; 45
     ea8:	81 60       	ori	r24, 0x01	; 1
     eaa:	8d bd       	out	0x2d, r24	; 45
     eac:	08 95       	ret

00000eae <SPI_transfer>:
}

uint8_t SPI_transfer(uint8_t data) {
	SPDR = data;
     eae:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
     eb0:	0d b4       	in	r0, 0x2d	; 45
     eb2:	07 fe       	sbrs	r0, 7
     eb4:	fd cf       	rjmp	.-6      	; 0xeb0 <SPI_transfer+0x2>
	return SPDR;
     eb6:	8e b5       	in	r24, 0x2e	; 46
}
     eb8:	08 95       	ret

00000eba <Timer0_Init>:
////    TIMER0    ////
//////////////////////


void Timer0_Init(void){
	TCCR0A = 0x00;                          // reset counter config
     eba:	14 bc       	out	0x24, r1	; 36
	
	TCCR0B &= ~(1 << CS02);                 // clear CS02
     ebc:	85 b5       	in	r24, 0x25	; 37
     ebe:	8b 7f       	andi	r24, 0xFB	; 251
     ec0:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1 << CS01) | (1 << CS00);    // set CS00 & CS01 for 64 prescaler (but this is a bit too slow still, 1.024ms instead of 1 ms flat for ovf => preload the counter)
     ec2:	85 b5       	in	r24, 0x25	; 37
     ec4:	83 60       	ori	r24, 0x03	; 3
     ec6:	85 bd       	out	0x25, r24	; 37
	
	TCNT0 = 6;                              // preload counter value to get exactly 1ms for ovf
     ec8:	86 e0       	ldi	r24, 0x06	; 6
     eca:	86 bd       	out	0x26, r24	; 38
	TIMSK0 |= (1 << TOIE0);                 // enable Timer0 overflow interrupt
     ecc:	ee e6       	ldi	r30, 0x6E	; 110
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	81 60       	ori	r24, 0x01	; 1
     ed4:	80 83       	st	Z, r24
     ed6:	08 95       	ret

00000ed8 <Timer1_Init>:
////    TIMER1    ////
//////////////////////


void Timer1_Init(void){
	TCCR1A = 0x00;                          // reset counter config
     ed8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	
	TCCR1B &= ~((1 << CS12) | (1 << CS11)); // clear CS12 and CS11
     edc:	e1 e8       	ldi	r30, 0x81	; 129
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	80 81       	ld	r24, Z
     ee2:	89 7f       	andi	r24, 0xF9	; 249
     ee4:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS10);                  // set CS10 for no prescaler
     ee6:	80 81       	ld	r24, Z
     ee8:	81 60       	ori	r24, 0x01	; 1
     eea:	80 83       	st	Z, r24
	
	TCNT1 = 0;                              // clear counter value
     eec:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
     ef0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	TIFR1 |= (1 << OCF1A);                  // clear compare flag
     ef4:	86 b3       	in	r24, 0x16	; 22
     ef6:	82 60       	ori	r24, 0x02	; 2
     ef8:	86 bb       	out	0x16, r24	; 22
     efa:	08 95       	ret

00000efc <timer_delay_ms>:
}


void timer_delay_ms(uint16_t ms){
	while (ms--){
     efc:	10 c0       	rjmp	.+32     	; 0xf1e <timer_delay_ms+0x22>
		uint16_t ticks = 16000; // 1 ms = 16000 ticks at 16 MHz

		OCR1AH = (ticks >> 8);
     efe:	8e e3       	ldi	r24, 0x3E	; 62
     f00:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
		OCR1AL = (ticks & 0xFF);
     f04:	80 e8       	ldi	r24, 0x80	; 128
     f06:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>

		TCNT1 = 0;
     f0a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
     f0e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
		TIFR1 |= (1 << OCF1A);
     f12:	86 b3       	in	r24, 0x16	; 22
     f14:	82 60       	ori	r24, 0x02	; 2
     f16:	86 bb       	out	0x16, r24	; 22

		while (!(TIFR1 & (1 << OCF1A)));
     f18:	b1 9b       	sbis	0x16, 1	; 22
     f1a:	fe cf       	rjmp	.-4      	; 0xf18 <timer_delay_ms+0x1c>
	TIFR1 |= (1 << OCF1A);                  // clear compare flag
}


void timer_delay_ms(uint16_t ms){
	while (ms--){
     f1c:	c9 01       	movw	r24, r18
     f1e:	9c 01       	movw	r18, r24
     f20:	21 50       	subi	r18, 0x01	; 1
     f22:	31 09       	sbc	r19, r1
     f24:	89 2b       	or	r24, r25
     f26:	59 f7       	brne	.-42     	; 0xefe <timer_delay_ms+0x2>
		TCNT1 = 0;
		TIFR1 |= (1 << OCF1A);

		while (!(TIFR1 & (1 << OCF1A)));
	}
}
     f28:	08 95       	ret

00000f2a <__subsf3>:
     f2a:	50 58       	subi	r21, 0x80	; 128

00000f2c <__addsf3>:
     f2c:	bb 27       	eor	r27, r27
     f2e:	aa 27       	eor	r26, r26
     f30:	0e d0       	rcall	.+28     	; 0xf4e <__addsf3x>
     f32:	70 c1       	rjmp	.+736    	; 0x1214 <__fp_round>
     f34:	61 d1       	rcall	.+706    	; 0x11f8 <__fp_pscA>
     f36:	30 f0       	brcs	.+12     	; 0xf44 <__addsf3+0x18>
     f38:	66 d1       	rcall	.+716    	; 0x1206 <__fp_pscB>
     f3a:	20 f0       	brcs	.+8      	; 0xf44 <__addsf3+0x18>
     f3c:	31 f4       	brne	.+12     	; 0xf4a <__addsf3+0x1e>
     f3e:	9f 3f       	cpi	r25, 0xFF	; 255
     f40:	11 f4       	brne	.+4      	; 0xf46 <__addsf3+0x1a>
     f42:	1e f4       	brtc	.+6      	; 0xf4a <__addsf3+0x1e>
     f44:	56 c1       	rjmp	.+684    	; 0x11f2 <__fp_nan>
     f46:	0e f4       	brtc	.+2      	; 0xf4a <__addsf3+0x1e>
     f48:	e0 95       	com	r30
     f4a:	e7 fb       	bst	r30, 7
     f4c:	4c c1       	rjmp	.+664    	; 0x11e6 <__fp_inf>

00000f4e <__addsf3x>:
     f4e:	e9 2f       	mov	r30, r25
     f50:	72 d1       	rcall	.+740    	; 0x1236 <__fp_split3>
     f52:	80 f3       	brcs	.-32     	; 0xf34 <__addsf3+0x8>
     f54:	ba 17       	cp	r27, r26
     f56:	62 07       	cpc	r22, r18
     f58:	73 07       	cpc	r23, r19
     f5a:	84 07       	cpc	r24, r20
     f5c:	95 07       	cpc	r25, r21
     f5e:	18 f0       	brcs	.+6      	; 0xf66 <__addsf3x+0x18>
     f60:	71 f4       	brne	.+28     	; 0xf7e <__addsf3x+0x30>
     f62:	9e f5       	brtc	.+102    	; 0xfca <__addsf3x+0x7c>
     f64:	8a c1       	rjmp	.+788    	; 0x127a <__fp_zero>
     f66:	0e f4       	brtc	.+2      	; 0xf6a <__addsf3x+0x1c>
     f68:	e0 95       	com	r30
     f6a:	0b 2e       	mov	r0, r27
     f6c:	ba 2f       	mov	r27, r26
     f6e:	a0 2d       	mov	r26, r0
     f70:	0b 01       	movw	r0, r22
     f72:	b9 01       	movw	r22, r18
     f74:	90 01       	movw	r18, r0
     f76:	0c 01       	movw	r0, r24
     f78:	ca 01       	movw	r24, r20
     f7a:	a0 01       	movw	r20, r0
     f7c:	11 24       	eor	r1, r1
     f7e:	ff 27       	eor	r31, r31
     f80:	59 1b       	sub	r21, r25
     f82:	99 f0       	breq	.+38     	; 0xfaa <__addsf3x+0x5c>
     f84:	59 3f       	cpi	r21, 0xF9	; 249
     f86:	50 f4       	brcc	.+20     	; 0xf9c <__addsf3x+0x4e>
     f88:	50 3e       	cpi	r21, 0xE0	; 224
     f8a:	68 f1       	brcs	.+90     	; 0xfe6 <__addsf3x+0x98>
     f8c:	1a 16       	cp	r1, r26
     f8e:	f0 40       	sbci	r31, 0x00	; 0
     f90:	a2 2f       	mov	r26, r18
     f92:	23 2f       	mov	r18, r19
     f94:	34 2f       	mov	r19, r20
     f96:	44 27       	eor	r20, r20
     f98:	58 5f       	subi	r21, 0xF8	; 248
     f9a:	f3 cf       	rjmp	.-26     	; 0xf82 <__addsf3x+0x34>
     f9c:	46 95       	lsr	r20
     f9e:	37 95       	ror	r19
     fa0:	27 95       	ror	r18
     fa2:	a7 95       	ror	r26
     fa4:	f0 40       	sbci	r31, 0x00	; 0
     fa6:	53 95       	inc	r21
     fa8:	c9 f7       	brne	.-14     	; 0xf9c <__addsf3x+0x4e>
     faa:	7e f4       	brtc	.+30     	; 0xfca <__addsf3x+0x7c>
     fac:	1f 16       	cp	r1, r31
     fae:	ba 0b       	sbc	r27, r26
     fb0:	62 0b       	sbc	r22, r18
     fb2:	73 0b       	sbc	r23, r19
     fb4:	84 0b       	sbc	r24, r20
     fb6:	ba f0       	brmi	.+46     	; 0xfe6 <__addsf3x+0x98>
     fb8:	91 50       	subi	r25, 0x01	; 1
     fba:	a1 f0       	breq	.+40     	; 0xfe4 <__addsf3x+0x96>
     fbc:	ff 0f       	add	r31, r31
     fbe:	bb 1f       	adc	r27, r27
     fc0:	66 1f       	adc	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	c2 f7       	brpl	.-16     	; 0xfb8 <__addsf3x+0x6a>
     fc8:	0e c0       	rjmp	.+28     	; 0xfe6 <__addsf3x+0x98>
     fca:	ba 0f       	add	r27, r26
     fcc:	62 1f       	adc	r22, r18
     fce:	73 1f       	adc	r23, r19
     fd0:	84 1f       	adc	r24, r20
     fd2:	48 f4       	brcc	.+18     	; 0xfe6 <__addsf3x+0x98>
     fd4:	87 95       	ror	r24
     fd6:	77 95       	ror	r23
     fd8:	67 95       	ror	r22
     fda:	b7 95       	ror	r27
     fdc:	f7 95       	ror	r31
     fde:	9e 3f       	cpi	r25, 0xFE	; 254
     fe0:	08 f0       	brcs	.+2      	; 0xfe4 <__addsf3x+0x96>
     fe2:	b3 cf       	rjmp	.-154    	; 0xf4a <__addsf3+0x1e>
     fe4:	93 95       	inc	r25
     fe6:	88 0f       	add	r24, r24
     fe8:	08 f0       	brcs	.+2      	; 0xfec <__addsf3x+0x9e>
     fea:	99 27       	eor	r25, r25
     fec:	ee 0f       	add	r30, r30
     fee:	97 95       	ror	r25
     ff0:	87 95       	ror	r24
     ff2:	08 95       	ret

00000ff4 <__cmpsf2>:
     ff4:	d4 d0       	rcall	.+424    	; 0x119e <__fp_cmp>
     ff6:	08 f4       	brcc	.+2      	; 0xffa <__cmpsf2+0x6>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	08 95       	ret

00000ffc <__divsf3>:
     ffc:	0c d0       	rcall	.+24     	; 0x1016 <__divsf3x>
     ffe:	0a c1       	rjmp	.+532    	; 0x1214 <__fp_round>
    1000:	02 d1       	rcall	.+516    	; 0x1206 <__fp_pscB>
    1002:	40 f0       	brcs	.+16     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
    1004:	f9 d0       	rcall	.+498    	; 0x11f8 <__fp_pscA>
    1006:	30 f0       	brcs	.+12     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
    1008:	21 f4       	brne	.+8      	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
    100a:	5f 3f       	cpi	r21, 0xFF	; 255
    100c:	19 f0       	breq	.+6      	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
    100e:	eb c0       	rjmp	.+470    	; 0x11e6 <__fp_inf>
    1010:	51 11       	cpse	r21, r1
    1012:	34 c1       	rjmp	.+616    	; 0x127c <__fp_szero>
    1014:	ee c0       	rjmp	.+476    	; 0x11f2 <__fp_nan>

00001016 <__divsf3x>:
    1016:	0f d1       	rcall	.+542    	; 0x1236 <__fp_split3>
    1018:	98 f3       	brcs	.-26     	; 0x1000 <__EEPROM_REGION_LENGTH__>

0000101a <__divsf3_pse>:
    101a:	99 23       	and	r25, r25
    101c:	c9 f3       	breq	.-14     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    101e:	55 23       	and	r21, r21
    1020:	b1 f3       	breq	.-20     	; 0x100e <__EEPROM_REGION_LENGTH__+0xe>
    1022:	95 1b       	sub	r25, r21
    1024:	55 0b       	sbc	r21, r21
    1026:	bb 27       	eor	r27, r27
    1028:	aa 27       	eor	r26, r26
    102a:	62 17       	cp	r22, r18
    102c:	73 07       	cpc	r23, r19
    102e:	84 07       	cpc	r24, r20
    1030:	38 f0       	brcs	.+14     	; 0x1040 <__divsf3_pse+0x26>
    1032:	9f 5f       	subi	r25, 0xFF	; 255
    1034:	5f 4f       	sbci	r21, 0xFF	; 255
    1036:	22 0f       	add	r18, r18
    1038:	33 1f       	adc	r19, r19
    103a:	44 1f       	adc	r20, r20
    103c:	aa 1f       	adc	r26, r26
    103e:	a9 f3       	breq	.-22     	; 0x102a <__divsf3_pse+0x10>
    1040:	33 d0       	rcall	.+102    	; 0x10a8 <__divsf3_pse+0x8e>
    1042:	0e 2e       	mov	r0, r30
    1044:	3a f0       	brmi	.+14     	; 0x1054 <__divsf3_pse+0x3a>
    1046:	e0 e8       	ldi	r30, 0x80	; 128
    1048:	30 d0       	rcall	.+96     	; 0x10aa <__divsf3_pse+0x90>
    104a:	91 50       	subi	r25, 0x01	; 1
    104c:	50 40       	sbci	r21, 0x00	; 0
    104e:	e6 95       	lsr	r30
    1050:	00 1c       	adc	r0, r0
    1052:	ca f7       	brpl	.-14     	; 0x1046 <__divsf3_pse+0x2c>
    1054:	29 d0       	rcall	.+82     	; 0x10a8 <__divsf3_pse+0x8e>
    1056:	fe 2f       	mov	r31, r30
    1058:	27 d0       	rcall	.+78     	; 0x10a8 <__divsf3_pse+0x8e>
    105a:	66 0f       	add	r22, r22
    105c:	77 1f       	adc	r23, r23
    105e:	88 1f       	adc	r24, r24
    1060:	bb 1f       	adc	r27, r27
    1062:	26 17       	cp	r18, r22
    1064:	37 07       	cpc	r19, r23
    1066:	48 07       	cpc	r20, r24
    1068:	ab 07       	cpc	r26, r27
    106a:	b0 e8       	ldi	r27, 0x80	; 128
    106c:	09 f0       	breq	.+2      	; 0x1070 <__divsf3_pse+0x56>
    106e:	bb 0b       	sbc	r27, r27
    1070:	80 2d       	mov	r24, r0
    1072:	bf 01       	movw	r22, r30
    1074:	ff 27       	eor	r31, r31
    1076:	93 58       	subi	r25, 0x83	; 131
    1078:	5f 4f       	sbci	r21, 0xFF	; 255
    107a:	2a f0       	brmi	.+10     	; 0x1086 <__divsf3_pse+0x6c>
    107c:	9e 3f       	cpi	r25, 0xFE	; 254
    107e:	51 05       	cpc	r21, r1
    1080:	68 f0       	brcs	.+26     	; 0x109c <__divsf3_pse+0x82>
    1082:	b1 c0       	rjmp	.+354    	; 0x11e6 <__fp_inf>
    1084:	fb c0       	rjmp	.+502    	; 0x127c <__fp_szero>
    1086:	5f 3f       	cpi	r21, 0xFF	; 255
    1088:	ec f3       	brlt	.-6      	; 0x1084 <__divsf3_pse+0x6a>
    108a:	98 3e       	cpi	r25, 0xE8	; 232
    108c:	dc f3       	brlt	.-10     	; 0x1084 <__divsf3_pse+0x6a>
    108e:	86 95       	lsr	r24
    1090:	77 95       	ror	r23
    1092:	67 95       	ror	r22
    1094:	b7 95       	ror	r27
    1096:	f7 95       	ror	r31
    1098:	9f 5f       	subi	r25, 0xFF	; 255
    109a:	c9 f7       	brne	.-14     	; 0x108e <__divsf3_pse+0x74>
    109c:	88 0f       	add	r24, r24
    109e:	91 1d       	adc	r25, r1
    10a0:	96 95       	lsr	r25
    10a2:	87 95       	ror	r24
    10a4:	97 f9       	bld	r25, 7
    10a6:	08 95       	ret
    10a8:	e1 e0       	ldi	r30, 0x01	; 1
    10aa:	66 0f       	add	r22, r22
    10ac:	77 1f       	adc	r23, r23
    10ae:	88 1f       	adc	r24, r24
    10b0:	bb 1f       	adc	r27, r27
    10b2:	62 17       	cp	r22, r18
    10b4:	73 07       	cpc	r23, r19
    10b6:	84 07       	cpc	r24, r20
    10b8:	ba 07       	cpc	r27, r26
    10ba:	20 f0       	brcs	.+8      	; 0x10c4 <__divsf3_pse+0xaa>
    10bc:	62 1b       	sub	r22, r18
    10be:	73 0b       	sbc	r23, r19
    10c0:	84 0b       	sbc	r24, r20
    10c2:	ba 0b       	sbc	r27, r26
    10c4:	ee 1f       	adc	r30, r30
    10c6:	88 f7       	brcc	.-30     	; 0x10aa <__divsf3_pse+0x90>
    10c8:	e0 95       	com	r30
    10ca:	08 95       	ret

000010cc <__fixunssfsi>:
    10cc:	bc d0       	rcall	.+376    	; 0x1246 <__fp_splitA>
    10ce:	88 f0       	brcs	.+34     	; 0x10f2 <__fixunssfsi+0x26>
    10d0:	9f 57       	subi	r25, 0x7F	; 127
    10d2:	90 f0       	brcs	.+36     	; 0x10f8 <__fixunssfsi+0x2c>
    10d4:	b9 2f       	mov	r27, r25
    10d6:	99 27       	eor	r25, r25
    10d8:	b7 51       	subi	r27, 0x17	; 23
    10da:	a0 f0       	brcs	.+40     	; 0x1104 <__fixunssfsi+0x38>
    10dc:	d1 f0       	breq	.+52     	; 0x1112 <__fixunssfsi+0x46>
    10de:	66 0f       	add	r22, r22
    10e0:	77 1f       	adc	r23, r23
    10e2:	88 1f       	adc	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	1a f0       	brmi	.+6      	; 0x10ee <__fixunssfsi+0x22>
    10e8:	ba 95       	dec	r27
    10ea:	c9 f7       	brne	.-14     	; 0x10de <__fixunssfsi+0x12>
    10ec:	12 c0       	rjmp	.+36     	; 0x1112 <__fixunssfsi+0x46>
    10ee:	b1 30       	cpi	r27, 0x01	; 1
    10f0:	81 f0       	breq	.+32     	; 0x1112 <__fixunssfsi+0x46>
    10f2:	c3 d0       	rcall	.+390    	; 0x127a <__fp_zero>
    10f4:	b1 e0       	ldi	r27, 0x01	; 1
    10f6:	08 95       	ret
    10f8:	c0 c0       	rjmp	.+384    	; 0x127a <__fp_zero>
    10fa:	67 2f       	mov	r22, r23
    10fc:	78 2f       	mov	r23, r24
    10fe:	88 27       	eor	r24, r24
    1100:	b8 5f       	subi	r27, 0xF8	; 248
    1102:	39 f0       	breq	.+14     	; 0x1112 <__fixunssfsi+0x46>
    1104:	b9 3f       	cpi	r27, 0xF9	; 249
    1106:	cc f3       	brlt	.-14     	; 0x10fa <__fixunssfsi+0x2e>
    1108:	86 95       	lsr	r24
    110a:	77 95       	ror	r23
    110c:	67 95       	ror	r22
    110e:	b3 95       	inc	r27
    1110:	d9 f7       	brne	.-10     	; 0x1108 <__fixunssfsi+0x3c>
    1112:	3e f4       	brtc	.+14     	; 0x1122 <__fixunssfsi+0x56>
    1114:	90 95       	com	r25
    1116:	80 95       	com	r24
    1118:	70 95       	com	r23
    111a:	61 95       	neg	r22
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	8f 4f       	sbci	r24, 0xFF	; 255
    1120:	9f 4f       	sbci	r25, 0xFF	; 255
    1122:	08 95       	ret

00001124 <__floatunsisf>:
    1124:	e8 94       	clt
    1126:	09 c0       	rjmp	.+18     	; 0x113a <__floatsisf+0x12>

00001128 <__floatsisf>:
    1128:	97 fb       	bst	r25, 7
    112a:	3e f4       	brtc	.+14     	; 0x113a <__floatsisf+0x12>
    112c:	90 95       	com	r25
    112e:	80 95       	com	r24
    1130:	70 95       	com	r23
    1132:	61 95       	neg	r22
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	99 23       	and	r25, r25
    113c:	a9 f0       	breq	.+42     	; 0x1168 <__floatsisf+0x40>
    113e:	f9 2f       	mov	r31, r25
    1140:	96 e9       	ldi	r25, 0x96	; 150
    1142:	bb 27       	eor	r27, r27
    1144:	93 95       	inc	r25
    1146:	f6 95       	lsr	r31
    1148:	87 95       	ror	r24
    114a:	77 95       	ror	r23
    114c:	67 95       	ror	r22
    114e:	b7 95       	ror	r27
    1150:	f1 11       	cpse	r31, r1
    1152:	f8 cf       	rjmp	.-16     	; 0x1144 <__floatsisf+0x1c>
    1154:	fa f4       	brpl	.+62     	; 0x1194 <__floatsisf+0x6c>
    1156:	bb 0f       	add	r27, r27
    1158:	11 f4       	brne	.+4      	; 0x115e <__floatsisf+0x36>
    115a:	60 ff       	sbrs	r22, 0
    115c:	1b c0       	rjmp	.+54     	; 0x1194 <__floatsisf+0x6c>
    115e:	6f 5f       	subi	r22, 0xFF	; 255
    1160:	7f 4f       	sbci	r23, 0xFF	; 255
    1162:	8f 4f       	sbci	r24, 0xFF	; 255
    1164:	9f 4f       	sbci	r25, 0xFF	; 255
    1166:	16 c0       	rjmp	.+44     	; 0x1194 <__floatsisf+0x6c>
    1168:	88 23       	and	r24, r24
    116a:	11 f0       	breq	.+4      	; 0x1170 <__floatsisf+0x48>
    116c:	96 e9       	ldi	r25, 0x96	; 150
    116e:	11 c0       	rjmp	.+34     	; 0x1192 <__floatsisf+0x6a>
    1170:	77 23       	and	r23, r23
    1172:	21 f0       	breq	.+8      	; 0x117c <__floatsisf+0x54>
    1174:	9e e8       	ldi	r25, 0x8E	; 142
    1176:	87 2f       	mov	r24, r23
    1178:	76 2f       	mov	r23, r22
    117a:	05 c0       	rjmp	.+10     	; 0x1186 <__floatsisf+0x5e>
    117c:	66 23       	and	r22, r22
    117e:	71 f0       	breq	.+28     	; 0x119c <__floatsisf+0x74>
    1180:	96 e8       	ldi	r25, 0x86	; 134
    1182:	86 2f       	mov	r24, r22
    1184:	70 e0       	ldi	r23, 0x00	; 0
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	2a f0       	brmi	.+10     	; 0x1194 <__floatsisf+0x6c>
    118a:	9a 95       	dec	r25
    118c:	66 0f       	add	r22, r22
    118e:	77 1f       	adc	r23, r23
    1190:	88 1f       	adc	r24, r24
    1192:	da f7       	brpl	.-10     	; 0x118a <__floatsisf+0x62>
    1194:	88 0f       	add	r24, r24
    1196:	96 95       	lsr	r25
    1198:	87 95       	ror	r24
    119a:	97 f9       	bld	r25, 7
    119c:	08 95       	ret

0000119e <__fp_cmp>:
    119e:	99 0f       	add	r25, r25
    11a0:	00 08       	sbc	r0, r0
    11a2:	55 0f       	add	r21, r21
    11a4:	aa 0b       	sbc	r26, r26
    11a6:	e0 e8       	ldi	r30, 0x80	; 128
    11a8:	fe ef       	ldi	r31, 0xFE	; 254
    11aa:	16 16       	cp	r1, r22
    11ac:	17 06       	cpc	r1, r23
    11ae:	e8 07       	cpc	r30, r24
    11b0:	f9 07       	cpc	r31, r25
    11b2:	c0 f0       	brcs	.+48     	; 0x11e4 <__fp_cmp+0x46>
    11b4:	12 16       	cp	r1, r18
    11b6:	13 06       	cpc	r1, r19
    11b8:	e4 07       	cpc	r30, r20
    11ba:	f5 07       	cpc	r31, r21
    11bc:	98 f0       	brcs	.+38     	; 0x11e4 <__fp_cmp+0x46>
    11be:	62 1b       	sub	r22, r18
    11c0:	73 0b       	sbc	r23, r19
    11c2:	84 0b       	sbc	r24, r20
    11c4:	95 0b       	sbc	r25, r21
    11c6:	39 f4       	brne	.+14     	; 0x11d6 <__fp_cmp+0x38>
    11c8:	0a 26       	eor	r0, r26
    11ca:	61 f0       	breq	.+24     	; 0x11e4 <__fp_cmp+0x46>
    11cc:	23 2b       	or	r18, r19
    11ce:	24 2b       	or	r18, r20
    11d0:	25 2b       	or	r18, r21
    11d2:	21 f4       	brne	.+8      	; 0x11dc <__fp_cmp+0x3e>
    11d4:	08 95       	ret
    11d6:	0a 26       	eor	r0, r26
    11d8:	09 f4       	brne	.+2      	; 0x11dc <__fp_cmp+0x3e>
    11da:	a1 40       	sbci	r26, 0x01	; 1
    11dc:	a6 95       	lsr	r26
    11de:	8f ef       	ldi	r24, 0xFF	; 255
    11e0:	81 1d       	adc	r24, r1
    11e2:	81 1d       	adc	r24, r1
    11e4:	08 95       	ret

000011e6 <__fp_inf>:
    11e6:	97 f9       	bld	r25, 7
    11e8:	9f 67       	ori	r25, 0x7F	; 127
    11ea:	80 e8       	ldi	r24, 0x80	; 128
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	08 95       	ret

000011f2 <__fp_nan>:
    11f2:	9f ef       	ldi	r25, 0xFF	; 255
    11f4:	80 ec       	ldi	r24, 0xC0	; 192
    11f6:	08 95       	ret

000011f8 <__fp_pscA>:
    11f8:	00 24       	eor	r0, r0
    11fa:	0a 94       	dec	r0
    11fc:	16 16       	cp	r1, r22
    11fe:	17 06       	cpc	r1, r23
    1200:	18 06       	cpc	r1, r24
    1202:	09 06       	cpc	r0, r25
    1204:	08 95       	ret

00001206 <__fp_pscB>:
    1206:	00 24       	eor	r0, r0
    1208:	0a 94       	dec	r0
    120a:	12 16       	cp	r1, r18
    120c:	13 06       	cpc	r1, r19
    120e:	14 06       	cpc	r1, r20
    1210:	05 06       	cpc	r0, r21
    1212:	08 95       	ret

00001214 <__fp_round>:
    1214:	09 2e       	mov	r0, r25
    1216:	03 94       	inc	r0
    1218:	00 0c       	add	r0, r0
    121a:	11 f4       	brne	.+4      	; 0x1220 <__fp_round+0xc>
    121c:	88 23       	and	r24, r24
    121e:	52 f0       	brmi	.+20     	; 0x1234 <__fp_round+0x20>
    1220:	bb 0f       	add	r27, r27
    1222:	40 f4       	brcc	.+16     	; 0x1234 <__fp_round+0x20>
    1224:	bf 2b       	or	r27, r31
    1226:	11 f4       	brne	.+4      	; 0x122c <__fp_round+0x18>
    1228:	60 ff       	sbrs	r22, 0
    122a:	04 c0       	rjmp	.+8      	; 0x1234 <__fp_round+0x20>
    122c:	6f 5f       	subi	r22, 0xFF	; 255
    122e:	7f 4f       	sbci	r23, 0xFF	; 255
    1230:	8f 4f       	sbci	r24, 0xFF	; 255
    1232:	9f 4f       	sbci	r25, 0xFF	; 255
    1234:	08 95       	ret

00001236 <__fp_split3>:
    1236:	57 fd       	sbrc	r21, 7
    1238:	90 58       	subi	r25, 0x80	; 128
    123a:	44 0f       	add	r20, r20
    123c:	55 1f       	adc	r21, r21
    123e:	59 f0       	breq	.+22     	; 0x1256 <__fp_splitA+0x10>
    1240:	5f 3f       	cpi	r21, 0xFF	; 255
    1242:	71 f0       	breq	.+28     	; 0x1260 <__fp_splitA+0x1a>
    1244:	47 95       	ror	r20

00001246 <__fp_splitA>:
    1246:	88 0f       	add	r24, r24
    1248:	97 fb       	bst	r25, 7
    124a:	99 1f       	adc	r25, r25
    124c:	61 f0       	breq	.+24     	; 0x1266 <__fp_splitA+0x20>
    124e:	9f 3f       	cpi	r25, 0xFF	; 255
    1250:	79 f0       	breq	.+30     	; 0x1270 <__fp_splitA+0x2a>
    1252:	87 95       	ror	r24
    1254:	08 95       	ret
    1256:	12 16       	cp	r1, r18
    1258:	13 06       	cpc	r1, r19
    125a:	14 06       	cpc	r1, r20
    125c:	55 1f       	adc	r21, r21
    125e:	f2 cf       	rjmp	.-28     	; 0x1244 <__fp_split3+0xe>
    1260:	46 95       	lsr	r20
    1262:	f1 df       	rcall	.-30     	; 0x1246 <__fp_splitA>
    1264:	08 c0       	rjmp	.+16     	; 0x1276 <__fp_splitA+0x30>
    1266:	16 16       	cp	r1, r22
    1268:	17 06       	cpc	r1, r23
    126a:	18 06       	cpc	r1, r24
    126c:	99 1f       	adc	r25, r25
    126e:	f1 cf       	rjmp	.-30     	; 0x1252 <__fp_splitA+0xc>
    1270:	86 95       	lsr	r24
    1272:	71 05       	cpc	r23, r1
    1274:	61 05       	cpc	r22, r1
    1276:	08 94       	sec
    1278:	08 95       	ret

0000127a <__fp_zero>:
    127a:	e8 94       	clt

0000127c <__fp_szero>:
    127c:	bb 27       	eor	r27, r27
    127e:	66 27       	eor	r22, r22
    1280:	77 27       	eor	r23, r23
    1282:	cb 01       	movw	r24, r22
    1284:	97 f9       	bld	r25, 7
    1286:	08 95       	ret

00001288 <__gesf2>:
    1288:	8a df       	rcall	.-236    	; 0x119e <__fp_cmp>
    128a:	08 f4       	brcc	.+2      	; 0x128e <__gesf2+0x6>
    128c:	8f ef       	ldi	r24, 0xFF	; 255
    128e:	08 95       	ret

00001290 <__mulsf3>:
    1290:	0b d0       	rcall	.+22     	; 0x12a8 <__mulsf3x>
    1292:	c0 cf       	rjmp	.-128    	; 0x1214 <__fp_round>
    1294:	b1 df       	rcall	.-158    	; 0x11f8 <__fp_pscA>
    1296:	28 f0       	brcs	.+10     	; 0x12a2 <__mulsf3+0x12>
    1298:	b6 df       	rcall	.-148    	; 0x1206 <__fp_pscB>
    129a:	18 f0       	brcs	.+6      	; 0x12a2 <__mulsf3+0x12>
    129c:	95 23       	and	r25, r21
    129e:	09 f0       	breq	.+2      	; 0x12a2 <__mulsf3+0x12>
    12a0:	a2 cf       	rjmp	.-188    	; 0x11e6 <__fp_inf>
    12a2:	a7 cf       	rjmp	.-178    	; 0x11f2 <__fp_nan>
    12a4:	11 24       	eor	r1, r1
    12a6:	ea cf       	rjmp	.-44     	; 0x127c <__fp_szero>

000012a8 <__mulsf3x>:
    12a8:	c6 df       	rcall	.-116    	; 0x1236 <__fp_split3>
    12aa:	a0 f3       	brcs	.-24     	; 0x1294 <__mulsf3+0x4>

000012ac <__mulsf3_pse>:
    12ac:	95 9f       	mul	r25, r21
    12ae:	d1 f3       	breq	.-12     	; 0x12a4 <__mulsf3+0x14>
    12b0:	95 0f       	add	r25, r21
    12b2:	50 e0       	ldi	r21, 0x00	; 0
    12b4:	55 1f       	adc	r21, r21
    12b6:	62 9f       	mul	r22, r18
    12b8:	f0 01       	movw	r30, r0
    12ba:	72 9f       	mul	r23, r18
    12bc:	bb 27       	eor	r27, r27
    12be:	f0 0d       	add	r31, r0
    12c0:	b1 1d       	adc	r27, r1
    12c2:	63 9f       	mul	r22, r19
    12c4:	aa 27       	eor	r26, r26
    12c6:	f0 0d       	add	r31, r0
    12c8:	b1 1d       	adc	r27, r1
    12ca:	aa 1f       	adc	r26, r26
    12cc:	64 9f       	mul	r22, r20
    12ce:	66 27       	eor	r22, r22
    12d0:	b0 0d       	add	r27, r0
    12d2:	a1 1d       	adc	r26, r1
    12d4:	66 1f       	adc	r22, r22
    12d6:	82 9f       	mul	r24, r18
    12d8:	22 27       	eor	r18, r18
    12da:	b0 0d       	add	r27, r0
    12dc:	a1 1d       	adc	r26, r1
    12de:	62 1f       	adc	r22, r18
    12e0:	73 9f       	mul	r23, r19
    12e2:	b0 0d       	add	r27, r0
    12e4:	a1 1d       	adc	r26, r1
    12e6:	62 1f       	adc	r22, r18
    12e8:	83 9f       	mul	r24, r19
    12ea:	a0 0d       	add	r26, r0
    12ec:	61 1d       	adc	r22, r1
    12ee:	22 1f       	adc	r18, r18
    12f0:	74 9f       	mul	r23, r20
    12f2:	33 27       	eor	r19, r19
    12f4:	a0 0d       	add	r26, r0
    12f6:	61 1d       	adc	r22, r1
    12f8:	23 1f       	adc	r18, r19
    12fa:	84 9f       	mul	r24, r20
    12fc:	60 0d       	add	r22, r0
    12fe:	21 1d       	adc	r18, r1
    1300:	82 2f       	mov	r24, r18
    1302:	76 2f       	mov	r23, r22
    1304:	6a 2f       	mov	r22, r26
    1306:	11 24       	eor	r1, r1
    1308:	9f 57       	subi	r25, 0x7F	; 127
    130a:	50 40       	sbci	r21, 0x00	; 0
    130c:	8a f0       	brmi	.+34     	; 0x1330 <__mulsf3_pse+0x84>
    130e:	e1 f0       	breq	.+56     	; 0x1348 <__mulsf3_pse+0x9c>
    1310:	88 23       	and	r24, r24
    1312:	4a f0       	brmi	.+18     	; 0x1326 <__mulsf3_pse+0x7a>
    1314:	ee 0f       	add	r30, r30
    1316:	ff 1f       	adc	r31, r31
    1318:	bb 1f       	adc	r27, r27
    131a:	66 1f       	adc	r22, r22
    131c:	77 1f       	adc	r23, r23
    131e:	88 1f       	adc	r24, r24
    1320:	91 50       	subi	r25, 0x01	; 1
    1322:	50 40       	sbci	r21, 0x00	; 0
    1324:	a9 f7       	brne	.-22     	; 0x1310 <__mulsf3_pse+0x64>
    1326:	9e 3f       	cpi	r25, 0xFE	; 254
    1328:	51 05       	cpc	r21, r1
    132a:	70 f0       	brcs	.+28     	; 0x1348 <__mulsf3_pse+0x9c>
    132c:	5c cf       	rjmp	.-328    	; 0x11e6 <__fp_inf>
    132e:	a6 cf       	rjmp	.-180    	; 0x127c <__fp_szero>
    1330:	5f 3f       	cpi	r21, 0xFF	; 255
    1332:	ec f3       	brlt	.-6      	; 0x132e <__mulsf3_pse+0x82>
    1334:	98 3e       	cpi	r25, 0xE8	; 232
    1336:	dc f3       	brlt	.-10     	; 0x132e <__mulsf3_pse+0x82>
    1338:	86 95       	lsr	r24
    133a:	77 95       	ror	r23
    133c:	67 95       	ror	r22
    133e:	b7 95       	ror	r27
    1340:	f7 95       	ror	r31
    1342:	e7 95       	ror	r30
    1344:	9f 5f       	subi	r25, 0xFF	; 255
    1346:	c1 f7       	brne	.-16     	; 0x1338 <__mulsf3_pse+0x8c>
    1348:	fe 2b       	or	r31, r30
    134a:	88 0f       	add	r24, r24
    134c:	91 1d       	adc	r25, r1
    134e:	96 95       	lsr	r25
    1350:	87 95       	ror	r24
    1352:	97 f9       	bld	r25, 7
    1354:	08 95       	ret

00001356 <__udivmodsi4>:
    1356:	a1 e2       	ldi	r26, 0x21	; 33
    1358:	1a 2e       	mov	r1, r26
    135a:	aa 1b       	sub	r26, r26
    135c:	bb 1b       	sub	r27, r27
    135e:	fd 01       	movw	r30, r26
    1360:	0d c0       	rjmp	.+26     	; 0x137c <__udivmodsi4_ep>

00001362 <__udivmodsi4_loop>:
    1362:	aa 1f       	adc	r26, r26
    1364:	bb 1f       	adc	r27, r27
    1366:	ee 1f       	adc	r30, r30
    1368:	ff 1f       	adc	r31, r31
    136a:	a2 17       	cp	r26, r18
    136c:	b3 07       	cpc	r27, r19
    136e:	e4 07       	cpc	r30, r20
    1370:	f5 07       	cpc	r31, r21
    1372:	20 f0       	brcs	.+8      	; 0x137c <__udivmodsi4_ep>
    1374:	a2 1b       	sub	r26, r18
    1376:	b3 0b       	sbc	r27, r19
    1378:	e4 0b       	sbc	r30, r20
    137a:	f5 0b       	sbc	r31, r21

0000137c <__udivmodsi4_ep>:
    137c:	66 1f       	adc	r22, r22
    137e:	77 1f       	adc	r23, r23
    1380:	88 1f       	adc	r24, r24
    1382:	99 1f       	adc	r25, r25
    1384:	1a 94       	dec	r1
    1386:	69 f7       	brne	.-38     	; 0x1362 <__udivmodsi4_loop>
    1388:	60 95       	com	r22
    138a:	70 95       	com	r23
    138c:	80 95       	com	r24
    138e:	90 95       	com	r25
    1390:	9b 01       	movw	r18, r22
    1392:	ac 01       	movw	r20, r24
    1394:	bd 01       	movw	r22, r26
    1396:	cf 01       	movw	r24, r30
    1398:	08 95       	ret

0000139a <__umulhisi3>:
    139a:	a2 9f       	mul	r26, r18
    139c:	b0 01       	movw	r22, r0
    139e:	b3 9f       	mul	r27, r19
    13a0:	c0 01       	movw	r24, r0
    13a2:	a3 9f       	mul	r26, r19
    13a4:	70 0d       	add	r23, r0
    13a6:	81 1d       	adc	r24, r1
    13a8:	11 24       	eor	r1, r1
    13aa:	91 1d       	adc	r25, r1
    13ac:	b2 9f       	mul	r27, r18
    13ae:	70 0d       	add	r23, r0
    13b0:	81 1d       	adc	r24, r1
    13b2:	11 24       	eor	r1, r1
    13b4:	91 1d       	adc	r25, r1
    13b6:	08 95       	ret

000013b8 <sprintf>:
    13b8:	0f 93       	push	r16
    13ba:	1f 93       	push	r17
    13bc:	cf 93       	push	r28
    13be:	df 93       	push	r29
    13c0:	cd b7       	in	r28, 0x3d	; 61
    13c2:	de b7       	in	r29, 0x3e	; 62
    13c4:	2e 97       	sbiw	r28, 0x0e	; 14
    13c6:	0f b6       	in	r0, 0x3f	; 63
    13c8:	f8 94       	cli
    13ca:	de bf       	out	0x3e, r29	; 62
    13cc:	0f be       	out	0x3f, r0	; 63
    13ce:	cd bf       	out	0x3d, r28	; 61
    13d0:	0e 89       	ldd	r16, Y+22	; 0x16
    13d2:	1f 89       	ldd	r17, Y+23	; 0x17
    13d4:	86 e0       	ldi	r24, 0x06	; 6
    13d6:	8c 83       	std	Y+4, r24	; 0x04
    13d8:	1a 83       	std	Y+2, r17	; 0x02
    13da:	09 83       	std	Y+1, r16	; 0x01
    13dc:	8f ef       	ldi	r24, 0xFF	; 255
    13de:	9f e7       	ldi	r25, 0x7F	; 127
    13e0:	9e 83       	std	Y+6, r25	; 0x06
    13e2:	8d 83       	std	Y+5, r24	; 0x05
    13e4:	ae 01       	movw	r20, r28
    13e6:	46 5e       	subi	r20, 0xE6	; 230
    13e8:	5f 4f       	sbci	r21, 0xFF	; 255
    13ea:	68 8d       	ldd	r22, Y+24	; 0x18
    13ec:	79 8d       	ldd	r23, Y+25	; 0x19
    13ee:	ce 01       	movw	r24, r28
    13f0:	01 96       	adiw	r24, 0x01	; 1
    13f2:	10 d0       	rcall	.+32     	; 0x1414 <vfprintf>
    13f4:	ef 81       	ldd	r30, Y+7	; 0x07
    13f6:	f8 85       	ldd	r31, Y+8	; 0x08
    13f8:	e0 0f       	add	r30, r16
    13fa:	f1 1f       	adc	r31, r17
    13fc:	10 82       	st	Z, r1
    13fe:	2e 96       	adiw	r28, 0x0e	; 14
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	f8 94       	cli
    1404:	de bf       	out	0x3e, r29	; 62
    1406:	0f be       	out	0x3f, r0	; 63
    1408:	cd bf       	out	0x3d, r28	; 61
    140a:	df 91       	pop	r29
    140c:	cf 91       	pop	r28
    140e:	1f 91       	pop	r17
    1410:	0f 91       	pop	r16
    1412:	08 95       	ret

00001414 <vfprintf>:
    1414:	2f 92       	push	r2
    1416:	3f 92       	push	r3
    1418:	4f 92       	push	r4
    141a:	5f 92       	push	r5
    141c:	6f 92       	push	r6
    141e:	7f 92       	push	r7
    1420:	8f 92       	push	r8
    1422:	9f 92       	push	r9
    1424:	af 92       	push	r10
    1426:	bf 92       	push	r11
    1428:	cf 92       	push	r12
    142a:	df 92       	push	r13
    142c:	ef 92       	push	r14
    142e:	ff 92       	push	r15
    1430:	0f 93       	push	r16
    1432:	1f 93       	push	r17
    1434:	cf 93       	push	r28
    1436:	df 93       	push	r29
    1438:	cd b7       	in	r28, 0x3d	; 61
    143a:	de b7       	in	r29, 0x3e	; 62
    143c:	2b 97       	sbiw	r28, 0x0b	; 11
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	f8 94       	cli
    1442:	de bf       	out	0x3e, r29	; 62
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	cd bf       	out	0x3d, r28	; 61
    1448:	6c 01       	movw	r12, r24
    144a:	7b 01       	movw	r14, r22
    144c:	8a 01       	movw	r16, r20
    144e:	fc 01       	movw	r30, r24
    1450:	17 82       	std	Z+7, r1	; 0x07
    1452:	16 82       	std	Z+6, r1	; 0x06
    1454:	83 81       	ldd	r24, Z+3	; 0x03
    1456:	81 ff       	sbrs	r24, 1
    1458:	bf c1       	rjmp	.+894    	; 0x17d8 <vfprintf+0x3c4>
    145a:	ce 01       	movw	r24, r28
    145c:	01 96       	adiw	r24, 0x01	; 1
    145e:	3c 01       	movw	r6, r24
    1460:	f6 01       	movw	r30, r12
    1462:	93 81       	ldd	r25, Z+3	; 0x03
    1464:	f7 01       	movw	r30, r14
    1466:	93 fd       	sbrc	r25, 3
    1468:	85 91       	lpm	r24, Z+
    146a:	93 ff       	sbrs	r25, 3
    146c:	81 91       	ld	r24, Z+
    146e:	7f 01       	movw	r14, r30
    1470:	88 23       	and	r24, r24
    1472:	09 f4       	brne	.+2      	; 0x1476 <vfprintf+0x62>
    1474:	ad c1       	rjmp	.+858    	; 0x17d0 <vfprintf+0x3bc>
    1476:	85 32       	cpi	r24, 0x25	; 37
    1478:	39 f4       	brne	.+14     	; 0x1488 <vfprintf+0x74>
    147a:	93 fd       	sbrc	r25, 3
    147c:	85 91       	lpm	r24, Z+
    147e:	93 ff       	sbrs	r25, 3
    1480:	81 91       	ld	r24, Z+
    1482:	7f 01       	movw	r14, r30
    1484:	85 32       	cpi	r24, 0x25	; 37
    1486:	21 f4       	brne	.+8      	; 0x1490 <vfprintf+0x7c>
    1488:	b6 01       	movw	r22, r12
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	d6 d1       	rcall	.+940    	; 0x183a <fputc>
    148e:	e8 cf       	rjmp	.-48     	; 0x1460 <vfprintf+0x4c>
    1490:	91 2c       	mov	r9, r1
    1492:	21 2c       	mov	r2, r1
    1494:	31 2c       	mov	r3, r1
    1496:	ff e1       	ldi	r31, 0x1F	; 31
    1498:	f3 15       	cp	r31, r3
    149a:	d8 f0       	brcs	.+54     	; 0x14d2 <vfprintf+0xbe>
    149c:	8b 32       	cpi	r24, 0x2B	; 43
    149e:	79 f0       	breq	.+30     	; 0x14be <vfprintf+0xaa>
    14a0:	38 f4       	brcc	.+14     	; 0x14b0 <vfprintf+0x9c>
    14a2:	80 32       	cpi	r24, 0x20	; 32
    14a4:	79 f0       	breq	.+30     	; 0x14c4 <vfprintf+0xb0>
    14a6:	83 32       	cpi	r24, 0x23	; 35
    14a8:	a1 f4       	brne	.+40     	; 0x14d2 <vfprintf+0xbe>
    14aa:	23 2d       	mov	r18, r3
    14ac:	20 61       	ori	r18, 0x10	; 16
    14ae:	1d c0       	rjmp	.+58     	; 0x14ea <vfprintf+0xd6>
    14b0:	8d 32       	cpi	r24, 0x2D	; 45
    14b2:	61 f0       	breq	.+24     	; 0x14cc <vfprintf+0xb8>
    14b4:	80 33       	cpi	r24, 0x30	; 48
    14b6:	69 f4       	brne	.+26     	; 0x14d2 <vfprintf+0xbe>
    14b8:	23 2d       	mov	r18, r3
    14ba:	21 60       	ori	r18, 0x01	; 1
    14bc:	16 c0       	rjmp	.+44     	; 0x14ea <vfprintf+0xd6>
    14be:	83 2d       	mov	r24, r3
    14c0:	82 60       	ori	r24, 0x02	; 2
    14c2:	38 2e       	mov	r3, r24
    14c4:	e3 2d       	mov	r30, r3
    14c6:	e4 60       	ori	r30, 0x04	; 4
    14c8:	3e 2e       	mov	r3, r30
    14ca:	2a c0       	rjmp	.+84     	; 0x1520 <vfprintf+0x10c>
    14cc:	f3 2d       	mov	r31, r3
    14ce:	f8 60       	ori	r31, 0x08	; 8
    14d0:	1d c0       	rjmp	.+58     	; 0x150c <vfprintf+0xf8>
    14d2:	37 fc       	sbrc	r3, 7
    14d4:	2d c0       	rjmp	.+90     	; 0x1530 <vfprintf+0x11c>
    14d6:	20 ed       	ldi	r18, 0xD0	; 208
    14d8:	28 0f       	add	r18, r24
    14da:	2a 30       	cpi	r18, 0x0A	; 10
    14dc:	40 f0       	brcs	.+16     	; 0x14ee <vfprintf+0xda>
    14de:	8e 32       	cpi	r24, 0x2E	; 46
    14e0:	b9 f4       	brne	.+46     	; 0x1510 <vfprintf+0xfc>
    14e2:	36 fc       	sbrc	r3, 6
    14e4:	75 c1       	rjmp	.+746    	; 0x17d0 <vfprintf+0x3bc>
    14e6:	23 2d       	mov	r18, r3
    14e8:	20 64       	ori	r18, 0x40	; 64
    14ea:	32 2e       	mov	r3, r18
    14ec:	19 c0       	rjmp	.+50     	; 0x1520 <vfprintf+0x10c>
    14ee:	36 fe       	sbrs	r3, 6
    14f0:	06 c0       	rjmp	.+12     	; 0x14fe <vfprintf+0xea>
    14f2:	8a e0       	ldi	r24, 0x0A	; 10
    14f4:	98 9e       	mul	r9, r24
    14f6:	20 0d       	add	r18, r0
    14f8:	11 24       	eor	r1, r1
    14fa:	92 2e       	mov	r9, r18
    14fc:	11 c0       	rjmp	.+34     	; 0x1520 <vfprintf+0x10c>
    14fe:	ea e0       	ldi	r30, 0x0A	; 10
    1500:	2e 9e       	mul	r2, r30
    1502:	20 0d       	add	r18, r0
    1504:	11 24       	eor	r1, r1
    1506:	22 2e       	mov	r2, r18
    1508:	f3 2d       	mov	r31, r3
    150a:	f0 62       	ori	r31, 0x20	; 32
    150c:	3f 2e       	mov	r3, r31
    150e:	08 c0       	rjmp	.+16     	; 0x1520 <vfprintf+0x10c>
    1510:	8c 36       	cpi	r24, 0x6C	; 108
    1512:	21 f4       	brne	.+8      	; 0x151c <vfprintf+0x108>
    1514:	83 2d       	mov	r24, r3
    1516:	80 68       	ori	r24, 0x80	; 128
    1518:	38 2e       	mov	r3, r24
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <vfprintf+0x10c>
    151c:	88 36       	cpi	r24, 0x68	; 104
    151e:	41 f4       	brne	.+16     	; 0x1530 <vfprintf+0x11c>
    1520:	f7 01       	movw	r30, r14
    1522:	93 fd       	sbrc	r25, 3
    1524:	85 91       	lpm	r24, Z+
    1526:	93 ff       	sbrs	r25, 3
    1528:	81 91       	ld	r24, Z+
    152a:	7f 01       	movw	r14, r30
    152c:	81 11       	cpse	r24, r1
    152e:	b3 cf       	rjmp	.-154    	; 0x1496 <vfprintf+0x82>
    1530:	98 2f       	mov	r25, r24
    1532:	9f 7d       	andi	r25, 0xDF	; 223
    1534:	95 54       	subi	r25, 0x45	; 69
    1536:	93 30       	cpi	r25, 0x03	; 3
    1538:	28 f4       	brcc	.+10     	; 0x1544 <vfprintf+0x130>
    153a:	0c 5f       	subi	r16, 0xFC	; 252
    153c:	1f 4f       	sbci	r17, 0xFF	; 255
    153e:	9f e3       	ldi	r25, 0x3F	; 63
    1540:	99 83       	std	Y+1, r25	; 0x01
    1542:	0d c0       	rjmp	.+26     	; 0x155e <vfprintf+0x14a>
    1544:	83 36       	cpi	r24, 0x63	; 99
    1546:	31 f0       	breq	.+12     	; 0x1554 <vfprintf+0x140>
    1548:	83 37       	cpi	r24, 0x73	; 115
    154a:	71 f0       	breq	.+28     	; 0x1568 <vfprintf+0x154>
    154c:	83 35       	cpi	r24, 0x53	; 83
    154e:	09 f0       	breq	.+2      	; 0x1552 <vfprintf+0x13e>
    1550:	55 c0       	rjmp	.+170    	; 0x15fc <vfprintf+0x1e8>
    1552:	20 c0       	rjmp	.+64     	; 0x1594 <vfprintf+0x180>
    1554:	f8 01       	movw	r30, r16
    1556:	80 81       	ld	r24, Z
    1558:	89 83       	std	Y+1, r24	; 0x01
    155a:	0e 5f       	subi	r16, 0xFE	; 254
    155c:	1f 4f       	sbci	r17, 0xFF	; 255
    155e:	88 24       	eor	r8, r8
    1560:	83 94       	inc	r8
    1562:	91 2c       	mov	r9, r1
    1564:	53 01       	movw	r10, r6
    1566:	12 c0       	rjmp	.+36     	; 0x158c <vfprintf+0x178>
    1568:	28 01       	movw	r4, r16
    156a:	f2 e0       	ldi	r31, 0x02	; 2
    156c:	4f 0e       	add	r4, r31
    156e:	51 1c       	adc	r5, r1
    1570:	f8 01       	movw	r30, r16
    1572:	a0 80       	ld	r10, Z
    1574:	b1 80       	ldd	r11, Z+1	; 0x01
    1576:	36 fe       	sbrs	r3, 6
    1578:	03 c0       	rjmp	.+6      	; 0x1580 <vfprintf+0x16c>
    157a:	69 2d       	mov	r22, r9
    157c:	70 e0       	ldi	r23, 0x00	; 0
    157e:	02 c0       	rjmp	.+4      	; 0x1584 <vfprintf+0x170>
    1580:	6f ef       	ldi	r22, 0xFF	; 255
    1582:	7f ef       	ldi	r23, 0xFF	; 255
    1584:	c5 01       	movw	r24, r10
    1586:	4e d1       	rcall	.+668    	; 0x1824 <strnlen>
    1588:	4c 01       	movw	r8, r24
    158a:	82 01       	movw	r16, r4
    158c:	f3 2d       	mov	r31, r3
    158e:	ff 77       	andi	r31, 0x7F	; 127
    1590:	3f 2e       	mov	r3, r31
    1592:	15 c0       	rjmp	.+42     	; 0x15be <vfprintf+0x1aa>
    1594:	28 01       	movw	r4, r16
    1596:	22 e0       	ldi	r18, 0x02	; 2
    1598:	42 0e       	add	r4, r18
    159a:	51 1c       	adc	r5, r1
    159c:	f8 01       	movw	r30, r16
    159e:	a0 80       	ld	r10, Z
    15a0:	b1 80       	ldd	r11, Z+1	; 0x01
    15a2:	36 fe       	sbrs	r3, 6
    15a4:	03 c0       	rjmp	.+6      	; 0x15ac <vfprintf+0x198>
    15a6:	69 2d       	mov	r22, r9
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	02 c0       	rjmp	.+4      	; 0x15b0 <vfprintf+0x19c>
    15ac:	6f ef       	ldi	r22, 0xFF	; 255
    15ae:	7f ef       	ldi	r23, 0xFF	; 255
    15b0:	c5 01       	movw	r24, r10
    15b2:	2d d1       	rcall	.+602    	; 0x180e <strnlen_P>
    15b4:	4c 01       	movw	r8, r24
    15b6:	f3 2d       	mov	r31, r3
    15b8:	f0 68       	ori	r31, 0x80	; 128
    15ba:	3f 2e       	mov	r3, r31
    15bc:	82 01       	movw	r16, r4
    15be:	33 fc       	sbrc	r3, 3
    15c0:	19 c0       	rjmp	.+50     	; 0x15f4 <vfprintf+0x1e0>
    15c2:	82 2d       	mov	r24, r2
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	88 16       	cp	r8, r24
    15c8:	99 06       	cpc	r9, r25
    15ca:	a0 f4       	brcc	.+40     	; 0x15f4 <vfprintf+0x1e0>
    15cc:	b6 01       	movw	r22, r12
    15ce:	80 e2       	ldi	r24, 0x20	; 32
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	33 d1       	rcall	.+614    	; 0x183a <fputc>
    15d4:	2a 94       	dec	r2
    15d6:	f5 cf       	rjmp	.-22     	; 0x15c2 <vfprintf+0x1ae>
    15d8:	f5 01       	movw	r30, r10
    15da:	37 fc       	sbrc	r3, 7
    15dc:	85 91       	lpm	r24, Z+
    15de:	37 fe       	sbrs	r3, 7
    15e0:	81 91       	ld	r24, Z+
    15e2:	5f 01       	movw	r10, r30
    15e4:	b6 01       	movw	r22, r12
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	28 d1       	rcall	.+592    	; 0x183a <fputc>
    15ea:	21 10       	cpse	r2, r1
    15ec:	2a 94       	dec	r2
    15ee:	21 e0       	ldi	r18, 0x01	; 1
    15f0:	82 1a       	sub	r8, r18
    15f2:	91 08       	sbc	r9, r1
    15f4:	81 14       	cp	r8, r1
    15f6:	91 04       	cpc	r9, r1
    15f8:	79 f7       	brne	.-34     	; 0x15d8 <vfprintf+0x1c4>
    15fa:	e1 c0       	rjmp	.+450    	; 0x17be <vfprintf+0x3aa>
    15fc:	84 36       	cpi	r24, 0x64	; 100
    15fe:	11 f0       	breq	.+4      	; 0x1604 <vfprintf+0x1f0>
    1600:	89 36       	cpi	r24, 0x69	; 105
    1602:	39 f5       	brne	.+78     	; 0x1652 <vfprintf+0x23e>
    1604:	f8 01       	movw	r30, r16
    1606:	37 fe       	sbrs	r3, 7
    1608:	07 c0       	rjmp	.+14     	; 0x1618 <vfprintf+0x204>
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	0c 5f       	subi	r16, 0xFC	; 252
    1614:	1f 4f       	sbci	r17, 0xFF	; 255
    1616:	08 c0       	rjmp	.+16     	; 0x1628 <vfprintf+0x214>
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	07 2e       	mov	r0, r23
    161e:	00 0c       	add	r0, r0
    1620:	88 0b       	sbc	r24, r24
    1622:	99 0b       	sbc	r25, r25
    1624:	0e 5f       	subi	r16, 0xFE	; 254
    1626:	1f 4f       	sbci	r17, 0xFF	; 255
    1628:	f3 2d       	mov	r31, r3
    162a:	ff 76       	andi	r31, 0x6F	; 111
    162c:	3f 2e       	mov	r3, r31
    162e:	97 ff       	sbrs	r25, 7
    1630:	09 c0       	rjmp	.+18     	; 0x1644 <vfprintf+0x230>
    1632:	90 95       	com	r25
    1634:	80 95       	com	r24
    1636:	70 95       	com	r23
    1638:	61 95       	neg	r22
    163a:	7f 4f       	sbci	r23, 0xFF	; 255
    163c:	8f 4f       	sbci	r24, 0xFF	; 255
    163e:	9f 4f       	sbci	r25, 0xFF	; 255
    1640:	f0 68       	ori	r31, 0x80	; 128
    1642:	3f 2e       	mov	r3, r31
    1644:	2a e0       	ldi	r18, 0x0A	; 10
    1646:	30 e0       	ldi	r19, 0x00	; 0
    1648:	a3 01       	movw	r20, r6
    164a:	33 d1       	rcall	.+614    	; 0x18b2 <__ultoa_invert>
    164c:	88 2e       	mov	r8, r24
    164e:	86 18       	sub	r8, r6
    1650:	44 c0       	rjmp	.+136    	; 0x16da <vfprintf+0x2c6>
    1652:	85 37       	cpi	r24, 0x75	; 117
    1654:	31 f4       	brne	.+12     	; 0x1662 <vfprintf+0x24e>
    1656:	23 2d       	mov	r18, r3
    1658:	2f 7e       	andi	r18, 0xEF	; 239
    165a:	b2 2e       	mov	r11, r18
    165c:	2a e0       	ldi	r18, 0x0A	; 10
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	25 c0       	rjmp	.+74     	; 0x16ac <vfprintf+0x298>
    1662:	93 2d       	mov	r25, r3
    1664:	99 7f       	andi	r25, 0xF9	; 249
    1666:	b9 2e       	mov	r11, r25
    1668:	8f 36       	cpi	r24, 0x6F	; 111
    166a:	c1 f0       	breq	.+48     	; 0x169c <vfprintf+0x288>
    166c:	18 f4       	brcc	.+6      	; 0x1674 <vfprintf+0x260>
    166e:	88 35       	cpi	r24, 0x58	; 88
    1670:	79 f0       	breq	.+30     	; 0x1690 <vfprintf+0x27c>
    1672:	ae c0       	rjmp	.+348    	; 0x17d0 <vfprintf+0x3bc>
    1674:	80 37       	cpi	r24, 0x70	; 112
    1676:	19 f0       	breq	.+6      	; 0x167e <vfprintf+0x26a>
    1678:	88 37       	cpi	r24, 0x78	; 120
    167a:	21 f0       	breq	.+8      	; 0x1684 <vfprintf+0x270>
    167c:	a9 c0       	rjmp	.+338    	; 0x17d0 <vfprintf+0x3bc>
    167e:	e9 2f       	mov	r30, r25
    1680:	e0 61       	ori	r30, 0x10	; 16
    1682:	be 2e       	mov	r11, r30
    1684:	b4 fe       	sbrs	r11, 4
    1686:	0d c0       	rjmp	.+26     	; 0x16a2 <vfprintf+0x28e>
    1688:	fb 2d       	mov	r31, r11
    168a:	f4 60       	ori	r31, 0x04	; 4
    168c:	bf 2e       	mov	r11, r31
    168e:	09 c0       	rjmp	.+18     	; 0x16a2 <vfprintf+0x28e>
    1690:	34 fe       	sbrs	r3, 4
    1692:	0a c0       	rjmp	.+20     	; 0x16a8 <vfprintf+0x294>
    1694:	29 2f       	mov	r18, r25
    1696:	26 60       	ori	r18, 0x06	; 6
    1698:	b2 2e       	mov	r11, r18
    169a:	06 c0       	rjmp	.+12     	; 0x16a8 <vfprintf+0x294>
    169c:	28 e0       	ldi	r18, 0x08	; 8
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	05 c0       	rjmp	.+10     	; 0x16ac <vfprintf+0x298>
    16a2:	20 e1       	ldi	r18, 0x10	; 16
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	02 c0       	rjmp	.+4      	; 0x16ac <vfprintf+0x298>
    16a8:	20 e1       	ldi	r18, 0x10	; 16
    16aa:	32 e0       	ldi	r19, 0x02	; 2
    16ac:	f8 01       	movw	r30, r16
    16ae:	b7 fe       	sbrs	r11, 7
    16b0:	07 c0       	rjmp	.+14     	; 0x16c0 <vfprintf+0x2ac>
    16b2:	60 81       	ld	r22, Z
    16b4:	71 81       	ldd	r23, Z+1	; 0x01
    16b6:	82 81       	ldd	r24, Z+2	; 0x02
    16b8:	93 81       	ldd	r25, Z+3	; 0x03
    16ba:	0c 5f       	subi	r16, 0xFC	; 252
    16bc:	1f 4f       	sbci	r17, 0xFF	; 255
    16be:	06 c0       	rjmp	.+12     	; 0x16cc <vfprintf+0x2b8>
    16c0:	60 81       	ld	r22, Z
    16c2:	71 81       	ldd	r23, Z+1	; 0x01
    16c4:	80 e0       	ldi	r24, 0x00	; 0
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 5f       	subi	r16, 0xFE	; 254
    16ca:	1f 4f       	sbci	r17, 0xFF	; 255
    16cc:	a3 01       	movw	r20, r6
    16ce:	f1 d0       	rcall	.+482    	; 0x18b2 <__ultoa_invert>
    16d0:	88 2e       	mov	r8, r24
    16d2:	86 18       	sub	r8, r6
    16d4:	fb 2d       	mov	r31, r11
    16d6:	ff 77       	andi	r31, 0x7F	; 127
    16d8:	3f 2e       	mov	r3, r31
    16da:	36 fe       	sbrs	r3, 6
    16dc:	0d c0       	rjmp	.+26     	; 0x16f8 <vfprintf+0x2e4>
    16de:	23 2d       	mov	r18, r3
    16e0:	2e 7f       	andi	r18, 0xFE	; 254
    16e2:	a2 2e       	mov	r10, r18
    16e4:	89 14       	cp	r8, r9
    16e6:	58 f4       	brcc	.+22     	; 0x16fe <vfprintf+0x2ea>
    16e8:	34 fe       	sbrs	r3, 4
    16ea:	0b c0       	rjmp	.+22     	; 0x1702 <vfprintf+0x2ee>
    16ec:	32 fc       	sbrc	r3, 2
    16ee:	09 c0       	rjmp	.+18     	; 0x1702 <vfprintf+0x2ee>
    16f0:	83 2d       	mov	r24, r3
    16f2:	8e 7e       	andi	r24, 0xEE	; 238
    16f4:	a8 2e       	mov	r10, r24
    16f6:	05 c0       	rjmp	.+10     	; 0x1702 <vfprintf+0x2ee>
    16f8:	b8 2c       	mov	r11, r8
    16fa:	a3 2c       	mov	r10, r3
    16fc:	03 c0       	rjmp	.+6      	; 0x1704 <vfprintf+0x2f0>
    16fe:	b8 2c       	mov	r11, r8
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <vfprintf+0x2f0>
    1702:	b9 2c       	mov	r11, r9
    1704:	a4 fe       	sbrs	r10, 4
    1706:	0f c0       	rjmp	.+30     	; 0x1726 <vfprintf+0x312>
    1708:	fe 01       	movw	r30, r28
    170a:	e8 0d       	add	r30, r8
    170c:	f1 1d       	adc	r31, r1
    170e:	80 81       	ld	r24, Z
    1710:	80 33       	cpi	r24, 0x30	; 48
    1712:	21 f4       	brne	.+8      	; 0x171c <vfprintf+0x308>
    1714:	9a 2d       	mov	r25, r10
    1716:	99 7e       	andi	r25, 0xE9	; 233
    1718:	a9 2e       	mov	r10, r25
    171a:	09 c0       	rjmp	.+18     	; 0x172e <vfprintf+0x31a>
    171c:	a2 fe       	sbrs	r10, 2
    171e:	06 c0       	rjmp	.+12     	; 0x172c <vfprintf+0x318>
    1720:	b3 94       	inc	r11
    1722:	b3 94       	inc	r11
    1724:	04 c0       	rjmp	.+8      	; 0x172e <vfprintf+0x31a>
    1726:	8a 2d       	mov	r24, r10
    1728:	86 78       	andi	r24, 0x86	; 134
    172a:	09 f0       	breq	.+2      	; 0x172e <vfprintf+0x31a>
    172c:	b3 94       	inc	r11
    172e:	a3 fc       	sbrc	r10, 3
    1730:	10 c0       	rjmp	.+32     	; 0x1752 <vfprintf+0x33e>
    1732:	a0 fe       	sbrs	r10, 0
    1734:	06 c0       	rjmp	.+12     	; 0x1742 <vfprintf+0x32e>
    1736:	b2 14       	cp	r11, r2
    1738:	80 f4       	brcc	.+32     	; 0x175a <vfprintf+0x346>
    173a:	28 0c       	add	r2, r8
    173c:	92 2c       	mov	r9, r2
    173e:	9b 18       	sub	r9, r11
    1740:	0d c0       	rjmp	.+26     	; 0x175c <vfprintf+0x348>
    1742:	b2 14       	cp	r11, r2
    1744:	58 f4       	brcc	.+22     	; 0x175c <vfprintf+0x348>
    1746:	b6 01       	movw	r22, r12
    1748:	80 e2       	ldi	r24, 0x20	; 32
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	76 d0       	rcall	.+236    	; 0x183a <fputc>
    174e:	b3 94       	inc	r11
    1750:	f8 cf       	rjmp	.-16     	; 0x1742 <vfprintf+0x32e>
    1752:	b2 14       	cp	r11, r2
    1754:	18 f4       	brcc	.+6      	; 0x175c <vfprintf+0x348>
    1756:	2b 18       	sub	r2, r11
    1758:	02 c0       	rjmp	.+4      	; 0x175e <vfprintf+0x34a>
    175a:	98 2c       	mov	r9, r8
    175c:	21 2c       	mov	r2, r1
    175e:	a4 fe       	sbrs	r10, 4
    1760:	0f c0       	rjmp	.+30     	; 0x1780 <vfprintf+0x36c>
    1762:	b6 01       	movw	r22, r12
    1764:	80 e3       	ldi	r24, 0x30	; 48
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	68 d0       	rcall	.+208    	; 0x183a <fputc>
    176a:	a2 fe       	sbrs	r10, 2
    176c:	16 c0       	rjmp	.+44     	; 0x179a <vfprintf+0x386>
    176e:	a1 fc       	sbrc	r10, 1
    1770:	03 c0       	rjmp	.+6      	; 0x1778 <vfprintf+0x364>
    1772:	88 e7       	ldi	r24, 0x78	; 120
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	02 c0       	rjmp	.+4      	; 0x177c <vfprintf+0x368>
    1778:	88 e5       	ldi	r24, 0x58	; 88
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	b6 01       	movw	r22, r12
    177e:	0c c0       	rjmp	.+24     	; 0x1798 <vfprintf+0x384>
    1780:	8a 2d       	mov	r24, r10
    1782:	86 78       	andi	r24, 0x86	; 134
    1784:	51 f0       	breq	.+20     	; 0x179a <vfprintf+0x386>
    1786:	a1 fe       	sbrs	r10, 1
    1788:	02 c0       	rjmp	.+4      	; 0x178e <vfprintf+0x37a>
    178a:	8b e2       	ldi	r24, 0x2B	; 43
    178c:	01 c0       	rjmp	.+2      	; 0x1790 <vfprintf+0x37c>
    178e:	80 e2       	ldi	r24, 0x20	; 32
    1790:	a7 fc       	sbrc	r10, 7
    1792:	8d e2       	ldi	r24, 0x2D	; 45
    1794:	b6 01       	movw	r22, r12
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	50 d0       	rcall	.+160    	; 0x183a <fputc>
    179a:	89 14       	cp	r8, r9
    179c:	30 f4       	brcc	.+12     	; 0x17aa <vfprintf+0x396>
    179e:	b6 01       	movw	r22, r12
    17a0:	80 e3       	ldi	r24, 0x30	; 48
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	4a d0       	rcall	.+148    	; 0x183a <fputc>
    17a6:	9a 94       	dec	r9
    17a8:	f8 cf       	rjmp	.-16     	; 0x179a <vfprintf+0x386>
    17aa:	8a 94       	dec	r8
    17ac:	f3 01       	movw	r30, r6
    17ae:	e8 0d       	add	r30, r8
    17b0:	f1 1d       	adc	r31, r1
    17b2:	80 81       	ld	r24, Z
    17b4:	b6 01       	movw	r22, r12
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	40 d0       	rcall	.+128    	; 0x183a <fputc>
    17ba:	81 10       	cpse	r8, r1
    17bc:	f6 cf       	rjmp	.-20     	; 0x17aa <vfprintf+0x396>
    17be:	22 20       	and	r2, r2
    17c0:	09 f4       	brne	.+2      	; 0x17c4 <vfprintf+0x3b0>
    17c2:	4e ce       	rjmp	.-868    	; 0x1460 <vfprintf+0x4c>
    17c4:	b6 01       	movw	r22, r12
    17c6:	80 e2       	ldi	r24, 0x20	; 32
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	37 d0       	rcall	.+110    	; 0x183a <fputc>
    17cc:	2a 94       	dec	r2
    17ce:	f7 cf       	rjmp	.-18     	; 0x17be <vfprintf+0x3aa>
    17d0:	f6 01       	movw	r30, r12
    17d2:	86 81       	ldd	r24, Z+6	; 0x06
    17d4:	97 81       	ldd	r25, Z+7	; 0x07
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <vfprintf+0x3c8>
    17d8:	8f ef       	ldi	r24, 0xFF	; 255
    17da:	9f ef       	ldi	r25, 0xFF	; 255
    17dc:	2b 96       	adiw	r28, 0x0b	; 11
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	df 91       	pop	r29
    17ea:	cf 91       	pop	r28
    17ec:	1f 91       	pop	r17
    17ee:	0f 91       	pop	r16
    17f0:	ff 90       	pop	r15
    17f2:	ef 90       	pop	r14
    17f4:	df 90       	pop	r13
    17f6:	cf 90       	pop	r12
    17f8:	bf 90       	pop	r11
    17fa:	af 90       	pop	r10
    17fc:	9f 90       	pop	r9
    17fe:	8f 90       	pop	r8
    1800:	7f 90       	pop	r7
    1802:	6f 90       	pop	r6
    1804:	5f 90       	pop	r5
    1806:	4f 90       	pop	r4
    1808:	3f 90       	pop	r3
    180a:	2f 90       	pop	r2
    180c:	08 95       	ret

0000180e <strnlen_P>:
    180e:	fc 01       	movw	r30, r24
    1810:	05 90       	lpm	r0, Z+
    1812:	61 50       	subi	r22, 0x01	; 1
    1814:	70 40       	sbci	r23, 0x00	; 0
    1816:	01 10       	cpse	r0, r1
    1818:	d8 f7       	brcc	.-10     	; 0x1810 <strnlen_P+0x2>
    181a:	80 95       	com	r24
    181c:	90 95       	com	r25
    181e:	8e 0f       	add	r24, r30
    1820:	9f 1f       	adc	r25, r31
    1822:	08 95       	ret

00001824 <strnlen>:
    1824:	fc 01       	movw	r30, r24
    1826:	61 50       	subi	r22, 0x01	; 1
    1828:	70 40       	sbci	r23, 0x00	; 0
    182a:	01 90       	ld	r0, Z+
    182c:	01 10       	cpse	r0, r1
    182e:	d8 f7       	brcc	.-10     	; 0x1826 <strnlen+0x2>
    1830:	80 95       	com	r24
    1832:	90 95       	com	r25
    1834:	8e 0f       	add	r24, r30
    1836:	9f 1f       	adc	r25, r31
    1838:	08 95       	ret

0000183a <fputc>:
    183a:	0f 93       	push	r16
    183c:	1f 93       	push	r17
    183e:	cf 93       	push	r28
    1840:	df 93       	push	r29
    1842:	fb 01       	movw	r30, r22
    1844:	23 81       	ldd	r18, Z+3	; 0x03
    1846:	21 fd       	sbrc	r18, 1
    1848:	03 c0       	rjmp	.+6      	; 0x1850 <fputc+0x16>
    184a:	8f ef       	ldi	r24, 0xFF	; 255
    184c:	9f ef       	ldi	r25, 0xFF	; 255
    184e:	2c c0       	rjmp	.+88     	; 0x18a8 <fputc+0x6e>
    1850:	22 ff       	sbrs	r18, 2
    1852:	16 c0       	rjmp	.+44     	; 0x1880 <fputc+0x46>
    1854:	46 81       	ldd	r20, Z+6	; 0x06
    1856:	57 81       	ldd	r21, Z+7	; 0x07
    1858:	24 81       	ldd	r18, Z+4	; 0x04
    185a:	35 81       	ldd	r19, Z+5	; 0x05
    185c:	42 17       	cp	r20, r18
    185e:	53 07       	cpc	r21, r19
    1860:	44 f4       	brge	.+16     	; 0x1872 <fputc+0x38>
    1862:	a0 81       	ld	r26, Z
    1864:	b1 81       	ldd	r27, Z+1	; 0x01
    1866:	9d 01       	movw	r18, r26
    1868:	2f 5f       	subi	r18, 0xFF	; 255
    186a:	3f 4f       	sbci	r19, 0xFF	; 255
    186c:	31 83       	std	Z+1, r19	; 0x01
    186e:	20 83       	st	Z, r18
    1870:	8c 93       	st	X, r24
    1872:	26 81       	ldd	r18, Z+6	; 0x06
    1874:	37 81       	ldd	r19, Z+7	; 0x07
    1876:	2f 5f       	subi	r18, 0xFF	; 255
    1878:	3f 4f       	sbci	r19, 0xFF	; 255
    187a:	37 83       	std	Z+7, r19	; 0x07
    187c:	26 83       	std	Z+6, r18	; 0x06
    187e:	14 c0       	rjmp	.+40     	; 0x18a8 <fputc+0x6e>
    1880:	8b 01       	movw	r16, r22
    1882:	ec 01       	movw	r28, r24
    1884:	fb 01       	movw	r30, r22
    1886:	00 84       	ldd	r0, Z+8	; 0x08
    1888:	f1 85       	ldd	r31, Z+9	; 0x09
    188a:	e0 2d       	mov	r30, r0
    188c:	19 95       	eicall
    188e:	89 2b       	or	r24, r25
    1890:	e1 f6       	brne	.-72     	; 0x184a <fputc+0x10>
    1892:	d8 01       	movw	r26, r16
    1894:	16 96       	adiw	r26, 0x06	; 6
    1896:	8d 91       	ld	r24, X+
    1898:	9c 91       	ld	r25, X
    189a:	17 97       	sbiw	r26, 0x07	; 7
    189c:	01 96       	adiw	r24, 0x01	; 1
    189e:	17 96       	adiw	r26, 0x07	; 7
    18a0:	9c 93       	st	X, r25
    18a2:	8e 93       	st	-X, r24
    18a4:	16 97       	sbiw	r26, 0x06	; 6
    18a6:	ce 01       	movw	r24, r28
    18a8:	df 91       	pop	r29
    18aa:	cf 91       	pop	r28
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	08 95       	ret

000018b2 <__ultoa_invert>:
    18b2:	fa 01       	movw	r30, r20
    18b4:	aa 27       	eor	r26, r26
    18b6:	28 30       	cpi	r18, 0x08	; 8
    18b8:	51 f1       	breq	.+84     	; 0x190e <__ultoa_invert+0x5c>
    18ba:	20 31       	cpi	r18, 0x10	; 16
    18bc:	81 f1       	breq	.+96     	; 0x191e <__ultoa_invert+0x6c>
    18be:	e8 94       	clt
    18c0:	6f 93       	push	r22
    18c2:	6e 7f       	andi	r22, 0xFE	; 254
    18c4:	6e 5f       	subi	r22, 0xFE	; 254
    18c6:	7f 4f       	sbci	r23, 0xFF	; 255
    18c8:	8f 4f       	sbci	r24, 0xFF	; 255
    18ca:	9f 4f       	sbci	r25, 0xFF	; 255
    18cc:	af 4f       	sbci	r26, 0xFF	; 255
    18ce:	b1 e0       	ldi	r27, 0x01	; 1
    18d0:	3e d0       	rcall	.+124    	; 0x194e <__ultoa_invert+0x9c>
    18d2:	b4 e0       	ldi	r27, 0x04	; 4
    18d4:	3c d0       	rcall	.+120    	; 0x194e <__ultoa_invert+0x9c>
    18d6:	67 0f       	add	r22, r23
    18d8:	78 1f       	adc	r23, r24
    18da:	89 1f       	adc	r24, r25
    18dc:	9a 1f       	adc	r25, r26
    18de:	a1 1d       	adc	r26, r1
    18e0:	68 0f       	add	r22, r24
    18e2:	79 1f       	adc	r23, r25
    18e4:	8a 1f       	adc	r24, r26
    18e6:	91 1d       	adc	r25, r1
    18e8:	a1 1d       	adc	r26, r1
    18ea:	6a 0f       	add	r22, r26
    18ec:	71 1d       	adc	r23, r1
    18ee:	81 1d       	adc	r24, r1
    18f0:	91 1d       	adc	r25, r1
    18f2:	a1 1d       	adc	r26, r1
    18f4:	20 d0       	rcall	.+64     	; 0x1936 <__ultoa_invert+0x84>
    18f6:	09 f4       	brne	.+2      	; 0x18fa <__ultoa_invert+0x48>
    18f8:	68 94       	set
    18fa:	3f 91       	pop	r19
    18fc:	2a e0       	ldi	r18, 0x0A	; 10
    18fe:	26 9f       	mul	r18, r22
    1900:	11 24       	eor	r1, r1
    1902:	30 19       	sub	r19, r0
    1904:	30 5d       	subi	r19, 0xD0	; 208
    1906:	31 93       	st	Z+, r19
    1908:	de f6       	brtc	.-74     	; 0x18c0 <__ultoa_invert+0xe>
    190a:	cf 01       	movw	r24, r30
    190c:	08 95       	ret
    190e:	46 2f       	mov	r20, r22
    1910:	47 70       	andi	r20, 0x07	; 7
    1912:	40 5d       	subi	r20, 0xD0	; 208
    1914:	41 93       	st	Z+, r20
    1916:	b3 e0       	ldi	r27, 0x03	; 3
    1918:	0f d0       	rcall	.+30     	; 0x1938 <__ultoa_invert+0x86>
    191a:	c9 f7       	brne	.-14     	; 0x190e <__ultoa_invert+0x5c>
    191c:	f6 cf       	rjmp	.-20     	; 0x190a <__ultoa_invert+0x58>
    191e:	46 2f       	mov	r20, r22
    1920:	4f 70       	andi	r20, 0x0F	; 15
    1922:	40 5d       	subi	r20, 0xD0	; 208
    1924:	4a 33       	cpi	r20, 0x3A	; 58
    1926:	18 f0       	brcs	.+6      	; 0x192e <__ultoa_invert+0x7c>
    1928:	49 5d       	subi	r20, 0xD9	; 217
    192a:	31 fd       	sbrc	r19, 1
    192c:	40 52       	subi	r20, 0x20	; 32
    192e:	41 93       	st	Z+, r20
    1930:	02 d0       	rcall	.+4      	; 0x1936 <__ultoa_invert+0x84>
    1932:	a9 f7       	brne	.-22     	; 0x191e <__ultoa_invert+0x6c>
    1934:	ea cf       	rjmp	.-44     	; 0x190a <__ultoa_invert+0x58>
    1936:	b4 e0       	ldi	r27, 0x04	; 4
    1938:	a6 95       	lsr	r26
    193a:	97 95       	ror	r25
    193c:	87 95       	ror	r24
    193e:	77 95       	ror	r23
    1940:	67 95       	ror	r22
    1942:	ba 95       	dec	r27
    1944:	c9 f7       	brne	.-14     	; 0x1938 <__ultoa_invert+0x86>
    1946:	00 97       	sbiw	r24, 0x00	; 0
    1948:	61 05       	cpc	r22, r1
    194a:	71 05       	cpc	r23, r1
    194c:	08 95       	ret
    194e:	9b 01       	movw	r18, r22
    1950:	ac 01       	movw	r20, r24
    1952:	0a 2e       	mov	r0, r26
    1954:	06 94       	lsr	r0
    1956:	57 95       	ror	r21
    1958:	47 95       	ror	r20
    195a:	37 95       	ror	r19
    195c:	27 95       	ror	r18
    195e:	ba 95       	dec	r27
    1960:	c9 f7       	brne	.-14     	; 0x1954 <__ultoa_invert+0xa2>
    1962:	62 0f       	add	r22, r18
    1964:	73 1f       	adc	r23, r19
    1966:	84 1f       	adc	r24, r20
    1968:	95 1f       	adc	r25, r21
    196a:	a0 1d       	adc	r26, r0
    196c:	08 95       	ret

0000196e <_exit>:
    196e:	f8 94       	cli

00001970 <__stop_program>:
    1970:	ff cf       	rjmp	.-2      	; 0x1970 <__stop_program>
